!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ANGLE	DoseCalcIO/beam.h	/^            ANGLE,$/;"	m	class:BEAM::ORIENT_T
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	447;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	450;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	453;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	456;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	460;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	462;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	464;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	468;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	471;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	474;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	479;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	482;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	485;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	490;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	493;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	496;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	499;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	502;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	505;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	508;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	511;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	514;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	517;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	522;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	525;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	528;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	531;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	534;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	537;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	540;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	158;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	161;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	164;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	167;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	171;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	173;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	175;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	179;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	182;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	185;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	190;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	193;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	196;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	201;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	204;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	207;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	210;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	213;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	216;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	219;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	222;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	225;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	228;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	233;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	236;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	239;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	242;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	245;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	248;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	251;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	432;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	435;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	438;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	441;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	445;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	447;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	449;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	453;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	456;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	459;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	464;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	467;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	470;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	475;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	478;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	481;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	484;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	487;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	490;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	493;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	496;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	499;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	502;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	507;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	510;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	513;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	516;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	519;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	522;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	525;"	d	file:
ARR2VECT	DoseCalcIO/macros.h	15;"	d
ARR3VECT	DoseCalcIO/macros.h	16;"	d
ARRAY_VALUE	include/client/dummy_defs.h	160;"	d
ASCII	include/rapidjson/encodings.h	/^struct ASCII {$/;"	s
Accept	include/rapidjson/document.h	/^    bool Accept(Handler& handler) const {$/;"	f	class:GenericValue
ActiveSegment	dosecalc-preprocess/fmapProcessing.cpp	/^struct ActiveSegment {$/;"	s	file:
AddChunk	include/rapidjson/allocators.h	/^    bool AddChunk(size_t capacity) {$/;"	f	class:MemoryPoolAllocator
AddConst	include/rapidjson/internal/meta.h	/^template <typename T> struct AddConst { typedef const T Type; };$/;"	s	namespace:internal
AddMember	include/rapidjson/document.h	/^    AddMember(GenericValue& name, T value, Allocator& allocator) {$/;"	f	class:GenericValue
AddMember	include/rapidjson/document.h	/^    AddMember(StringRefType name, T value, Allocator& allocator) {$/;"	f	class:GenericValue
AddMember	include/rapidjson/document.h	/^    GenericObject AddMember(StringRefType name, StringRefType value, AllocatorType& allocator) const { value_.AddMember(name, value, allocator); return *this; }$/;"	f	class:GenericObject
AddMember	include/rapidjson/document.h	/^    GenericObject AddMember(StringRefType name, ValueType& value, AllocatorType& allocator) const { value_.AddMember(name, value, allocator); return *this; }$/;"	f	class:GenericObject
AddMember	include/rapidjson/document.h	/^    GenericObject AddMember(StringRefType name, ValueType&& value, AllocatorType& allocator) const { value_.AddMember(name, value, allocator); return *this; }$/;"	f	class:GenericObject
AddMember	include/rapidjson/document.h	/^    GenericObject AddMember(ValueType& name, StringRefType value, AllocatorType& allocator) const { value_.AddMember(name, value, allocator); return *this; }$/;"	f	class:GenericObject
AddMember	include/rapidjson/document.h	/^    GenericObject AddMember(ValueType& name, ValueType& value, AllocatorType& allocator) const { value_.AddMember(name, value, allocator); return *this; }$/;"	f	class:GenericObject
AddMember	include/rapidjson/document.h	/^    GenericObject AddMember(ValueType& name, ValueType&& value, AllocatorType& allocator) const { value_.AddMember(name, value, allocator); return *this; }$/;"	f	class:GenericObject
AddMember	include/rapidjson/document.h	/^    GenericObject AddMember(ValueType& name, std::basic_string<Ch>& value, AllocatorType& allocator) const { value_.AddMember(name, value, allocator); return *this; }$/;"	f	class:GenericObject
AddMember	include/rapidjson/document.h	/^    GenericObject AddMember(ValueType&& name, ValueType& value, AllocatorType& allocator) const { value_.AddMember(name, value, allocator); return *this; }$/;"	f	class:GenericObject
AddMember	include/rapidjson/document.h	/^    GenericObject AddMember(ValueType&& name, ValueType&& value, AllocatorType& allocator) const { value_.AddMember(name, value, allocator); return *this; }$/;"	f	class:GenericObject
AddMember	include/rapidjson/document.h	/^    GenericValue& AddMember(GenericValue& name, GenericValue& value, Allocator& allocator) {$/;"	f	class:GenericValue
AddMember	include/rapidjson/document.h	/^    GenericValue& AddMember(GenericValue& name, GenericValue&& value, Allocator& allocator) {$/;"	f	class:GenericValue
AddMember	include/rapidjson/document.h	/^    GenericValue& AddMember(GenericValue& name, StringRefType value, Allocator& allocator) {$/;"	f	class:GenericValue
AddMember	include/rapidjson/document.h	/^    GenericValue& AddMember(GenericValue& name, std::basic_string<Ch>& value, Allocator& allocator) {$/;"	f	class:GenericValue
AddMember	include/rapidjson/document.h	/^    GenericValue& AddMember(GenericValue&& name, GenericValue& value, Allocator& allocator) {$/;"	f	class:GenericValue
AddMember	include/rapidjson/document.h	/^    GenericValue& AddMember(GenericValue&& name, GenericValue&& value, Allocator& allocator) {$/;"	f	class:GenericValue
AddMember	include/rapidjson/document.h	/^    GenericValue& AddMember(StringRefType name, GenericValue& value, Allocator& allocator) {$/;"	f	class:GenericValue
AddMember	include/rapidjson/document.h	/^    GenericValue& AddMember(StringRefType name, GenericValue&& value, Allocator& allocator) {$/;"	f	class:GenericValue
AddMember	include/rapidjson/document.h	/^    GenericValue& AddMember(StringRefType name, StringRefType value, Allocator& allocator) {$/;"	f	class:GenericValue
AddMember	include/rapidjson/document.h	/^    template <typename T> RAPIDJSON_DISABLEIF_RETURN((internal::OrExpr<internal::IsPointer<T>, internal::IsGenericValue<T> >), (GenericObject)) AddMember(StringRefType name, T value, AllocatorType& allocator) const { value_.AddMember(name, value, allocator); return *this; }$/;"	f	class:GenericObject
AddMember	include/rapidjson/document.h	/^    template <typename T> RAPIDJSON_DISABLEIF_RETURN((internal::OrExpr<internal::IsPointer<T>, internal::IsGenericValue<T> >), (ValueType&)) AddMember(ValueType& name, T value, AllocatorType& allocator) const { value_.AddMember(name, value, allocator); return *this; }$/;"	f	class:GenericObject
AddState	include/rapidjson/internal/regex.h	/^    bool AddState(Stack<Allocator>& l, SizeType index) {$/;"	f	class:internal::GenericRegexSearch
AddType	include/rapidjson/schema.h	/^    void AddType(const ValueType& type) {$/;"	f	class:internal::Schema
AddUniqueElement	include/rapidjson/schema.h	/^    void AddUniqueElement(V1& a, const V2& v) {$/;"	f	class:internal::Schema
AllocatorType	include/rapidjson/document.h	/^    typedef Allocator AllocatorType;                        \/\/!< Allocator type from template parameter.$/;"	t	class:GenericDocument
AllocatorType	include/rapidjson/document.h	/^    typedef Allocator AllocatorType;                \/\/!< Allocator type from template parameter.$/;"	t	class:GenericValue
AllocatorType	include/rapidjson/document.h	/^    typedef typename ValueType::AllocatorType AllocatorType;$/;"	t	class:GenericArray
AllocatorType	include/rapidjson/document.h	/^    typedef typename ValueType::AllocatorType AllocatorType;$/;"	t	class:GenericObject
AllocatorType	include/rapidjson/schema.h	/^    typedef Allocator AllocatorType;$/;"	t	class:GenericSchemaDocument
AllocatorType	include/rapidjson/schema.h	/^    typedef typename SchemaDocumentType::AllocatorType AllocatorType;$/;"	t	class:internal::Schema
AndExpr	include/rapidjson/internal/meta.h	/^template <typename C1, typename C2> struct AndExpr : AndExprCond<C1::Value, C2::Value>::Type {};$/;"	s	namespace:internal
AndExprCond	include/rapidjson/internal/meta.h	/^template <> struct AndExprCond<true, true> : TrueType {};$/;"	s	namespace:internal
AndExprCond	include/rapidjson/internal/meta.h	/^template <bool Cond1, bool Cond2> struct AndExprCond : FalseType {};$/;"	s	namespace:internal
Append	include/rapidjson/internal/regex.h	/^    SizeType Append(SizeType l1, SizeType l2) {$/;"	f	class:internal::GenericRegex
Append	include/rapidjson/pointer.h	/^    Append(T* name, Allocator* allocator = 0) const {$/;"	f	class:GenericPointer
Append	include/rapidjson/pointer.h	/^    GenericPointer Append(SizeType index, Allocator* allocator = 0) const {$/;"	f	class:GenericPointer
Append	include/rapidjson/pointer.h	/^    GenericPointer Append(const Ch* name, SizeType length, Allocator* allocator = 0) const {$/;"	f	class:GenericPointer
Append	include/rapidjson/pointer.h	/^    GenericPointer Append(const Token& token, Allocator* allocator = 0) const {$/;"	f	class:GenericPointer
Append	include/rapidjson/pointer.h	/^    GenericPointer Append(const ValueType& token, Allocator* allocator = 0) const {$/;"	f	class:GenericPointer
Append	include/rapidjson/pointer.h	/^    GenericPointer Append(const std::basic_string<Ch>& name, Allocator* allocator = 0) const {$/;"	f	class:GenericPointer
AppendDecimal64	include/rapidjson/internal/biginteger.h	/^    void AppendDecimal64(const char* begin, const char* end) {$/;"	f	class:internal::BigInteger
AppendIndexToken	include/rapidjson/schema.h	/^    RAPIDJSON_FORCEINLINE static void AppendIndexToken(Stack& documentStack, SizeType index) {$/;"	f	struct:internal::TokenHelper
AppendToken	include/rapidjson/schema.h	/^    void AppendToken(const Ch* str, SizeType len) {$/;"	f	class:GenericSchemaValidator
Apply	include/rapidjson/internal/meta.h	/^template <> struct SelectIfImpl<false> { template <typename T1, typename T2> struct Apply { typedef T2 Type; }; };$/;"	s	struct:internal::SelectIfImpl
Apply	include/rapidjson/internal/meta.h	/^template <bool C> struct SelectIfImpl { template <typename T1, typename T2> struct Apply { typedef T1 Type; }; };$/;"	s	struct:internal::SelectIfImpl
Array	include/rapidjson/document.h	/^    typedef GenericArray<false, ValueT> Array;$/;"	t	class:GenericArray
Array	include/rapidjson/document.h	/^    typedef GenericArray<false, ValueType> Array;$/;"	t	class:GenericValue
ArrayData	include/rapidjson/document.h	/^    struct ArrayData {$/;"	s	class:GenericValue
ArrayProps	DoseCalcIO/io_data_structs.h	/^struct ArrayProps {$/;"	s
ArraySizeError	dosecalc-beam/nvbbRayConvolve_host.cu	/^        ArraySizeError(const std::string& str) : std::runtime_error(str) {}$/;"	f	class:ArraySizeError
ArraySizeError	dosecalc-beam/nvbbRayConvolve_host.cu	/^class ArraySizeError : public virtual std::runtime_error {$/;"	c	file:
ArraySizeError	dosecalc-beamlet/nvbbRayConvolve_host.cu	/^        ArraySizeError(float theta, float phi, uint3 oldsize, REV_DATA* rev) :$/;"	f	class:ArraySizeError
ArraySizeError	dosecalc-beamlet/nvbbRayConvolve_host.cu	/^class ArraySizeError : public virtual std::runtime_error {$/;"	c	file:
ArrayType	include/rapidjson/document.h	/^    typedef typename ValueType::Array ArrayType;$/;"	t	struct:internal::TypeHelper
ArrayType	include/rapidjson/document.h	/^    typedef typename ValueType::ConstArray ArrayType;$/;"	t	struct:internal::TypeHelper
AssignIfExist	include/rapidjson/schema.h	/^    static void AssignIfExist(SizeType& out, const ValueType& value, const ValueType& name) {$/;"	f	class:internal::Schema
AssignIfExist	include/rapidjson/schema.h	/^    static void AssignIfExist(bool& out, const ValueType& value, const ValueType& name) {$/;"	f	class:internal::Schema
AssignIfExist	include/rapidjson/schema.h	/^    void AssignIfExist(SchemaArray& out, SchemaDocumentType& schemaDocument, const PointerType& p, const ValueType& value, const ValueType& name, const ValueType& document) {$/;"	f	class:internal::Schema
AutoTimer	Utilities/timing.h	/^        AutoTimer() { start(); }$/;"	f	class:AutoTimer
AutoTimer	Utilities/timing.h	/^class AutoTimer : public Timer {$/;"	c
AutoUTF	include/rapidjson/encodings.h	/^struct AutoUTF {$/;"	s
AutoUTFInputStream	include/rapidjson/encodedstream.h	/^    AutoUTFInputStream(InputByteStream& is, UTFType type = kUTF8) : is_(&is), type_(type), hasBOM_(false) {$/;"	f	class:AutoUTFInputStream
AutoUTFInputStream	include/rapidjson/encodedstream.h	/^class AutoUTFInputStream {$/;"	c
AutoUTFOutputStream	include/rapidjson/encodedstream.h	/^    AutoUTFOutputStream(OutputByteStream& os, UTFType type, bool putBOM) : os_(&os), type_(type) {$/;"	f	class:AutoUTFOutputStream
AutoUTFOutputStream	include/rapidjson/encodedstream.h	/^class AutoUTFOutputStream {$/;"	c
BEAM	DoseCalcIO/beam.h	/^class BEAM$/;"	c
BEAM_SPEC_MANDATORY	DoseCalcIO/beam.cpp	365;"	d	file:
BEAM_SPEC_OPT_DIR	DoseCalcIO/beam.cpp	367;"	d	file:
BEAM_SPEC_OPT_ISO	DoseCalcIO/beam.cpp	366;"	d	file:
BEAM_SPEC_OPT_SAD	DoseCalcIO/beam.cpp	368;"	d	file:
BID	include/client/dummy_defs.h	/^    int BID;               \/\/ ID of the branching client node \/\/ PARENT$/;"	m	class:MGCS_PARAMS
BLACK	Utilities/logging.h	/^    BLACK, RED, GREEN,$/;"	e	enum:COLOR
BLT_CONV_DATA	DoseCalcIO/io_data_structs.h	/^struct BLT_CONV_DATA {$/;"	s
BLUE	Utilities/logging.h	/^    YELLOW, BLUE, MAGENTA,$/;"	e	enum:COLOR
BOOST_AUTO_TEST_CASE	unit_tests/beam.cpp	/^BOOST_AUTO_TEST_CASE(constructors) {$/;"	f
BOOST_AUTO_TEST_CASE	unit_tests/fmap_post_apertureready.cpp	/^BOOST_AUTO_TEST_CASE(constructors) {$/;"	f
BOOST_TEST_DYN_LINK	unit_tests/beam.cpp	1;"	d	file:
BOOST_TEST_DYN_LINK	unit_tests/fmap_post_apertureready.cpp	1;"	d	file:
BOOST_TEST_MODULE	unit_tests/beam.cpp	2;"	d	file:
BOOST_TEST_MODULE	unit_tests/fmap_post_apertureready.cpp	2;"	d	file:
Base	include/rapidjson/prettywriter.h	/^    typedef Writer<OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags> Base;$/;"	t	class:PrettyWriter
Base	include/rapidjson/reader.h	/^        typedef NumberStream<InputStream, false, false> Base;$/;"	t	class:GenericReader::NumberStream
Base	include/rapidjson/reader.h	/^        typedef NumberStream<InputStream, true, false> Base;$/;"	t	class:GenericReader::NumberStream
BaseROIMask	DoseCalcIO/roi.h	/^        BaseROIMask() {}$/;"	f	class:BaseROIMask
BaseROIMask	DoseCalcIO/roi.h	/^        BaseROIMask(std::string name, ArrayProps props) : name{name}, props(props) {}$/;"	f	class:BaseROIMask
BaseROIMask	DoseCalcIO/roi.h	/^class BaseROIMask {$/;"	c
BaseReaderHandler	include/rapidjson/reader.h	/^struct BaseReaderHandler {$/;"	s
BaseType	include/rapidjson/document.h	/^    typedef std::iterator<std::random_access_iterator_tag,ValueType> BaseType;$/;"	t	class:GenericMemberIterator
BaseW2FWorker	dosecalc-beamlet/sparsify_manager.h	/^        BaseW2FWorker(SparsifyManager& parent) : parent{parent} { _assign_workerid(); }$/;"	f	class:BaseW2FWorker
BaseW2FWorker	dosecalc-beamlet/sparsify_manager.h	/^        BaseW2FWorker(const BaseW2FWorker& other) : parent{other.parent} { _assign_workerid(); }; \/* Copy const. *\/$/;"	f	class:BaseW2FWorker
BaseW2FWorker	dosecalc-beamlet/sparsify_manager.h	/^class BaseW2FWorker : public Thread {$/;"	c
BasicIStreamWrapper	include/rapidjson/istreamwrapper.h	/^    BasicIStreamWrapper(StreamType& stream) : stream_(stream), count_(), peekBuffer_() {}$/;"	f	class:BasicIStreamWrapper
BasicIStreamWrapper	include/rapidjson/istreamwrapper.h	/^class BasicIStreamWrapper {$/;"	c
BasicOStreamWrapper	include/rapidjson/ostreamwrapper.h	/^    BasicOStreamWrapper(StreamType& stream) : stream_(stream) {}$/;"	f	class:BasicOStreamWrapper
BasicOStreamWrapper	include/rapidjson/ostreamwrapper.h	/^class BasicOStreamWrapper {$/;"	c
Beam	extern/python/fmaps.py	/^class Beam:$/;"	c
BeamletSparsifyWorker	dosecalc-beamlet/sparsify_worker.h	/^        BeamletSparsifyWorker(wqueue<SparsifyData>& queue, const float sparsity_thresh=_default_sparsity_threshold)$/;"	f	class:BeamletSparsifyWorker
BeamletSparsifyWorker	dosecalc-beamlet/sparsify_worker.h	/^class BeamletSparsifyWorker : public SparsifyWorkerBase {$/;"	c
Begin	include/rapidjson/document.h	/^    ConstValueIterator Begin() const { return const_cast<GenericValue&>(*this).Begin(); }$/;"	f	class:GenericValue
Begin	include/rapidjson/document.h	/^    ValueIterator Begin() const { return value_.Begin(); }$/;"	f	class:GenericArray
Begin	include/rapidjson/document.h	/^    ValueIterator Begin() { RAPIDJSON_ASSERT(IsArray()); return GetElementsPointer(); }$/;"	f	class:GenericValue
BeginValue	include/rapidjson/schema.h	/^    bool BeginValue() {$/;"	f	class:GenericSchemaValidator
BeginValue	include/rapidjson/schema.h	/^    bool BeginValue(Context& context) const {$/;"	f	class:internal::Schema
BigInteger	include/rapidjson/internal/biginteger.h	/^    BigInteger(const BigInteger& rhs) : count_(rhs.count_) {$/;"	f	class:internal::BigInteger
BigInteger	include/rapidjson/internal/biginteger.h	/^    BigInteger(const char* decimals, size_t length) : count_(1) {$/;"	f	class:internal::BigInteger
BigInteger	include/rapidjson/internal/biginteger.h	/^    explicit BigInteger(uint64_t u) : count_(1) {$/;"	f	class:internal::BigInteger
BigInteger	include/rapidjson/internal/biginteger.h	/^class BigInteger {$/;"	c	namespace:internal
Bool	include/rapidjson/document.h	/^    bool Bool(bool b) { new (stack_.template Push<ValueType>()) ValueType(b); return true; }$/;"	f	class:GenericDocument
Bool	include/rapidjson/prettywriter.h	/^    bool Bool(bool b)           { PrettyPrefix(b ? kTrueType : kFalseType); return Base::WriteBool(b); }$/;"	f	class:PrettyWriter
Bool	include/rapidjson/reader.h	/^    bool Bool(bool) { return static_cast<Override&>(*this).Default(); }$/;"	f	struct:BaseReaderHandler
Bool	include/rapidjson/schema.h	/^    bool Bool(Context& context, bool) const { $/;"	f	class:internal::Schema
Bool	include/rapidjson/schema.h	/^    bool Bool(bool b)       { RAPIDJSON_SCHEMA_HANDLE_VALUE_(Bool,   (CurrentContext(), b), (b)); }$/;"	f	class:GenericSchemaValidator
Bool	include/rapidjson/schema.h	/^    bool Bool(bool b) { return WriteType(b ? kTrueType : kFalseType); }$/;"	f	class:internal::Hasher
Bool	include/rapidjson/writer.h	/^    bool Bool(bool b)           { Prefix(b ? kTrueType : kFalseType); return EndValue(WriteBool(b)); }$/;"	f	class:Writer
BoolExpr	include/rapidjson/internal/meta.h	/^template <typename C> struct BoolExpr : SelectIf<C,TrueType,FalseType>::Type {};$/;"	s	namespace:internal
BoolType	include/rapidjson/internal/meta.h	/^template <bool Cond> struct BoolType {$/;"	s	namespace:internal
BoolVolume	DoseCalcIO/volume.h	/^typedef Volume<uint8_t> BoolVolume;$/;"	t
Bottom	include/rapidjson/internal/stack.h	/^    T* Bottom() { return reinterpret_cast<T*>(stack_); }$/;"	f	class:internal::Stack
Bottom	include/rapidjson/internal/stack.h	/^    const T* Bottom() const { return reinterpret_cast<T*>(stack_); }$/;"	f	class:internal::Stack
C16	include/rapidjson/reader.h	350;"	d
C16	include/rapidjson/reader.h	352;"	d
C16	include/rapidjson/reader.h	386;"	d
C16	include/rapidjson/reader.h	388;"	d
CC	anonymize_dicom/Makefile	/^CC=g++$/;"	m
CC_FLAGS	anonymize_dicom/Makefile	/^CC_FLAGS= -g$/;"	m
CENTRAL	dosecalc-beamlet/sparsify_manager.h	/^    CENTRAL,$/;"	m	class:WRITE_STRATEGY
CHECK_ACTIVE_THREAD	dosecalc-beamlet/nvbbRayConvolve_device.cu	15;"	d	file:
CLIArgs	dosecalc-preprocess/argparser.h	/^struct CLIArgs {$/;"	s
CMAKE_BINARY_DIR	build/CudaUtilities/Makefile	/^CMAKE_BINARY_DIR = \/raid10\/rs4pi\/latest\/build$/;"	m
CMAKE_BINARY_DIR	build/DoseCalcAlgo/Makefile	/^CMAKE_BINARY_DIR = \/raid10\/rs4pi\/latest\/build$/;"	m
CMAKE_BINARY_DIR	build/DoseCalcIO/Makefile	/^CMAKE_BINARY_DIR = \/raid10\/rs4pi\/latest\/build$/;"	m
CMAKE_BINARY_DIR	build/Makefile	/^CMAKE_BINARY_DIR = \/raid10\/rs4pi\/latest\/build$/;"	m
CMAKE_BINARY_DIR	build/RTClasses/Makefile	/^CMAKE_BINARY_DIR = \/raid10\/rs4pi\/latest\/build$/;"	m
CMAKE_BINARY_DIR	build/Utilities/Makefile	/^CMAKE_BINARY_DIR = \/raid10\/rs4pi\/latest\/build$/;"	m
CMAKE_BINARY_DIR	build/dosecalc-beam/Makefile	/^CMAKE_BINARY_DIR = \/raid10\/rs4pi\/latest\/build$/;"	m
CMAKE_BINARY_DIR	build/dosecalc-beamlet/Makefile	/^CMAKE_BINARY_DIR = \/raid10\/rs4pi\/latest\/build$/;"	m
CMAKE_BINARY_DIR	build/dosecalc-preprocess/Makefile	/^CMAKE_BINARY_DIR = \/raid10\/rs4pi\/latest\/build$/;"	m
CMAKE_BINARY_DIR	build/unit_tests/Makefile	/^CMAKE_BINARY_DIR = \/raid10\/rs4pi\/latest\/build$/;"	m
CMAKE_COMMAND	build/CudaUtilities/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/DoseCalcAlgo/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/DoseCalcIO/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/RTClasses/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/Utilities/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/dosecalc-beam/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/dosecalc-beamlet/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/dosecalc-preprocess/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/unit_tests/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_SOURCE_DIR	build/CudaUtilities/Makefile	/^CMAKE_SOURCE_DIR = \/raid10\/rs4pi\/latest$/;"	m
CMAKE_SOURCE_DIR	build/DoseCalcAlgo/Makefile	/^CMAKE_SOURCE_DIR = \/raid10\/rs4pi\/latest$/;"	m
CMAKE_SOURCE_DIR	build/DoseCalcIO/Makefile	/^CMAKE_SOURCE_DIR = \/raid10\/rs4pi\/latest$/;"	m
CMAKE_SOURCE_DIR	build/Makefile	/^CMAKE_SOURCE_DIR = \/raid10\/rs4pi\/latest$/;"	m
CMAKE_SOURCE_DIR	build/RTClasses/Makefile	/^CMAKE_SOURCE_DIR = \/raid10\/rs4pi\/latest$/;"	m
CMAKE_SOURCE_DIR	build/Utilities/Makefile	/^CMAKE_SOURCE_DIR = \/raid10\/rs4pi\/latest$/;"	m
CMAKE_SOURCE_DIR	build/dosecalc-beam/Makefile	/^CMAKE_SOURCE_DIR = \/raid10\/rs4pi\/latest$/;"	m
CMAKE_SOURCE_DIR	build/dosecalc-beamlet/Makefile	/^CMAKE_SOURCE_DIR = \/raid10\/rs4pi\/latest$/;"	m
CMAKE_SOURCE_DIR	build/dosecalc-preprocess/Makefile	/^CMAKE_SOURCE_DIR = \/raid10\/rs4pi\/latest$/;"	m
CMAKE_SOURCE_DIR	build/unit_tests/Makefile	/^CMAKE_SOURCE_DIR = \/raid10\/rs4pi\/latest$/;"	m
CNTR_DATA	RTClasses/rtstruct.h	/^    class CNTR_DATA$/;"	c	class:RTStruct
COLOR	Utilities/logging.h	/^enum COLOR {$/;"	g
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	108;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	115;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	122;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	129;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	137;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	144;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	151;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	159;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	164;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	171;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	174;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	183;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	186;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	189;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	192;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	19;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	207;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	222;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	229;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	243;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	253;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	271;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	280;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	294;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	311;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	314;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	56;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	64;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	70;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	76;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	85;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	94;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	10;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	30;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	33;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	108;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	115;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	122;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	129;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	137;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	13;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	144;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	151;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	159;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	164;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	171;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	174;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	183;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	186;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	19;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	201;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	216;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	223;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	237;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	251;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	269;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	278;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	296;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	299;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	56;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	64;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	70;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	76;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	85;"	d	file:
COMPILER_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	94;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	226;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	285;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	290;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	220;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	283;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	288;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	102;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	110;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	117;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	124;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	130;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	139;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	146;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	152;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	160;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	166;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	177;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	195;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	200;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	211;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	223;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	233;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	244;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	255;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	274;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	27;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	282;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	287;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	296;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	301;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	57;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	65;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	72;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	78;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	87;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	97;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	15;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	102;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	110;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	117;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	124;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	130;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	139;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	146;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	152;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	15;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	160;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	166;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	177;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	189;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	194;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	205;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	217;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	227;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	239;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	241;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	253;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	272;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	27;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	280;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	285;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	57;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	65;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	72;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	78;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	87;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	97;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	103;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	111;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	118;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	125;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	131;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	140;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	147;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	153;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	161;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	167;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	178;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	196;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	201;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	212;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	224;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	234;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	246;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	256;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	275;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	283;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	288;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	28;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	297;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	302;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	58;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	66;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	73;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	79;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	88;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	98;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	16;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	103;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	111;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	118;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	125;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	131;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	140;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	147;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	153;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	161;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	167;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	16;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	178;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	190;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	195;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	206;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	218;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	228;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	244;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	254;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	273;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	281;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	286;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	28;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	58;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	66;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	73;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	79;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	88;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	98;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	104;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	112;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	119;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	126;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	132;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	141;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	148;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	155;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	168;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	179;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	197;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	202;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	213;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	225;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	235;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	249;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	260;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	263;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	276;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	284;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	289;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	298;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	303;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	30;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	32;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	60;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	67;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	81;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	90;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	99;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	17;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	104;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	112;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	119;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	126;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	132;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	141;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	148;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	155;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	168;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	179;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	191;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	196;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	207;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	219;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	229;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	247;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	258;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	261;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	274;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	282;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	287;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	30;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	32;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	60;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	67;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	81;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	90;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	99;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	133;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	219;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	267;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	36;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	133;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	213;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	265;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	36;"	d	file:
COMP_BEAM_T	DoseCalcIO/beam.h	/^        struct COMP_BEAM_T {$/;"	s	class:BEAM
CONSTANTS	include/server/brain_defs.h	/^struct CONSTANTS {$/;"	s
COPY	include/rapidjson/encodings.h	147;"	d
COPY	include/rapidjson/encodings.h	173;"	d
COPY	include/rapidjson/encodings.h	180;"	d
COPY	include/rapidjson/encodings.h	199;"	d
CT	RTClasses/rtimages.h	/^    enum class SOPTYPE { RTIMAGE, CT, MR };$/;"	m	class:RTImage::SOPTYPE
CTIMAGE_SOP_CLASS_UID	RTClasses/rtimages.h	12;"	d
CTLUT	DoseCalcIO/ctlut.h	/^    CTLUT(INTERPTYPE interp_style=INTERPTYPE::LINEAR) : label(""), interp_style(interp_style) {};$/;"	f	struct:CTLUT
CTLUT	DoseCalcIO/ctlut.h	/^    CTLUT(std::string label, INTERPTYPE interp_style=INTERPTYPE::LINEAR)$/;"	f	struct:CTLUT
CTLUT	DoseCalcIO/ctlut.h	/^struct CTLUT {$/;"	s
CTbase	include/client/dummy_defs.h	/^    char CTbase[32];$/;"	m	class:MGCS_PARAMS
CUDA_C_16F	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^CUDA_C_16F = 6, $/;"	e	enum:cudaDataType_t	file:
CUDA_C_32F	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^CUDA_C_32F = 4, $/;"	e	enum:cudaDataType_t	file:
CUDA_C_32I	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^CUDA_C_32I, $/;"	e	enum:cudaDataType_t	file:
CUDA_C_32U	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^CUDA_C_32U$/;"	e	enum:cudaDataType_t	file:
CUDA_C_64F	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^CUDA_C_64F = 5, $/;"	e	enum:cudaDataType_t	file:
CUDA_C_8I	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^CUDA_C_8I = 7, $/;"	e	enum:cudaDataType_t	file:
CUDA_C_8U	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^CUDA_C_8U, $/;"	e	enum:cudaDataType_t	file:
CUDA_R_16F	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^CUDA_R_16F = 2, $/;"	e	enum:cudaDataType_t	file:
CUDA_R_32F	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^CUDA_R_32F = 0, $/;"	e	enum:cudaDataType_t	file:
CUDA_R_32I	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^CUDA_R_32I, $/;"	e	enum:cudaDataType_t	file:
CUDA_R_32U	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^CUDA_R_32U, $/;"	e	enum:cudaDataType_t	file:
CUDA_R_64F	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^CUDA_R_64F = 1, $/;"	e	enum:cudaDataType_t	file:
CUDA_R_8I	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^CUDA_R_8I = 3, $/;"	e	enum:cudaDataType_t	file:
CUDA_R_8U	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^CUDA_R_8U, $/;"	e	enum:cudaDataType_t	file:
CUDEV_FXN	CudaUtilities/macros.h	6;"	d
CUDEV_FXN	CudaUtilities/macros.h	8;"	d
CUDEV_FXN	DoseCalcIO/macros.h	6;"	d
CUDEV_FXN	DoseCalcIO/macros.h	8;"	d
CUTThread	Utilities/multithreading.h	/^typedef HANDLE CUTThread;$/;"	t
CUTThread	Utilities/multithreading.h	/^typedef pthread_t CUTThread;$/;"	t
CUTThread	include/cuda-common/multithreading.h	/^typedef HANDLE CUTThread;$/;"	t
CUTThread	include/cuda-common/multithreading.h	/^typedef pthread_t CUTThread;$/;"	t
CUT_THREADEND	Utilities/multithreading.h	26;"	d
CUT_THREADEND	Utilities/multithreading.h	36;"	d
CUT_THREADEND	include/cuda-common/multithreading.h	26;"	d
CUT_THREADEND	include/cuda-common/multithreading.h	36;"	d
CUT_THREADPROC	Utilities/multithreading.h	25;"	d
CUT_THREADPROC	Utilities/multithreading.h	35;"	d
CUT_THREADPROC	include/cuda-common/multithreading.h	25;"	d
CUT_THREADPROC	include/cuda-common/multithreading.h	35;"	d
CUT_THREADROUTINE	Utilities/multithreading.h	/^typedef unsigned(WINAPI *CUT_THREADROUTINE)(void *);$/;"	t
CUT_THREADROUTINE	Utilities/multithreading.h	/^typedef void *(*CUT_THREADROUTINE)(void *);$/;"	t
CUT_THREADROUTINE	include/cuda-common/multithreading.h	/^typedef unsigned(WINAPI *CUT_THREADROUTINE)(void *);$/;"	t
CUT_THREADROUTINE	include/cuda-common/multithreading.h	/^typedef void *(*CUT_THREADROUTINE)(void *);$/;"	t
CXX_STD	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	608;"	d	file:
CXX_STD	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	610;"	d	file:
CXX_STD	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	613;"	d	file:
CXX_STD	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	616;"	d	file:
CXX_STD	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	618;"	d	file:
CYAN	Utilities/logging.h	/^    CYAN, WHITE$/;"	e	enum:COLOR
C_DIALECT	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	623;"	d	file:
C_DIALECT	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	625;"	d	file:
C_DIALECT	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	628;"	d	file:
C_DIALECT	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	630;"	d	file:
C_DIALECT	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	632;"	d	file:
Capacity	include/rapidjson/allocators.h	/^    size_t Capacity() const {$/;"	f	class:MemoryPoolAllocator
Capacity	include/rapidjson/document.h	/^    SizeType Capacity() const { RAPIDJSON_ASSERT(IsArray()); return data_.a.capacity; }$/;"	f	class:GenericValue
Capacity	include/rapidjson/document.h	/^    SizeType Capacity() const { return value_.Capacity(); }$/;"	f	class:GenericArray
CenterAt	extern/python/volume.py	/^    def CenterAt(cls, arr, center, voxelsize=(0.1, 0.1, 0.1)):$/;"	m	class:Volume
Ch	include/rapidjson/document.h	/^    typedef CharType Ch; \/\/!< character type of the string$/;"	t	struct:GenericStringRef
Ch	include/rapidjson/document.h	/^    typedef typename Encoding::Ch Ch;                       \/\/!< Character type derived from Encoding.$/;"	t	class:GenericDocument
Ch	include/rapidjson/document.h	/^    typedef typename Encoding::Ch Ch;               \/\/!< Character type derived from Encoding.$/;"	t	class:GenericValue
Ch	include/rapidjson/document.h	/^    typedef typename ValueType::Ch Ch;$/;"	t	class:GenericObject
Ch	include/rapidjson/encodedstream.h	/^    typedef CharType Ch;$/;"	t	class:AutoUTFInputStream
Ch	include/rapidjson/encodedstream.h	/^    typedef CharType Ch;$/;"	t	class:AutoUTFOutputStream
Ch	include/rapidjson/encodedstream.h	/^    typedef UTF8<>::Ch Ch;$/;"	t	class:EncodedInputStream
Ch	include/rapidjson/encodedstream.h	/^    typedef typename Encoding::Ch Ch;$/;"	t	class:EncodedInputStream
Ch	include/rapidjson/encodedstream.h	/^    typedef typename Encoding::Ch Ch;$/;"	t	class:EncodedOutputStream
Ch	include/rapidjson/encodings.h	/^    typedef CharType Ch;$/;"	t	struct:ASCII
Ch	include/rapidjson/encodings.h	/^    typedef CharType Ch;$/;"	t	struct:AutoUTF
Ch	include/rapidjson/encodings.h	/^    typedef CharType Ch;$/;"	t	struct:UTF16
Ch	include/rapidjson/encodings.h	/^    typedef CharType Ch;$/;"	t	struct:UTF32
Ch	include/rapidjson/encodings.h	/^    typedef CharType Ch;$/;"	t	struct:UTF8
Ch	include/rapidjson/filereadstream.h	/^    typedef char Ch;    \/\/!< Character type (byte).$/;"	t	class:FileReadStream
Ch	include/rapidjson/filewritestream.h	/^    typedef char Ch;    \/\/!< Character type. Only support char.$/;"	t	class:FileWriteStream
Ch	include/rapidjson/internal/regex.h	/^    typedef typename Encoding::Ch Ch;$/;"	t	class:internal::GenericRegex
Ch	include/rapidjson/internal/regex.h	/^    typedef typename Encoding::Ch Ch;$/;"	t	class:internal::GenericRegexSearch
Ch	include/rapidjson/istreamwrapper.h	/^    typedef typename StreamType::char_type Ch;$/;"	t	class:BasicIStreamWrapper
Ch	include/rapidjson/memorybuffer.h	/^    typedef char Ch; \/\/ byte$/;"	t	struct:GenericMemoryBuffer
Ch	include/rapidjson/memorystream.h	/^    typedef char Ch; \/\/ byte$/;"	t	struct:MemoryStream
Ch	include/rapidjson/ostreamwrapper.h	/^    typedef typename StreamType::char_type Ch;$/;"	t	class:BasicOStreamWrapper
Ch	include/rapidjson/pointer.h	/^        typedef typename ValueType::Ch Ch;$/;"	t	class:GenericPointer::PercentDecodeStream
Ch	include/rapidjson/pointer.h	/^    typedef typename ValueType::Ch Ch;                      \/\/!< Character type from Value$/;"	t	class:GenericPointer
Ch	include/rapidjson/prettywriter.h	/^    typedef typename Base::Ch Ch;$/;"	t	class:PrettyWriter
Ch	include/rapidjson/reader.h	/^        typedef CharType Ch;$/;"	t	class:GenericReader::StackStream
Ch	include/rapidjson/reader.h	/^        typedef typename InputStream::Ch Ch;$/;"	t	class:GenericReader::NumberStream
Ch	include/rapidjson/reader.h	/^    typedef typename Encoding::Ch Ch;$/;"	t	struct:BaseReaderHandler
Ch	include/rapidjson/reader.h	/^    typedef typename SourceEncoding::Ch Ch; \/\/!< SourceEncoding character type$/;"	t	class:GenericReader
Ch	include/rapidjson/schema.h	/^    typedef typename Encoding::Ch Ch;$/;"	t	class:internal::Hasher
Ch	include/rapidjson/schema.h	/^    typedef typename EncodingType::Ch Ch;$/;"	t	class:GenericSchemaDocument
Ch	include/rapidjson/schema.h	/^    typedef typename EncodingType::Ch Ch;$/;"	t	class:GenericSchemaValidator
Ch	include/rapidjson/schema.h	/^    typedef typename EncodingType::Ch Ch;$/;"	t	class:internal::Schema
Ch	include/rapidjson/schema.h	/^    typedef typename InputStream::Ch Ch;$/;"	t	class:SchemaValidatingReader
Ch	include/rapidjson/schema.h	/^    typedef typename SchemaDocumentType::Ch Ch;$/;"	t	class:IGenericRemoteSchemaDocumentProvider
Ch	include/rapidjson/schema.h	/^    typedef typename ValueType::Ch Ch;$/;"	t	struct:internal::SchemaValidationContext
Ch	include/rapidjson/stream.h	/^    typedef typename Encoding::Ch Ch;$/;"	t	struct:GenericInsituStringStream
Ch	include/rapidjson/stream.h	/^    typedef typename Encoding::Ch Ch;$/;"	t	struct:GenericStringStream
Ch	include/rapidjson/stringbuffer.h	/^    typedef typename Encoding::Ch Ch;$/;"	t	class:GenericStringBuffer
Ch	include/rapidjson/writer.h	/^    typedef typename SourceEncoding::Ch Ch;$/;"	t	class:Writer
CharType	include/rapidjson/document.h	/^    GenericStringRef(CharType (&str)[N]) \/* = delete *\/;$/;"	m	struct:GenericStringRef
CharVolume	DoseCalcIO/volume.h	/^typedef Volume<char>    CharVolume;$/;"	t
CharacterEscape	include/rapidjson/internal/regex.h	/^    bool CharacterEscape(DecodedStream<InputStream, Encoding>& ds, unsigned* escapedCodepoint) {$/;"	f	class:internal::GenericRegex
CheckDoubleMaximum	include/rapidjson/schema.h	/^    bool CheckDoubleMaximum(Context& context, double d) const {$/;"	f	class:internal::Schema
CheckDoubleMinimum	include/rapidjson/schema.h	/^    bool CheckDoubleMinimum(Context& context, double d) const {$/;"	f	class:internal::Schema
CheckDoubleMultipleOf	include/rapidjson/schema.h	/^    bool CheckDoubleMultipleOf(Context& context, double d) const {$/;"	f	class:internal::Schema
CheckInt	include/rapidjson/schema.h	/^    bool CheckInt(Context& context, int64_t i) const {$/;"	f	class:internal::Schema
CheckUint	include/rapidjson/schema.h	/^    bool CheckUint(Context& context, uint64_t i) const {$/;"	f	class:internal::Schema
CheckWithinHalfULP	include/rapidjson/internal/strtod.h	/^inline int CheckWithinHalfULP(double b, const BigInteger& d, int dExp) {$/;"	f	namespace:internal
ChunkHeader	include/rapidjson/allocators.h	/^    struct ChunkHeader {$/;"	s	class:MemoryPoolAllocator
Clear	include/rapidjson/allocators.h	/^    void Clear() {$/;"	f	class:MemoryPoolAllocator
Clear	include/rapidjson/document.h	/^    void Clear() const { value_.Clear(); }$/;"	f	class:GenericArray
Clear	include/rapidjson/document.h	/^    void Clear() {$/;"	f	class:GenericValue
Clear	include/rapidjson/error/error.h	/^    void Clear() { Set(kParseErrorNone); }$/;"	f	struct:ParseResult
Clear	include/rapidjson/internal/stack.h	/^    void Clear() { stackTop_ = stack_; }$/;"	f	class:internal::Stack
Clear	include/rapidjson/memorybuffer.h	/^    void Clear() { stack_.Clear(); }$/;"	f	struct:GenericMemoryBuffer
Clear	include/rapidjson/stringbuffer.h	/^    void Clear() { stack_.Clear(); }$/;"	f	class:GenericStringBuffer
ClearStack	include/rapidjson/document.h	/^    void ClearStack() {$/;"	f	class:GenericDocument
ClearStack	include/rapidjson/reader.h	/^    void ClearStack() { stack_.Clear(); }$/;"	f	class:GenericReader
ClearStackOnExit	include/rapidjson/document.h	/^        explicit ClearStackOnExit(GenericDocument& d) : d_(d) {}$/;"	f	struct:GenericDocument::ClearStackOnExit
ClearStackOnExit	include/rapidjson/document.h	/^    struct ClearStackOnExit {$/;"	s	class:GenericDocument
ClearStackOnExit	include/rapidjson/reader.h	/^        explicit ClearStackOnExit(GenericReader& r) : r_(r) {}$/;"	f	struct:GenericReader::ClearStackOnExit
ClearStackOnExit	include/rapidjson/reader.h	/^    struct ClearStackOnExit {$/;"	s	class:GenericReader
CloneTopOperand	include/rapidjson/internal/regex.h	/^    void CloneTopOperand(Stack<Allocator>& operandStack) {$/;"	f	class:internal::GenericRegex
Code	include/rapidjson/error/error.h	/^    ParseErrorCode Code() const { return code_; }$/;"	f	struct:ParseResult
ColonToken	include/rapidjson/reader.h	/^        ColonToken,$/;"	e	enum:GenericReader::Token
CommaToken	include/rapidjson/reader.h	/^        CommaToken,$/;"	e	enum:GenericReader::Token
Compare	include/rapidjson/internal/biginteger.h	/^    int Compare(const BigInteger& rhs) const {$/;"	f	class:internal::BigInteger
ConstArray	include/rapidjson/document.h	/^    typedef GenericArray<true, ValueT> ConstArray;$/;"	t	class:GenericArray
ConstArray	include/rapidjson/document.h	/^    typedef GenericArray<true, ValueType> ConstArray;$/;"	t	class:GenericValue
ConstIterator	include/rapidjson/document.h	/^    typedef GenericMemberIterator<true,Encoding,Allocator>  ConstIterator;$/;"	t	class:GenericMemberIterator
ConstMemberIterator	include/rapidjson/document.h	/^    typedef GenericMemberIterator<true, typename ValueT::EncodingType, typename ValueT::AllocatorType> ConstMemberIterator;$/;"	t	class:GenericObject
ConstMemberIterator	include/rapidjson/document.h	/^    typedef typename GenericMemberIterator<true,Encoding,Allocator>::Iterator ConstMemberIterator;  \/\/!< Constant member iterator for iterating in object.$/;"	t	class:GenericValue
ConstObject	include/rapidjson/document.h	/^    typedef GenericObject<true, ValueT> ConstObject;$/;"	t	class:GenericObject
ConstObject	include/rapidjson/document.h	/^    typedef GenericObject<true, ValueType> ConstObject;$/;"	t	class:GenericValue
ConstValueIterator	include/rapidjson/document.h	/^    typedef const GenericValue* ConstValueIterator; \/\/!< Constant value iterator for iterating in array.$/;"	t	class:GenericValue
ConstValueIterator	include/rapidjson/document.h	/^    typedef const ValueT* ConstValueIterator;$/;"	t	class:GenericArray
Consume	include/rapidjson/reader.h	/^    RAPIDJSON_FORCEINLINE static bool Consume(InputStream& is, typename InputStream::Ch expect) {$/;"	f	class:GenericReader
Context	include/rapidjson/schema.h	/^    typedef SchemaValidationContext<SchemaDocumentType> Context;$/;"	t	class:internal::Schema
Context	include/rapidjson/schema.h	/^    typedef typename SchemaType::Context Context;$/;"	t	class:GenericSchemaValidator
CopyFrom	include/rapidjson/document.h	/^    GenericValue& CopyFrom(const GenericValue<Encoding, SourceAllocator>& rhs, Allocator& allocator, bool copyConstStrings = false) {$/;"	f	class:GenericValue
CopyFromRaw	include/rapidjson/pointer.h	/^    Ch* CopyFromRaw(const GenericPointer& rhs, size_t extraToken = 0, size_t extraNameBufferSize = 0) {$/;"	f	class:GenericPointer
CountDecimalDigit32	include/rapidjson/internal/dtoa.h	/^inline int CountDecimalDigit32(uint32_t n) {$/;"	f	namespace:internal
CountStringCodePoint	include/rapidjson/internal/strfunc.h	/^bool CountStringCodePoint(const typename Encoding::Ch* s, SizeType length, SizeType* outCount) {$/;"	f	namespace:internal
Create	include/rapidjson/pointer.h	/^    ValueType& Create(GenericDocument<EncodingType, typename ValueType::AllocatorType, stackAllocator>& document, bool* alreadyExist = 0) const {$/;"	f	class:GenericPointer
Create	include/rapidjson/pointer.h	/^    ValueType& Create(ValueType& root, typename ValueType::AllocatorType& allocator, bool* alreadyExist = 0) const {$/;"	f	class:GenericPointer
CreateHasher	include/rapidjson/schema.h	/^    virtual void* CreateHasher() {$/;"	f	class:GenericSchemaValidator
CreateParallelValidator	include/rapidjson/schema.h	/^    bool CreateParallelValidator(Context& context) const {$/;"	f	class:internal::Schema
CreatePattern	include/rapidjson/schema.h	/^    RegexType* CreatePattern(const ValueType& value) {$/;"	f	class:internal::Schema
CreatePattern	include/rapidjson/schema.h	/^    RegexType* CreatePattern(const ValueType&) { return 0; }$/;"	f	class:internal::Schema
CreateSchema	include/rapidjson/schema.h	/^    void CreateSchema(const SchemaType** schema, const PointerType& pointer, const ValueType& v, const ValueType& document) {$/;"	f	class:GenericSchemaDocument
CreateSchemaRecursive	include/rapidjson/schema.h	/^    void CreateSchemaRecursive(const SchemaType** schema, const PointerType& pointer, const ValueType& v, const ValueType& document) {$/;"	f	class:GenericSchemaDocument
CreateSchemaValidator	include/rapidjson/schema.h	/^    virtual ISchemaValidator* CreateSchemaValidator(const SchemaType& root) {$/;"	f	class:GenericSchemaValidator
CreateSchemaValidators	include/rapidjson/schema.h	/^    void CreateSchemaValidators(Context& context, const SchemaArray& schemas) const {$/;"	f	class:internal::Schema
CreateValueByPointer	include/rapidjson/pointer.h	/^typename DocumentType::ValueType& CreateValueByPointer(DocumentType& document, const CharType(&source)[N]) {$/;"	f
CreateValueByPointer	include/rapidjson/pointer.h	/^typename DocumentType::ValueType& CreateValueByPointer(DocumentType& document, const GenericPointer<typename DocumentType::ValueType>& pointer) {$/;"	f
CreateValueByPointer	include/rapidjson/pointer.h	/^typename T::ValueType& CreateValueByPointer(T& root, const CharType(&source)[N], typename T::AllocatorType& a) {$/;"	f
CreateValueByPointer	include/rapidjson/pointer.h	/^typename T::ValueType& CreateValueByPointer(T& root, const GenericPointer<typename T::ValueType>& pointer, typename T::AllocatorType& a) {$/;"	f
CrtAllocator	include/rapidjson/allocators.h	/^class CrtAllocator {$/;"	c
CudaAutoTimer	CudaUtilities/cuda_timing.cuh	/^        CudaAutoTimer() { start(); }$/;"	f	class:CudaAutoTimer
CudaAutoTimer	CudaUtilities/cuda_timing.cuh	/^        CudaAutoTimer(cudaStream_t stream) : CudaTimer(stream) {$/;"	f	class:CudaAutoTimer
CudaAutoTimer	CudaUtilities/cuda_timing.cuh	/^class CudaAutoTimer : public CudaTimer {$/;"	c	file:
CudaTimer	CudaUtilities/cuda_timing.cuh	/^        CudaTimer() {}$/;"	f	class:CudaTimer
CudaTimer	CudaUtilities/cuda_timing.cuh	/^        CudaTimer(cudaStream_t stream) : m_stream(stream) {}$/;"	f	class:CudaTimer
CudaTimer	CudaUtilities/cuda_timing.cuh	/^class CudaTimer {$/;"	c	file:
CurrentContext	include/rapidjson/schema.h	/^    Context& CurrentContext() { return *schemaStack_.template Top<Context>(); }$/;"	f	class:GenericSchemaValidator
CurrentContext	include/rapidjson/schema.h	/^    const Context& CurrentContext() const { return *schemaStack_.template Top<Context>(); }$/;"	f	class:GenericSchemaValidator
CurrentSchema	include/rapidjson/schema.h	/^    const SchemaType& CurrentSchema() const { return *schemaStack_.template Top<Context>()->schema; }$/;"	f	class:GenericSchemaValidator
DATAORDER	RTClasses/rtimages.h	/^    enum class DATAORDER { LPS, RAS };$/;"	c	class:RTImage
DEBUG	dosecalc-preprocess/debug.h	14;"	d
DEBUG	dosecalc-preprocess/debug.h	16;"	d
DEC	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	544;"	d	file:
DEC	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	255;"	d	file:
DEC	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	529;"	d	file:
DEFAULT_BEAM_ORIG	include/client/dummy_defs.h	20;"	d
DEFAULT_BEAM_SIZE	include/client/dummy_defs.h	21;"	d
DEFAULT_CONVO_COUNT	include/client/dummy_defs.h	13;"	d
DEFAULT_CTBASE	include/client/dummy_defs.h	22;"	d
DEFAULT_DELR	include/client/dummy_defs.h	17;"	d
DEFAULT_DEVICE_COUNT	include/client/dummy_defs.h	10;"	d
DEFAULT_DEVICE_COUNT	include/dosecalc_defs.h	15;"	d
DEFAULT_NPHI	include/client/dummy_defs.h	15;"	d
DEFAULT_NTHETA	include/client/dummy_defs.h	16;"	d
DEFAULT_SAD	DoseCalcIO/beam.cpp	/^float DEFAULT_SAD = 100.f;  \/\/ used when sad: %f isn't specified for beam in beamfile [unit: cm]$/;"	v
DEFAULT_SERVER_COUNT	include/client/dummy_defs.h	11;"	d
DEFAULT_SIZE	include/client/dummy_defs.h	19;"	d
DEFAULT_SPECFILE	include/client/dummy_defs.h	23;"	d
DEFAULT_STREAM_COUNT	include/client/dummy_defs.h	12;"	d
DEFAULT_VOXEL	include/client/dummy_defs.h	18;"	d
DEVICE_CONV_DATA	dosecalc-beam/nvbbRayConvolve_host.cu	/^struct DEVICE_CONV_DATA {$/;"	s	file:
DEVICE_CONV_DATA	dosecalc-beamlet/nvbbRayConvolve_host.cu	/^struct DEVICE_CONV_DATA {$/;"	s	file:
DEVICE_RESET	include/cuda-common/helper_cuda.h	976;"	d
DEVICE_RESET	include/cuda-common/helper_cuda.h	980;"	d
DEVICE_THREAD_DATA	include/server/brain_defs.h	/^struct DEVICE_THREAD_DATA {$/;"	s
DIRECTION	DoseCalcIO/beam.h	/^            DIRECTION,$/;"	m	class:BEAM::ORIENT_T
Data	include/rapidjson/document.h	/^    union Data {$/;"	u	class:GenericValue
Decode	include/rapidjson/encodings.h	/^    static RAPIDJSON_FORCEINLINE bool Decode(InputStream& is, unsigned* codepoint) {$/;"	f	struct:AutoUTF
Decode	include/rapidjson/encodings.h	/^    static bool Decode(InputStream& is, unsigned* codepoint) {$/;"	f	struct:ASCII
Decode	include/rapidjson/encodings.h	/^    static bool Decode(InputStream& is, unsigned* codepoint) {$/;"	f	struct:UTF16
Decode	include/rapidjson/encodings.h	/^    static bool Decode(InputStream& is, unsigned* codepoint) {$/;"	f	struct:UTF32
Decode	include/rapidjson/encodings.h	/^    static bool Decode(InputStream& is, unsigned* codepoint) {$/;"	f	struct:UTF8
Decode	include/rapidjson/internal/regex.h	/^    void Decode() {$/;"	f	class:internal::DecodedStream
DecodedStream	include/rapidjson/internal/regex.h	/^    DecodedStream(SourceStream& ss) : ss_(ss), codepoint_() { Decode(); }$/;"	f	class:internal::DecodedStream
DecodedStream	include/rapidjson/internal/regex.h	/^class DecodedStream {$/;"	c	namespace:internal
Default	include/rapidjson/reader.h	/^    bool Default() { return true; }$/;"	f	struct:BaseReaderHandler
DenseROIMask	DoseCalcIO/roi.h	/^        DenseROIMask() {}$/;"	f	class:DenseROIMask
DenseROIMask	DoseCalcIO/roi.h	/^        DenseROIMask(std::string name, std::vector<uint8_t> mask, ArrayProps props) : BaseROIMask(name, props), mask{mask} {}$/;"	f	class:DenseROIMask
DenseROIMask	DoseCalcIO/roi.h	/^class DenseROIMask : public BaseROIMask {$/;"	c
DestroryHasher	include/rapidjson/schema.h	/^    virtual void DestroryHasher(void* hasher) {$/;"	f	class:GenericSchemaValidator
Destroy	include/rapidjson/document.h	/^    void Destroy() {$/;"	f	class:GenericDocument
Destroy	include/rapidjson/internal/stack.h	/^    void Destroy() {$/;"	f	class:internal::Stack
DestroySchemaValidator	include/rapidjson/schema.h	/^    virtual void DestroySchemaValidator(ISchemaValidator* validator) {$/;"	f	class:GenericSchemaValidator
DetectType	include/rapidjson/encodedstream.h	/^    void DetectType() {$/;"	f	class:AutoUTFInputStream
Difference	include/rapidjson/internal/biginteger.h	/^    bool Difference(const BigInteger& rhs, BigInteger* out) const {$/;"	f	class:internal::BigInteger
DifferenceType	include/rapidjson/document.h	/^    typedef typename BaseType::difference_type DifferenceType;$/;"	t	class:GenericMemberIterator
DigitGen	include/rapidjson/internal/dtoa.h	/^inline void DigitGen(const DiyFp& W, const DiyFp& Mp, uint64_t delta, char* buffer, int* len, int* K) {$/;"	f	namespace:internal
DisableIf	include/rapidjson/internal/meta.h	/^struct DisableIf : DisableIfCond<Condition::Value, T> {};$/;"	s	namespace:internal
DisableIfCond	include/rapidjson/internal/meta.h	/^template <bool Condition, typename T = void> struct DisableIfCond { typedef T Type; };$/;"	s	namespace:internal
DisableIfCond	include/rapidjson/internal/meta.h	/^template <typename T> struct DisableIfCond<true, T> { \/* empty *\/ };$/;"	s	namespace:internal
DiyFp	include/rapidjson/internal/diyfp.h	/^    DiyFp() : f(), e() {}$/;"	f	struct:internal::DiyFp
DiyFp	include/rapidjson/internal/diyfp.h	/^    DiyFp(uint64_t fp, int exp) : f(fp), e(exp) {}$/;"	f	struct:internal::DiyFp
DiyFp	include/rapidjson/internal/diyfp.h	/^    explicit DiyFp(double d) {$/;"	f	struct:internal::DiyFp
DiyFp	include/rapidjson/internal/diyfp.h	/^struct DiyFp {$/;"	s	namespace:internal
Document	include/rapidjson/document.h	/^typedef GenericDocument<UTF8<> > Document;$/;"	t
Document	include/rapidjson/fwd.h	/^typedef GenericDocument<UTF8<char>, MemoryPoolAllocator<CrtAllocator>, CrtAllocator> Document;$/;"	t
Double	include/rapidjson/document.h	/^    bool Double(double d) { new (stack_.template Push<ValueType>()) ValueType(d); return true; }$/;"	f	class:GenericDocument
Double	include/rapidjson/internal/ieee754.h	/^    Double() {}$/;"	f	class:internal::Double
Double	include/rapidjson/internal/ieee754.h	/^    Double(double d) : d_(d) {}$/;"	f	class:internal::Double
Double	include/rapidjson/internal/ieee754.h	/^    Double(uint64_t u) : u_(u) {}$/;"	f	class:internal::Double
Double	include/rapidjson/internal/ieee754.h	/^class Double {$/;"	c	namespace:internal
Double	include/rapidjson/prettywriter.h	/^    bool Double(double d)       { PrettyPrefix(kNumberType); return Base::WriteDouble(d); }$/;"	f	class:PrettyWriter
Double	include/rapidjson/reader.h	/^    bool Double(double) { return static_cast<Override&>(*this).Default(); }$/;"	f	struct:BaseReaderHandler
Double	include/rapidjson/schema.h	/^    bool Double(Context& context, double d) const {$/;"	f	class:internal::Schema
Double	include/rapidjson/schema.h	/^    bool Double(double d)   { RAPIDJSON_SCHEMA_HANDLE_VALUE_(Double, (CurrentContext(), d), (d)); }$/;"	f	class:GenericSchemaValidator
Double	include/rapidjson/schema.h	/^    bool Double(double d) { $/;"	f	class:internal::Hasher
Double	include/rapidjson/writer.h	/^    bool Double(double d)       { Prefix(kNumberType); return EndValue(WriteDouble(d)); }$/;"	f	class:Writer
EQUALS	build/CudaUtilities/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/DoseCalcAlgo/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/DoseCalcIO/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/RTClasses/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/Utilities/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/dosecalc-beam/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/dosecalc-beamlet/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/dosecalc-preprocess/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/unit_tests/Makefile	/^EQUALS = =$/;"	m
EXIT_WAIVED	include/cuda-common/helper_cuda.h	27;"	d
EXIT_WAIVED	include/cuda-common/helper_math.h	32;"	d
EXIT_WAIVED	include/cuda-common/helper_string.h	76;"	d
EffectiveSignificandSize	include/rapidjson/internal/ieee754.h	/^    static int EffectiveSignificandSize(int order) {$/;"	f	class:internal::Double
Empty	include/rapidjson/document.h	/^    bool Empty() const { RAPIDJSON_ASSERT(IsArray()); return data_.a.size == 0; }$/;"	f	class:GenericValue
Empty	include/rapidjson/document.h	/^    bool Empty() const { return value_.Empty(); }$/;"	f	class:GenericArray
Empty	include/rapidjson/internal/stack.h	/^    bool Empty() const { return stackTop_ == stack_; }$/;"	f	class:internal::Stack
EnableIf	include/rapidjson/internal/meta.h	/^struct EnableIf : EnableIfCond<Condition::Value, T> {};$/;"	s	namespace:internal
EnableIfCond	include/rapidjson/internal/meta.h	/^template <bool Condition, typename T = void> struct EnableIfCond  { typedef T Type; };$/;"	s	namespace:internal
EnableIfCond	include/rapidjson/internal/meta.h	/^template <typename T> struct EnableIfCond<false, T> { \/* empty *\/ };$/;"	s	namespace:internal
Encode	include/rapidjson/encodings.h	/^    static RAPIDJSON_FORCEINLINE void Encode(OutputStream& os, unsigned codepoint) {$/;"	f	struct:AutoUTF
Encode	include/rapidjson/encodings.h	/^    static void Encode(OutputStream& os, unsigned codepoint) {$/;"	f	struct:ASCII
Encode	include/rapidjson/encodings.h	/^    static void Encode(OutputStream& os, unsigned codepoint) {$/;"	f	struct:UTF16
Encode	include/rapidjson/encodings.h	/^    static void Encode(OutputStream& os, unsigned codepoint) {$/;"	f	struct:UTF32
Encode	include/rapidjson/encodings.h	/^    static void Encode(OutputStream& os, unsigned codepoint) {$/;"	f	struct:UTF8
EncodeUnsafe	include/rapidjson/encodings.h	/^    static RAPIDJSON_FORCEINLINE void EncodeUnsafe(OutputStream& os, unsigned codepoint) {$/;"	f	struct:AutoUTF
EncodeUnsafe	include/rapidjson/encodings.h	/^    static void EncodeUnsafe(OutputStream& os, unsigned codepoint) {$/;"	f	struct:ASCII
EncodeUnsafe	include/rapidjson/encodings.h	/^    static void EncodeUnsafe(OutputStream& os, unsigned codepoint) {$/;"	f	struct:UTF16
EncodeUnsafe	include/rapidjson/encodings.h	/^    static void EncodeUnsafe(OutputStream& os, unsigned codepoint) {$/;"	f	struct:UTF32
EncodeUnsafe	include/rapidjson/encodings.h	/^    static void EncodeUnsafe(OutputStream& os, unsigned codepoint) {$/;"	f	struct:UTF8
EncodedInputStream	include/rapidjson/encodedstream.h	/^    EncodedInputStream(InputByteStream& is) : is_(is) { $/;"	f	class:EncodedInputStream
EncodedInputStream	include/rapidjson/encodedstream.h	/^    EncodedInputStream(MemoryStream& is) : is_(is) {$/;"	f	class:EncodedInputStream
EncodedInputStream	include/rapidjson/encodedstream.h	/^class EncodedInputStream {$/;"	c
EncodedInputStream	include/rapidjson/encodedstream.h	/^class EncodedInputStream<UTF8<>, MemoryStream> {$/;"	c
EncodedOutputStream	include/rapidjson/encodedstream.h	/^    EncodedOutputStream(OutputByteStream& os, bool putBOM = true) : os_(os) { $/;"	f	class:EncodedOutputStream
EncodedOutputStream	include/rapidjson/encodedstream.h	/^class EncodedOutputStream {$/;"	c
Encoding	include/rapidjson/internal/regex.h	/^    typedef typename RegexType::EncodingType Encoding;$/;"	t	class:internal::GenericRegexSearch
EncodingType	include/rapidjson/document.h	/^    typedef Encoding EncodingType;                  \/\/!< Encoding type from template parameter.$/;"	t	class:GenericValue
EncodingType	include/rapidjson/document.h	/^    typedef typename ValueType::EncodingType EncodingType;$/;"	t	class:GenericObject
EncodingType	include/rapidjson/internal/regex.h	/^    typedef Encoding EncodingType;$/;"	t	class:internal::GenericRegex
EncodingType	include/rapidjson/pointer.h	/^    typedef typename ValueType::EncodingType EncodingType;  \/\/!< Encoding type from Value$/;"	t	class:GenericPointer
EncodingType	include/rapidjson/schema.h	/^    typedef typename SchemaType::EncodingType EncodingType;$/;"	t	class:GenericSchemaValidator
EncodingType	include/rapidjson/schema.h	/^    typedef typename ValueType::EncodingType EncodingType;$/;"	t	class:GenericSchemaDocument
EncodingType	include/rapidjson/schema.h	/^    typedef typename ValueType::EncodingType EncodingType;$/;"	t	class:internal::Schema
End	include/rapidjson/document.h	/^    ConstValueIterator End() const { return const_cast<GenericValue&>(*this).End(); }$/;"	f	class:GenericValue
End	include/rapidjson/document.h	/^    ValueIterator End() const { return value_.End(); }$/;"	f	class:GenericArray
End	include/rapidjson/document.h	/^    ValueIterator End() { RAPIDJSON_ASSERT(IsArray()); return GetElementsPointer() + data_.a.size; }$/;"	f	class:GenericValue
End	include/rapidjson/internal/stack.h	/^    T* End() { return reinterpret_cast<T*>(stackTop_); }$/;"	f	class:internal::Stack
End	include/rapidjson/internal/stack.h	/^    const T* End() const { return reinterpret_cast<T*>(stackTop_); }$/;"	f	class:internal::Stack
EndArray	include/rapidjson/document.h	/^    bool EndArray(SizeType elementCount) {$/;"	f	class:GenericDocument
EndArray	include/rapidjson/prettywriter.h	/^    bool EndArray(SizeType memberCount = 0) {$/;"	f	class:PrettyWriter
EndArray	include/rapidjson/reader.h	/^    bool EndArray(SizeType) { return static_cast<Override&>(*this).Default(); }$/;"	f	struct:BaseReaderHandler
EndArray	include/rapidjson/schema.h	/^    bool EndArray(Context& context, SizeType elementCount) const { $/;"	f	class:internal::Schema
EndArray	include/rapidjson/schema.h	/^    bool EndArray(SizeType elementCount) { $/;"	f	class:internal::Hasher
EndArray	include/rapidjson/schema.h	/^    bool EndArray(SizeType elementCount) {$/;"	f	class:GenericSchemaValidator
EndArray	include/rapidjson/writer.h	/^    bool EndArray(SizeType elementCount = 0) {$/;"	f	class:Writer
EndObject	include/rapidjson/document.h	/^    bool EndObject(SizeType memberCount) {$/;"	f	class:GenericDocument
EndObject	include/rapidjson/prettywriter.h	/^    bool EndObject(SizeType memberCount = 0) {$/;"	f	class:PrettyWriter
EndObject	include/rapidjson/reader.h	/^    bool EndObject(SizeType) { return static_cast<Override&>(*this).Default(); }$/;"	f	struct:BaseReaderHandler
EndObject	include/rapidjson/schema.h	/^    bool EndObject(Context& context, SizeType memberCount) const {$/;"	f	class:internal::Schema
EndObject	include/rapidjson/schema.h	/^    bool EndObject(SizeType memberCount) { $/;"	f	class:GenericSchemaValidator
EndObject	include/rapidjson/schema.h	/^    bool EndObject(SizeType memberCount) { $/;"	f	class:internal::Hasher
EndObject	include/rapidjson/writer.h	/^    bool EndObject(SizeType memberCount = 0) {$/;"	f	class:Writer
EndValue	include/rapidjson/schema.h	/^    RAPIDJSON_FORCEINLINE bool EndValue(Context& context) const {$/;"	f	class:internal::Schema
EndValue	include/rapidjson/schema.h	/^    bool EndValue() {$/;"	f	class:GenericSchemaValidator
EndValue	include/rapidjson/writer.h	/^    bool EndValue(bool ret) {$/;"	f	class:Writer
Erase	include/rapidjson/document.h	/^    ValueIterator Erase(ConstValueIterator first, ConstValueIterator last) const { return value_.Erase(first, last); }$/;"	f	class:GenericArray
Erase	include/rapidjson/document.h	/^    ValueIterator Erase(ConstValueIterator first, ConstValueIterator last) {$/;"	f	class:GenericValue
Erase	include/rapidjson/document.h	/^    ValueIterator Erase(ConstValueIterator pos) const { return value_.Erase(pos); }$/;"	f	class:GenericArray
Erase	include/rapidjson/document.h	/^    ValueIterator Erase(ConstValueIterator pos) {$/;"	f	class:GenericValue
Erase	include/rapidjson/pointer.h	/^    bool Erase(ValueType& root) const {$/;"	f	class:GenericPointer
EraseMember	include/rapidjson/document.h	/^    MemberIterator EraseMember(ConstMemberIterator first, ConstMemberIterator last) const { return value_.EraseMember(first, last); }$/;"	f	class:GenericObject
EraseMember	include/rapidjson/document.h	/^    MemberIterator EraseMember(ConstMemberIterator first, ConstMemberIterator last) {$/;"	f	class:GenericValue
EraseMember	include/rapidjson/document.h	/^    MemberIterator EraseMember(ConstMemberIterator pos) const { return value_.EraseMember(pos); }$/;"	f	class:GenericObject
EraseMember	include/rapidjson/document.h	/^    MemberIterator EraseMember(ConstMemberIterator pos) {$/;"	f	class:GenericValue
EraseMember	include/rapidjson/document.h	/^    bool EraseMember(const Ch* name) const { return value_.EraseMember(name); }$/;"	f	class:GenericObject
EraseMember	include/rapidjson/document.h	/^    bool EraseMember(const Ch* name) {$/;"	f	class:GenericValue
EraseMember	include/rapidjson/document.h	/^    bool EraseMember(const GenericValue<Encoding, SourceAllocator>& name) {$/;"	f	class:GenericValue
EraseMember	include/rapidjson/document.h	/^    bool EraseMember(const std::basic_string<Ch>& name) const { return EraseMember(ValueType(StringRef(name))); }$/;"	f	class:GenericObject
EraseMember	include/rapidjson/document.h	/^    bool EraseMember(const std::basic_string<Ch>& name) { return EraseMember(GenericValue(StringRef(name))); }$/;"	f	class:GenericValue
EraseMember	include/rapidjson/document.h	/^    template <typename SourceAllocator> bool EraseMember(const GenericValue<EncodingType, SourceAllocator>& name) const { return value_.EraseMember(name); }$/;"	f	class:GenericObject
EraseValueByPointer	include/rapidjson/pointer.h	/^bool EraseValueByPointer(T& root, const CharType(&source)[N]) {$/;"	f
EraseValueByPointer	include/rapidjson/pointer.h	/^bool EraseValueByPointer(T& root, const GenericPointer<typename T::ValueType>& pointer) {$/;"	f
Eval	include/rapidjson/internal/regex.h	/^    bool Eval(Stack<Allocator>& operandStack, Operator op) {$/;"	f	class:internal::GenericRegex
EvalQuantifier	include/rapidjson/internal/regex.h	/^    bool EvalQuantifier(Stack<Allocator>& operandStack, unsigned n, unsigned m) {$/;"	f	class:internal::GenericRegex
Exception	include/cuda-common/exception.h	/^Exception<Std_Exception>::Exception() :$/;"	f	class:Exception
Exception	include/cuda-common/exception.h	/^Exception<Std_Exception>::Exception(const std::string &s) :$/;"	f	class:Exception
Exception	include/cuda-common/exception.h	/^class Exception : public Std_Exception$/;"	c
Expand	include/rapidjson/internal/stack.h	/^    void Expand(size_t count) {$/;"	f	class:internal::Stack
Exponent	include/rapidjson/internal/ieee754.h	/^    int Exponent() const { return static_cast<int>(((u_ & kExponentMask) >> kSignificandSize) - kExponentBias); }$/;"	f	class:internal::Double
FCOMP	dosecalc-beamlet/nvbbRayConvolve_host.cu	179;"	d	file:
FMAP_NAME	DoseCalcIO/fluence.cpp	15;"	d	file:
FOPEN	include/cuda-common/helper_string.h	36;"	d
FOPEN	include/cuda-common/helper_string.h	62;"	d
FOPEN_FAIL	include/cuda-common/helper_string.h	39;"	d
FOPEN_FAIL	include/cuda-common/helper_string.h	65;"	d
FORMAT_2VEC	DoseCalcIO/macros.h	20;"	d
FORMAT_3VEC	DoseCalcIO/macros.h	19;"	d
FP_INFINITE	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^FP_INFINITE, $/;"	e	enum:__anon18	file:
FP_INT_DOWNWARD	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^FP_INT_DOWNWARD, $/;"	e	enum:__anon17	file:
FP_INT_TONEAREST	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^FP_INT_TONEAREST$/;"	e	enum:__anon17	file:
FP_INT_TONEARESTFROMZERO	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^FP_INT_TONEARESTFROMZERO, $/;"	e	enum:__anon17	file:
FP_INT_TOWARDZERO	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^FP_INT_TOWARDZERO, $/;"	e	enum:__anon17	file:
FP_INT_UPWARD	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^FP_INT_UPWARD, $/;"	e	enum:__anon17	file:
FP_NAN	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^FP_NAN, $/;"	e	enum:__anon18	file:
FP_NORMAL	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^FP_NORMAL$/;"	e	enum:__anon18	file:
FP_SUBNORMAL	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^FP_SUBNORMAL, $/;"	e	enum:__anon18	file:
FP_ZERO	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^FP_ZERO, $/;"	e	enum:__anon18	file:
FTMAGIC	DoseCalcIO/volume.h	/^        static const uint FTMAGIC = 0x2A;$/;"	m	class:Volume
FTMAGIC	dosecalc-beamlet/sparsify_manager.cpp	/^static uint FTMAGIC = 0x2B;$/;"	v	file:
FTVERSIONMAJOR	DoseCalcIO/volume.h	/^        static const uint FTVERSIONMAJOR = 1;$/;"	m	class:Volume
FTVERSIONMAJOR	dosecalc-beamlet/sparsify_manager.cpp	/^static uint FTVERSIONMAJOR = 1;$/;"	v	file:
FTVERSIONMINOR	DoseCalcIO/volume.h	/^        static const uint FTVERSIONMINOR = 0;$/;"	m	class:Volume
FTVERSIONMINOR	dosecalc-beamlet/sparsify_manager.cpp	/^static uint FTVERSIONMINOR = 2;$/;"	v	file:
FalseToken	include/rapidjson/reader.h	/^        FalseToken,$/;"	e	enum:GenericReader::Token
FalseType	include/rapidjson/internal/meta.h	/^typedef BoolType<false> FalseType;$/;"	t	namespace:internal
FastPath	include/rapidjson/internal/strtod.h	/^inline double FastPath(double significand, int exp) {$/;"	f	namespace:internal
FileReadStream	include/rapidjson/filereadstream.h	/^    FileReadStream(std::FILE* fp, char* buffer, size_t bufferSize) : fp_(fp), buffer_(buffer), bufferSize_(bufferSize), bufferLast_(0), current_(buffer_), readCount_(0), count_(0), eof_(false) { $/;"	f	class:FileReadStream
FileReadStream	include/rapidjson/filereadstream.h	/^class FileReadStream {$/;"	c
FileWriteStream	include/rapidjson/filewritestream.h	/^    FileWriteStream(std::FILE* fp, char* buffer, size_t bufferSize) : fp_(fp), buffer_(buffer), bufferEnd_(buffer + bufferSize), current_(buffer_) { $/;"	f	class:FileWriteStream
FileWriteStream	include/rapidjson/filewritestream.h	/^class FileWriteStream {$/;"	c
FindMember	include/rapidjson/document.h	/^    ConstMemberIterator FindMember(const Ch* name) const { return const_cast<GenericValue&>(*this).FindMember(name); }$/;"	f	class:GenericValue
FindMember	include/rapidjson/document.h	/^    ConstMemberIterator FindMember(const std::basic_string<Ch>& name) const { return FindMember(GenericValue(StringRef(name))); }$/;"	f	class:GenericValue
FindMember	include/rapidjson/document.h	/^    MemberIterator FindMember(const Ch* name) const { return value_.FindMember(name); }$/;"	f	class:GenericObject
FindMember	include/rapidjson/document.h	/^    MemberIterator FindMember(const Ch* name) {$/;"	f	class:GenericValue
FindMember	include/rapidjson/document.h	/^    MemberIterator FindMember(const GenericValue<Encoding, SourceAllocator>& name) {$/;"	f	class:GenericValue
FindMember	include/rapidjson/document.h	/^    MemberIterator FindMember(const std::basic_string<Ch>& name) const { return value_.FindMember(name); }$/;"	f	class:GenericObject
FindMember	include/rapidjson/document.h	/^    MemberIterator FindMember(const std::basic_string<Ch>& name) { return FindMember(GenericValue(StringRef(name))); }$/;"	f	class:GenericValue
FindMember	include/rapidjson/document.h	/^    template <typename SourceAllocator> ConstMemberIterator FindMember(const GenericValue<Encoding, SourceAllocator>& name) const { return const_cast<GenericValue&>(*this).FindMember(name); }$/;"	f	class:GenericValue
FindMember	include/rapidjson/document.h	/^    template <typename SourceAllocator> MemberIterator FindMember(const GenericValue<EncodingType, SourceAllocator>& name) const { return value_.FindMember(name); }$/;"	f	class:GenericObject
FindPropertyIndex	include/rapidjson/schema.h	/^    bool FindPropertyIndex(const ValueType& name, SizeType* outIndex) const {$/;"	f	class:internal::Schema
Flag	include/rapidjson/document.h	/^    struct Flag {$/;"	s	class:GenericValue
FloatVolume	DoseCalcIO/volume.h	/^typedef Volume<float>   FloatVolume;$/;"	t
Flush	include/rapidjson/encodedstream.h	/^    void Flush() { RAPIDJSON_ASSERT(false); } $/;"	f	class:AutoUTFInputStream
Flush	include/rapidjson/encodedstream.h	/^    void Flush() { RAPIDJSON_ASSERT(false); } $/;"	f	class:EncodedInputStream
Flush	include/rapidjson/encodedstream.h	/^    void Flush() { os_->Flush(); } $/;"	f	class:AutoUTFOutputStream
Flush	include/rapidjson/encodedstream.h	/^    void Flush() { os_.Flush(); }$/;"	f	class:EncodedOutputStream
Flush	include/rapidjson/encodedstream.h	/^    void Flush() {} $/;"	f	class:EncodedInputStream
Flush	include/rapidjson/filereadstream.h	/^    void Flush() { RAPIDJSON_ASSERT(false); } $/;"	f	class:FileReadStream
Flush	include/rapidjson/filewritestream.h	/^    void Flush() {$/;"	f	class:FileWriteStream
Flush	include/rapidjson/istreamwrapper.h	/^    void Flush() { RAPIDJSON_ASSERT(false); }$/;"	f	class:BasicIStreamWrapper
Flush	include/rapidjson/memorybuffer.h	/^    void Flush() {}$/;"	f	struct:GenericMemoryBuffer
Flush	include/rapidjson/memorystream.h	/^    void Flush() { RAPIDJSON_ASSERT(false); }$/;"	f	struct:MemoryStream
Flush	include/rapidjson/ostreamwrapper.h	/^    void Flush() {$/;"	f	class:BasicOStreamWrapper
Flush	include/rapidjson/stream.h	/^    void Flush() { RAPIDJSON_ASSERT(false); }$/;"	f	struct:GenericStringStream
Flush	include/rapidjson/stream.h	/^    void Flush() {}$/;"	f	struct:GenericInsituStringStream
Flush	include/rapidjson/stringbuffer.h	/^    void Flush() {}$/;"	f	class:GenericStringBuffer
Flush	include/rapidjson/writer.h	/^    void Flush() {$/;"	f	class:Writer
Fmaps	extern/python/fmaps.py	/^class Fmaps:$/;"	c
Frag	include/rapidjson/internal/regex.h	/^        Frag(SizeType s, SizeType o, SizeType m) : start(s), out(o), minIndex(m) {}$/;"	f	struct:internal::GenericRegex::Frag
Frag	include/rapidjson/internal/regex.h	/^    struct Frag {$/;"	s	class:internal::GenericRegex
FrameOfReference	DoseCalcIO/volume.h	/^struct FrameOfReference {$/;"	s
Free	include/rapidjson/allocators.h	/^    static void Free(void *ptr) { (void)ptr; } \/\/ Do nothing$/;"	f	class:MemoryPoolAllocator
Free	include/rapidjson/allocators.h	/^    static void Free(void *ptr) { std::free(ptr); }$/;"	f	class:CrtAllocator
FreeState	include/rapidjson/schema.h	/^    virtual void FreeState(void* p) {$/;"	f	class:GenericSchemaValidator
FullSparsifyWorker	dosecalc-beamlet/sparsify_worker.cpp	/^FullSparsifyWorker::FullSparsifyWorker(wqueue<SparsifyData>& queue, const std::string h5filename, HEADER_PATIENT* patient_header, const float sparsity_thresh) : SparsifyWorkerBase(queue, sparsity_thresh), m_h5filename{h5filename}, patient_header{patient_header} {$/;"	f	class:FullSparsifyWorker
FullSparsifyWorker	dosecalc-beamlet/sparsify_worker.h	/^class FullSparsifyWorker : public SparsifyWorkerBase {$/;"	c
G4Material	extern/python/materials.py	/^class G4Material():$/;"	c
GB	CudaUtilities/memory_manager.cuh	17;"	d	file:
GREEN	Utilities/logging.h	/^    BLACK, RED, GREEN,$/;"	e	enum:COLOR
GenericArray	include/rapidjson/document.h	/^    GenericArray(ValueType& value) : value_(value) {}$/;"	f	class:GenericArray
GenericArray	include/rapidjson/document.h	/^    GenericArray(const GenericArray& rhs) : value_(rhs.value_) {}$/;"	f	class:GenericArray
GenericArray	include/rapidjson/document.h	/^class GenericArray {$/;"	c
GenericDocument	include/rapidjson/document.h	/^    GenericDocument(Allocator* allocator = 0, size_t stackCapacity = kDefaultStackCapacity, StackAllocator* stackAllocator = 0) : $/;"	f	class:GenericDocument
GenericDocument	include/rapidjson/document.h	/^    explicit GenericDocument(Type type, Allocator* allocator = 0, size_t stackCapacity = kDefaultStackCapacity, StackAllocator* stackAllocator = 0) :$/;"	f	class:GenericDocument
GenericDocument	include/rapidjson/document.h	/^class GenericDocument : public GenericValue<Encoding, Allocator> {$/;"	c
GenericInsituStringStream	include/rapidjson/stream.h	/^    GenericInsituStringStream(Ch *src) : src_(src), dst_(0), head_(src) {}$/;"	f	struct:GenericInsituStringStream
GenericInsituStringStream	include/rapidjson/stream.h	/^struct GenericInsituStringStream {$/;"	s
GenericMember	include/rapidjson/document.h	/^struct GenericMember { $/;"	s
GenericMemberIterator	include/rapidjson/document.h	/^    GenericMemberIterator() : ptr_() {}$/;"	f	class:GenericMemberIterator
GenericMemberIterator	include/rapidjson/document.h	/^    GenericMemberIterator(const NonConstIterator & it) : ptr_(it.ptr_) {}$/;"	f	class:GenericMemberIterator
GenericMemberIterator	include/rapidjson/document.h	/^    explicit GenericMemberIterator(Pointer p) : ptr_(p) {}$/;"	f	class:GenericMemberIterator
GenericMemberIterator	include/rapidjson/document.h	/^class GenericMemberIterator$/;"	c
GenericMemberIterator	include/rapidjson/document.h	/^struct GenericMemberIterator<false,Encoding,Allocator> {$/;"	s
GenericMemberIterator	include/rapidjson/document.h	/^struct GenericMemberIterator<true,Encoding,Allocator> {$/;"	s
GenericMemoryBuffer	include/rapidjson/memorybuffer.h	/^    GenericMemoryBuffer(Allocator* allocator = 0, size_t capacity = kDefaultCapacity) : stack_(allocator, capacity) {}$/;"	f	struct:GenericMemoryBuffer
GenericMemoryBuffer	include/rapidjson/memorybuffer.h	/^struct GenericMemoryBuffer {$/;"	s
GenericObject	include/rapidjson/document.h	/^    GenericObject(ValueType& value) : value_(value) {}$/;"	f	class:GenericObject
GenericObject	include/rapidjson/document.h	/^    GenericObject(const GenericObject& rhs) : value_(rhs.value_) {}$/;"	f	class:GenericObject
GenericObject	include/rapidjson/document.h	/^class GenericObject {$/;"	c
GenericPointer	include/rapidjson/pointer.h	/^    GenericPointer(Allocator* allocator = 0) : allocator_(allocator), ownAllocator_(), nameBuffer_(), tokens_(), tokenCount_(), parseErrorOffset_(), parseErrorCode_(kPointerParseErrorNone) {}$/;"	f	class:GenericPointer
GenericPointer	include/rapidjson/pointer.h	/^    GenericPointer(const Ch* source, size_t length, Allocator* allocator = 0) : allocator_(allocator), ownAllocator_(), nameBuffer_(), tokens_(), tokenCount_(), parseErrorOffset_(), parseErrorCode_(kPointerParseErrorNone) {$/;"	f	class:GenericPointer
GenericPointer	include/rapidjson/pointer.h	/^    GenericPointer(const GenericPointer& rhs, Allocator* allocator = 0) : allocator_(allocator), ownAllocator_(), nameBuffer_(), tokens_(), tokenCount_(), parseErrorOffset_(), parseErrorCode_(kPointerParseErrorNone) {$/;"	f	class:GenericPointer
GenericPointer	include/rapidjson/pointer.h	/^    GenericPointer(const Token* tokens, size_t tokenCount) : allocator_(), ownAllocator_(), nameBuffer_(), tokens_(const_cast<Token*>(tokens)), tokenCount_(tokenCount), parseErrorOffset_(), parseErrorCode_(kPointerParseErrorNone) {}$/;"	f	class:GenericPointer
GenericPointer	include/rapidjson/pointer.h	/^    explicit GenericPointer(const Ch* source, Allocator* allocator = 0) : allocator_(allocator), ownAllocator_(), nameBuffer_(), tokens_(), tokenCount_(), parseErrorOffset_(), parseErrorCode_(kPointerParseErrorNone) {$/;"	f	class:GenericPointer
GenericPointer	include/rapidjson/pointer.h	/^    explicit GenericPointer(const std::basic_string<Ch>& source, Allocator* allocator = 0) : allocator_(allocator), ownAllocator_(), nameBuffer_(), tokens_(), tokenCount_(), parseErrorOffset_(), parseErrorCode_(kPointerParseErrorNone) {$/;"	f	class:GenericPointer
GenericPointer	include/rapidjson/pointer.h	/^class GenericPointer {$/;"	c
GenericReader	include/rapidjson/reader.h	/^    GenericReader(StackAllocator* stackAllocator = 0, size_t stackCapacity = kDefaultStackCapacity) : stack_(stackAllocator, stackCapacity), parseResult_() {}$/;"	f	class:GenericReader
GenericReader	include/rapidjson/reader.h	/^class GenericReader {$/;"	c
GenericRegex	include/rapidjson/internal/regex.h	/^    GenericRegex(const Ch* source, Allocator* allocator = 0) : $/;"	f	class:internal::GenericRegex
GenericRegex	include/rapidjson/internal/regex.h	/^class GenericRegex {$/;"	c	namespace:internal
GenericRegexSearch	include/rapidjson/internal/regex.h	/^    GenericRegexSearch(const RegexType& regex, Allocator* allocator = 0) : $/;"	f	class:internal::GenericRegexSearch
GenericRegexSearch	include/rapidjson/internal/regex.h	/^class GenericRegexSearch {$/;"	c	namespace:internal
GenericSchemaDocument	include/rapidjson/schema.h	/^    explicit GenericSchemaDocument(const ValueType& document, IRemoteSchemaDocumentProviderType* remoteProvider = 0, Allocator* allocator = 0) :$/;"	f	class:GenericSchemaDocument
GenericSchemaDocument	include/rapidjson/schema.h	/^class GenericSchemaDocument {$/;"	c
GenericSchemaValidator	include/rapidjson/schema.h	/^    GenericSchemaValidator( $/;"	f	class:GenericSchemaValidator
GenericSchemaValidator	include/rapidjson/schema.h	/^    GenericSchemaValidator($/;"	f	class:GenericSchemaValidator
GenericSchemaValidator	include/rapidjson/schema.h	/^class GenericSchemaValidator :$/;"	c
GenericStringBuffer	include/rapidjson/stringbuffer.h	/^    GenericStringBuffer(Allocator* allocator = 0, size_t capacity = kDefaultCapacity) : stack_(allocator, capacity) {}$/;"	f	class:GenericStringBuffer
GenericStringBuffer	include/rapidjson/stringbuffer.h	/^    GenericStringBuffer(GenericStringBuffer&& rhs) : stack_(std::move(rhs.stack_)) {}$/;"	f	class:GenericStringBuffer
GenericStringBuffer	include/rapidjson/stringbuffer.h	/^class GenericStringBuffer {$/;"	c
GenericStringRef	include/rapidjson/document.h	/^    GenericStringRef(const CharType* str, SizeType len)$/;"	f	struct:GenericStringRef
GenericStringRef	include/rapidjson/document.h	/^    GenericStringRef(const GenericStringRef& rhs) : s(rhs.s), length(rhs.length) {}$/;"	f	struct:GenericStringRef
GenericStringRef	include/rapidjson/document.h	/^    explicit GenericStringRef(const CharType* str)$/;"	f	struct:GenericStringRef
GenericStringRef	include/rapidjson/document.h	/^struct GenericStringRef {$/;"	s
GenericStringStream	include/rapidjson/stream.h	/^    GenericStringStream(const Ch *src) : src_(src), head_(src) {}$/;"	f	struct:GenericStringStream
GenericStringStream	include/rapidjson/stream.h	/^struct GenericStringStream {$/;"	s
GenericValue	include/rapidjson/document.h	/^    GenericValue(const Ch* s, SizeType length, Allocator& allocator) : data_() { SetStringRaw(StringRef(s, length), allocator); }$/;"	f	class:GenericValue
GenericValue	include/rapidjson/document.h	/^    GenericValue(const Ch*s, Allocator& allocator) : data_() { SetStringRaw(StringRef(s), allocator); }$/;"	f	class:GenericValue
GenericValue	include/rapidjson/document.h	/^    GenericValue(const GenericValue<Encoding,SourceAllocator>& rhs, Allocator& allocator, bool copyConstStrings = false) {$/;"	f	class:GenericValue
GenericValue	include/rapidjson/document.h	/^    GenericValue(const std::basic_string<Ch>& s, Allocator& allocator) : data_() { SetStringRaw(StringRef(s), allocator); }$/;"	f	class:GenericValue
GenericValue	include/rapidjson/document.h	/^class GenericValue {$/;"	c
Get	include/rapidjson/document.h	/^    T Get() const { return internal::TypeHelper<ValueType, T>::Get(*this); }$/;"	f	class:GenericValue
Get	include/rapidjson/document.h	/^    T Get() { return internal::TypeHelper<ValueType, T>::Get(*this); }$/;"	f	class:GenericValue
Get	include/rapidjson/document.h	/^    static ArrayType Get(ValueType& v) { return v.GetArray(); }$/;"	f	struct:internal::TypeHelper
Get	include/rapidjson/document.h	/^    static ArrayType Get(const ValueType& v) { return v.GetArray(); }$/;"	f	struct:internal::TypeHelper
Get	include/rapidjson/document.h	/^    static ObjectType Get(ValueType& v) { return v.GetObject(); }$/;"	f	struct:internal::TypeHelper
Get	include/rapidjson/document.h	/^    static ObjectType Get(const ValueType& v) { return v.GetObject(); }$/;"	f	struct:internal::TypeHelper
Get	include/rapidjson/document.h	/^    static StringType Get(const ValueType& v) { return StringType(v.GetString(), v.GetStringLength()); }$/;"	f	struct:internal::TypeHelper
Get	include/rapidjson/document.h	/^    static StringType Get(const ValueType& v) { return v.GetString(); }$/;"	f	struct:internal::TypeHelper
Get	include/rapidjson/document.h	/^    static bool Get(const ValueType& v) { return v.GetBool(); }$/;"	f	struct:internal::TypeHelper
Get	include/rapidjson/document.h	/^    static double Get(const ValueType& v) { return v.GetDouble(); }$/;"	f	struct:internal::TypeHelper
Get	include/rapidjson/document.h	/^    static float Get(const ValueType& v) { return v.GetFloat(); }$/;"	f	struct:internal::TypeHelper
Get	include/rapidjson/document.h	/^    static int Get(const ValueType& v) { return v.GetInt(); }$/;"	f	struct:internal::TypeHelper
Get	include/rapidjson/document.h	/^    static int64_t Get(const ValueType& v) { return v.GetInt64(); }$/;"	f	struct:internal::TypeHelper
Get	include/rapidjson/document.h	/^    static uint64_t Get(const ValueType& v) { return v.GetUint64(); }$/;"	f	struct:internal::TypeHelper
Get	include/rapidjson/document.h	/^    static unsigned Get(const ValueType& v) { return v.GetUint(); }$/;"	f	struct:internal::TypeHelper
Get	include/rapidjson/pointer.h	/^    ValueType* Get(ValueType& root, size_t* unresolvedTokenIndex = 0) const {$/;"	f	class:GenericPointer
Get	include/rapidjson/pointer.h	/^    const ValueType* Get(const ValueType& root, size_t* unresolvedTokenIndex = 0) const { $/;"	f	class:GenericPointer
GetAllocator	include/rapidjson/document.h	/^    Allocator& GetAllocator() {$/;"	f	class:GenericDocument
GetAllocator	include/rapidjson/internal/stack.h	/^    Allocator& GetAllocator() {$/;"	f	class:internal::Stack
GetAllocator	include/rapidjson/pointer.h	/^    Allocator& GetAllocator() { return *allocator_; }$/;"	f	class:GenericPointer
GetArray	include/rapidjson/document.h	/^    Array GetArray() { RAPIDJSON_ASSERT(IsArray()); return Array(*this); }$/;"	f	class:GenericValue
GetArray	include/rapidjson/document.h	/^    ConstArray GetArray() const { RAPIDJSON_ASSERT(IsArray()); return ConstArray(*this); }$/;"	f	class:GenericValue
GetBool	include/rapidjson/document.h	/^    bool GetBool() const { RAPIDJSON_ASSERT(IsBool()); return data_.f.flags == kTrueFlag; }$/;"	f	class:GenericValue
GetBuffer	include/rapidjson/memorybuffer.h	/^    const Ch* GetBuffer() const {$/;"	f	struct:GenericMemoryBuffer
GetCachedPower	include/rapidjson/internal/diyfp.h	/^inline DiyFp GetCachedPower(int e, int* K) {$/;"	f	namespace:internal
GetCachedPower10	include/rapidjson/internal/diyfp.h	/^inline DiyFp GetCachedPower10(int exp, int *outExp) {$/;"	f	namespace:internal
GetCachedPowerByIndex	include/rapidjson/internal/diyfp.h	/^inline DiyFp GetCachedPowerByIndex(size_t index) {$/;"	f	namespace:internal
GetCapacity	include/rapidjson/internal/stack.h	/^    size_t GetCapacity() const { return static_cast<size_t>(stackEnd_ - stack_); }$/;"	f	class:internal::Stack
GetCount	include/rapidjson/internal/biginteger.h	/^    size_t GetCount() const { return count_; }$/;"	f	class:internal::BigInteger
GetDigit	include/rapidjson/internal/biginteger.h	/^    Type GetDigit(size_t index) const { RAPIDJSON_ASSERT(index < count_); return digits_[index]; }$/;"	f	class:internal::BigInteger
GetDigitsLut	include/rapidjson/internal/itoa.h	/^inline const char* GetDigitsLut() {$/;"	f	namespace:internal
GetDouble	include/rapidjson/document.h	/^    double GetDouble() const {$/;"	f	class:GenericValue
GetElementsPointer	include/rapidjson/document.h	/^    RAPIDJSON_FORCEINLINE GenericValue* GetElementsPointer() const { return RAPIDJSON_GETPOINTER(GenericValue, data_.a.elements); }$/;"	f	class:GenericValue
GetErrorOffset	include/rapidjson/document.h	/^    size_t GetErrorOffset() const { return parseResult_.Offset(); }$/;"	f	class:GenericDocument
GetErrorOffset	include/rapidjson/reader.h	/^    size_t GetErrorOffset() const { return parseResult_.Offset(); }$/;"	f	class:GenericReader
GetFloat	include/rapidjson/document.h	/^    float GetFloat() const {$/;"	f	class:GenericValue
GetHashCode	include/rapidjson/schema.h	/^    uint64_t GetHashCode() const {$/;"	f	class:internal::Hasher
GetHashCode	include/rapidjson/schema.h	/^    virtual uint64_t GetHashCode(void* hasher) {$/;"	f	class:GenericSchemaValidator
GetInt	include/rapidjson/document.h	/^    int GetInt() const          { RAPIDJSON_ASSERT(data_.f.flags & kIntFlag);   return data_.n.i.i;   }$/;"	f	class:GenericValue
GetInt64	include/rapidjson/document.h	/^    int64_t GetInt64() const    { RAPIDJSON_ASSERT(data_.f.flags & kInt64Flag); return data_.n.i64; }$/;"	f	class:GenericValue
GetInvalidDocumentPointer	include/rapidjson/schema.h	/^    PointerType GetInvalidDocumentPointer() const {$/;"	f	class:GenericSchemaValidator
GetInvalidDocumentPointer	include/rapidjson/schema.h	/^    const PointerType& GetInvalidDocumentPointer() const { return invalidDocumentPointer_; }$/;"	f	class:SchemaValidatingReader
GetInvalidSchemaKeyword	include/rapidjson/schema.h	/^    const Ch* GetInvalidSchemaKeyword() const { return invalidSchemaKeyword_; }$/;"	f	class:SchemaValidatingReader
GetInvalidSchemaKeyword	include/rapidjson/schema.h	/^    const Ch* GetInvalidSchemaKeyword() const {$/;"	f	class:GenericSchemaValidator
GetInvalidSchemaPointer	include/rapidjson/schema.h	/^    PointerType GetInvalidSchemaPointer() const {$/;"	f	class:GenericSchemaValidator
GetInvalidSchemaPointer	include/rapidjson/schema.h	/^    const PointerType& GetInvalidSchemaPointer() const { return invalidSchemaPointer_; }$/;"	f	class:SchemaValidatingReader
GetLength	include/rapidjson/document.h	/^        inline SizeType GetLength() const       { return  static_cast<SizeType>(MaxSize -  str[LenPos]); }$/;"	f	struct:GenericValue::ShortString
GetLength	include/rapidjson/stringbuffer.h	/^    size_t GetLength() const { return stack_.GetSize() \/ sizeof(Ch); }$/;"	f	class:GenericStringBuffer
GetMaxDecimalPlaces	include/rapidjson/writer.h	/^    int GetMaxDecimalPlaces() const {$/;"	f	class:Writer
GetMember	include/rapidjson/schema.h	/^    static const ValueType* GetMember(const ValueType& value, const ValueType& name) {$/;"	f	class:internal::Schema
GetMembersPointer	include/rapidjson/document.h	/^    RAPIDJSON_FORCEINLINE Member* GetMembersPointer() const { return RAPIDJSON_GETPOINTER(Member, data_.o.members); }$/;"	f	class:GenericValue
GetObject	include/rapidjson/document.h	/^    ConstObject GetObject() const { RAPIDJSON_ASSERT(IsObject()); return ConstObject(*this); }$/;"	f	class:GenericValue
GetObject	include/rapidjson/document.h	/^    Object GetObject() { RAPIDJSON_ASSERT(IsObject()); return Object(*this); }$/;"	f	class:GenericValue
GetParseError	include/rapidjson/document.h	/^    ParseErrorCode GetParseError() const { return parseResult_.Code(); }$/;"	f	class:GenericDocument
GetParseErrorCode	include/rapidjson/pointer.h	/^    PointerParseErrorCode GetParseErrorCode() const { return parseErrorCode_; }$/;"	f	class:GenericPointer
GetParseErrorCode	include/rapidjson/reader.h	/^    ParseErrorCode GetParseErrorCode() const { return parseResult_.Code(); }$/;"	f	class:GenericReader
GetParseErrorFunc	include/rapidjson/error/error.h	/^typedef const RAPIDJSON_ERROR_CHARTYPE* (*GetParseErrorFunc)(ParseErrorCode);$/;"	t
GetParseErrorOffset	include/rapidjson/pointer.h	/^    size_t GetParseErrorOffset() const { return parseErrorOffset_; }$/;"	f	class:GenericPointer
GetParseError_En	include/rapidjson/error/en.h	/^inline const RAPIDJSON_ERROR_CHARTYPE* GetParseError_En(ParseErrorCode parseErrorCode) {$/;"	f
GetParseResult	include/rapidjson/schema.h	/^    const ParseResult& GetParseResult() const { return parseResult_; }$/;"	f	class:SchemaValidatingReader
GetPointer	include/rapidjson/schema.h	/^    PointerType GetPointer(const SchemaType* schema) const {$/;"	f	class:GenericSchemaDocument
GetRange	include/rapidjson/encodings.h	/^    static unsigned char GetRange(unsigned char c) {$/;"	f	struct:UTF8
GetRange	include/rapidjson/internal/regex.h	/^    Range& GetRange(SizeType index) {$/;"	f	class:internal::GenericRegex
GetRange	include/rapidjson/internal/regex.h	/^    const Range& GetRange(SizeType index) const {$/;"	f	class:internal::GenericRegex
GetRoot	include/rapidjson/schema.h	/^    const SchemaType& GetRoot() const { return *root_; }$/;"	f	class:GenericSchemaDocument
GetSchema	include/rapidjson/schema.h	/^    const SchemaType* GetSchema(const PointerType& pointer) const {$/;"	f	class:GenericSchemaDocument
GetSize	include/rapidjson/internal/stack.h	/^    size_t GetSize() const { return static_cast<size_t>(stackTop_ - stack_); }$/;"	f	class:internal::Stack
GetSize	include/rapidjson/memorybuffer.h	/^    size_t GetSize() const { return stack_.GetSize(); }$/;"	f	struct:GenericMemoryBuffer
GetSize	include/rapidjson/stringbuffer.h	/^    size_t GetSize() const { return stack_.GetSize(); }$/;"	f	class:GenericStringBuffer
GetStackCapacity	include/rapidjson/document.h	/^    size_t GetStackCapacity() const { return stack_.GetCapacity(); }$/;"	f	class:GenericDocument
GetState	include/rapidjson/internal/regex.h	/^    State& GetState(SizeType index) {$/;"	f	class:internal::GenericRegex
GetState	include/rapidjson/internal/regex.h	/^    const State& GetState(SizeType index) const {$/;"	f	class:internal::GenericRegex
GetStateAllocator	include/rapidjson/schema.h	/^    StateAllocator& GetStateAllocator() {$/;"	f	class:GenericSchemaValidator
GetStateSetSize	include/rapidjson/internal/regex.h	/^    size_t GetStateSetSize() const {$/;"	f	class:internal::GenericRegexSearch
GetString	include/rapidjson/document.h	/^    const Ch* GetString() const { RAPIDJSON_ASSERT(IsString()); return (data_.f.flags & kInlineStrFlag) ? data_.ss.str : GetStringPointer(); }$/;"	f	class:GenericValue
GetString	include/rapidjson/stringbuffer.h	/^    const Ch* GetString() const {$/;"	f	class:GenericStringBuffer
GetStringLength	include/rapidjson/document.h	/^    SizeType GetStringLength() const { RAPIDJSON_ASSERT(IsString()); return ((data_.f.flags & kInlineStrFlag) ? (data_.ss.GetLength()) : data_.s.length); }$/;"	f	class:GenericValue
GetStringPointer	include/rapidjson/document.h	/^    RAPIDJSON_FORCEINLINE const Ch* GetStringPointer() const { return RAPIDJSON_GETPOINTER(Ch, data_.s.str); }$/;"	f	class:GenericValue
GetTokenCount	include/rapidjson/pointer.h	/^    size_t GetTokenCount() const { return tokenCount_; }$/;"	f	class:GenericPointer
GetTokens	include/rapidjson/pointer.h	/^    const Token* GetTokens() const { return tokens_; }$/;"	f	class:GenericPointer
GetType	include/rapidjson/document.h	/^    Type GetType()  const { return static_cast<Type>(data_.f.flags & kTypeMask); }$/;"	f	class:GenericValue
GetType	include/rapidjson/encodedstream.h	/^    UTFType GetType() const { return type_; }$/;"	f	class:AutoUTFInputStream
GetType	include/rapidjson/encodedstream.h	/^    UTFType GetType() const { return type_; }$/;"	f	class:AutoUTFOutputStream
GetTypeless	include/rapidjson/schema.h	/^    const SchemaType* GetTypeless() const { return typeless_; }$/;"	f	class:GenericSchemaDocument
GetUint	include/rapidjson/document.h	/^    unsigned GetUint() const    { RAPIDJSON_ASSERT(data_.f.flags & kUintFlag);  return data_.n.u.u;   }$/;"	f	class:GenericValue
GetUint64	include/rapidjson/document.h	/^    uint64_t GetUint64() const  { RAPIDJSON_ASSERT(data_.f.flags & kUint64Flag); return data_.n.u64; }$/;"	f	class:GenericValue
GetValueByPointer	include/rapidjson/pointer.h	/^const typename T::ValueType* GetValueByPointer(const T& root, const CharType(&source)[N], size_t* unresolvedTokenIndex = 0) {$/;"	f
GetValueByPointer	include/rapidjson/pointer.h	/^const typename T::ValueType* GetValueByPointer(const T& root, const GenericPointer<typename T::ValueType>& pointer, size_t* unresolvedTokenIndex = 0) {$/;"	f
GetValueByPointer	include/rapidjson/pointer.h	/^typename T::ValueType* GetValueByPointer(T& root, const CharType (&source)[N], size_t* unresolvedTokenIndex = 0) {$/;"	f
GetValueByPointer	include/rapidjson/pointer.h	/^typename T::ValueType* GetValueByPointer(T& root, const GenericPointer<typename T::ValueType>& pointer, size_t* unresolvedTokenIndex = 0) {$/;"	f
GetValueByPointerWithDefault	include/rapidjson/pointer.h	/^GetValueByPointerWithDefault(DocumentType& document, const CharType(&source)[N], T2 defaultValue) {$/;"	f
GetValueByPointerWithDefault	include/rapidjson/pointer.h	/^GetValueByPointerWithDefault(DocumentType& document, const GenericPointer<typename DocumentType::ValueType>& pointer, T2 defaultValue) {$/;"	f
GetValueByPointerWithDefault	include/rapidjson/pointer.h	/^GetValueByPointerWithDefault(T& root, const CharType(&source)[N], T2 defaultValue, typename T::AllocatorType& a) {$/;"	f
GetValueByPointerWithDefault	include/rapidjson/pointer.h	/^GetValueByPointerWithDefault(T& root, const GenericPointer<typename T::ValueType>& pointer, T2 defaultValue, typename T::AllocatorType& a) {$/;"	f
GetValueByPointerWithDefault	include/rapidjson/pointer.h	/^typename DocumentType::ValueType& GetValueByPointerWithDefault(DocumentType& document, const CharType(&source)[N], const std::basic_string<typename DocumentType::Ch>& defaultValue) {$/;"	f
GetValueByPointerWithDefault	include/rapidjson/pointer.h	/^typename DocumentType::ValueType& GetValueByPointerWithDefault(DocumentType& document, const CharType(&source)[N], const typename DocumentType::Ch* defaultValue) {$/;"	f
GetValueByPointerWithDefault	include/rapidjson/pointer.h	/^typename DocumentType::ValueType& GetValueByPointerWithDefault(DocumentType& document, const CharType(&source)[N], const typename DocumentType::ValueType& defaultValue) {$/;"	f
GetValueByPointerWithDefault	include/rapidjson/pointer.h	/^typename DocumentType::ValueType& GetValueByPointerWithDefault(DocumentType& document, const GenericPointer<typename DocumentType::ValueType>& pointer, const std::basic_string<typename DocumentType::Ch>& defaultValue) {$/;"	f
GetValueByPointerWithDefault	include/rapidjson/pointer.h	/^typename DocumentType::ValueType& GetValueByPointerWithDefault(DocumentType& document, const GenericPointer<typename DocumentType::ValueType>& pointer, const typename DocumentType::Ch* defaultValue) {$/;"	f
GetValueByPointerWithDefault	include/rapidjson/pointer.h	/^typename DocumentType::ValueType& GetValueByPointerWithDefault(DocumentType& document, const GenericPointer<typename DocumentType::ValueType>& pointer, const typename DocumentType::ValueType& defaultValue) {$/;"	f
GetValueByPointerWithDefault	include/rapidjson/pointer.h	/^typename T::ValueType& GetValueByPointerWithDefault(T& root, const CharType(&source)[N], const std::basic_string<typename T::Ch>& defaultValue, typename T::AllocatorType& a) {$/;"	f
GetValueByPointerWithDefault	include/rapidjson/pointer.h	/^typename T::ValueType& GetValueByPointerWithDefault(T& root, const CharType(&source)[N], const typename T::Ch* defaultValue, typename T::AllocatorType& a) {$/;"	f
GetValueByPointerWithDefault	include/rapidjson/pointer.h	/^typename T::ValueType& GetValueByPointerWithDefault(T& root, const CharType(&source)[N], const typename T::ValueType& defaultValue, typename T::AllocatorType& a) {$/;"	f
GetValueByPointerWithDefault	include/rapidjson/pointer.h	/^typename T::ValueType& GetValueByPointerWithDefault(T& root, const GenericPointer<typename T::ValueType>& pointer, const std::basic_string<typename T::Ch>& defaultValue, typename T::AllocatorType& a) {$/;"	f
GetValueByPointerWithDefault	include/rapidjson/pointer.h	/^typename T::ValueType& GetValueByPointerWithDefault(T& root, const GenericPointer<typename T::ValueType>& pointer, const typename T::Ch* defaultValue, typename T::AllocatorType& a) {$/;"	f
GetValueByPointerWithDefault	include/rapidjson/pointer.h	/^typename T::ValueType& GetValueByPointerWithDefault(T& root, const GenericPointer<typename T::ValueType>& pointer, const typename T::ValueType& defaultValue, typename T::AllocatorType& a) {$/;"	f
GetWithDefault	include/rapidjson/pointer.h	/^    GetWithDefault(GenericDocument<EncodingType, typename ValueType::AllocatorType, stackAllocator>& document, T defaultValue) const {$/;"	f	class:GenericPointer
GetWithDefault	include/rapidjson/pointer.h	/^    GetWithDefault(ValueType& root, T defaultValue, typename ValueType::AllocatorType& allocator) const {$/;"	f	class:GenericPointer
GetWithDefault	include/rapidjson/pointer.h	/^    ValueType& GetWithDefault(GenericDocument<EncodingType, typename ValueType::AllocatorType, stackAllocator>& document, const Ch* defaultValue) const {$/;"	f	class:GenericPointer
GetWithDefault	include/rapidjson/pointer.h	/^    ValueType& GetWithDefault(GenericDocument<EncodingType, typename ValueType::AllocatorType, stackAllocator>& document, const ValueType& defaultValue) const {$/;"	f	class:GenericPointer
GetWithDefault	include/rapidjson/pointer.h	/^    ValueType& GetWithDefault(GenericDocument<EncodingType, typename ValueType::AllocatorType, stackAllocator>& document, const std::basic_string<Ch>& defaultValue) const {$/;"	f	class:GenericPointer
GetWithDefault	include/rapidjson/pointer.h	/^    ValueType& GetWithDefault(ValueType& root, const Ch* defaultValue, typename ValueType::AllocatorType& allocator) const {$/;"	f	class:GenericPointer
GetWithDefault	include/rapidjson/pointer.h	/^    ValueType& GetWithDefault(ValueType& root, const ValueType& defaultValue, typename ValueType::AllocatorType& allocator) const {$/;"	f	class:GenericPointer
GetWithDefault	include/rapidjson/pointer.h	/^    ValueType& GetWithDefault(ValueType& root, const std::basic_string<Ch>& defaultValue, typename ValueType::AllocatorType& allocator) const {$/;"	f	class:GenericPointer
Grisu2	include/rapidjson/internal/dtoa.h	/^inline void Grisu2(double value, char* buffer, int* length, int* K) {$/;"	f	namespace:internal
GrisuRound	include/rapidjson/internal/dtoa.h	/^inline void GrisuRound(char* buffer, int len, uint64_t delta, uint64_t rest, uint64_t ten_kappa, uint64_t wp_w) {$/;"	f	namespace:internal
HEADER_BEAM	DoseCalcIO/io_data_structs.h	/^struct HEADER_BEAM {$/;"	s
HEADER_BEAMLET	DoseCalcIO/io_data_structs.h	/^struct HEADER_BEAMLET {$/;"	s
HEADER_PATIENT	DoseCalcIO/io_data_structs.h	/^struct HEADER_PATIENT {$/;"	s
HELPER_CUDA_H	include/cuda-common/helper_cuda.h	16;"	d
HELPER_MATH_H	include/cuda-common/helper_math.h	24;"	d
HEX	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	555;"	d	file:
HEX	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	266;"	d	file:
HEX	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	540;"	d	file:
HandleError	include/rapidjson/reader.h	/^    void HandleError(IterativeParsingState src, InputStream& is) {$/;"	f	class:GenericReader
HandleRefSchema	include/rapidjson/schema.h	/^    bool HandleRefSchema(const PointerType& source, const SchemaType** schema, const ValueType& v, const ValueType& document) {$/;"	f	class:GenericSchemaDocument
HasAllocator	include/rapidjson/internal/stack.h	/^    bool HasAllocator() const {$/;"	f	class:internal::Stack
HasBOM	include/rapidjson/encodedstream.h	/^    bool HasBOM() const { return hasBOM_; }$/;"	f	class:AutoUTFInputStream
HasMember	include/rapidjson/document.h	/^    bool HasMember(const Ch* name) const { return FindMember(name) != MemberEnd(); }$/;"	f	class:GenericValue
HasMember	include/rapidjson/document.h	/^    bool HasMember(const Ch* name) const { return value_.HasMember(name); }$/;"	f	class:GenericObject
HasMember	include/rapidjson/document.h	/^    bool HasMember(const GenericValue<Encoding, SourceAllocator>& name) const { return FindMember(name) != MemberEnd(); }$/;"	f	class:GenericValue
HasMember	include/rapidjson/document.h	/^    bool HasMember(const std::basic_string<Ch>& name) const { return FindMember(name) != MemberEnd(); }$/;"	f	class:GenericValue
HasMember	include/rapidjson/document.h	/^    bool HasMember(const std::basic_string<Ch>& name) const { return value_.HasMember(name); }$/;"	f	class:GenericObject
HasMember	include/rapidjson/document.h	/^    template <typename SourceAllocator> bool HasMember(const GenericValue<EncodingType, SourceAllocator>& name) const { return value_.HasMember(name); }$/;"	f	class:GenericObject
HasParseError	include/rapidjson/document.h	/^    bool HasParseError() const { return parseResult_.IsError(); }$/;"	f	class:GenericDocument
HasParseError	include/rapidjson/reader.h	/^    bool HasParseError() const { return parseResult_.IsError(); }$/;"	f	class:GenericReader
Hash	include/rapidjson/schema.h	/^    static uint64_t Hash(uint64_t h, uint64_t d) {$/;"	f	class:internal::Hasher
HashCodeArray	include/rapidjson/schema.h	/^    typedef GenericValue<UTF8<>, StateAllocator> HashCodeArray;$/;"	t	class:GenericSchemaValidator
Hasher	include/rapidjson/schema.h	/^    Hasher(Allocator* allocator = 0, size_t stackCapacity = kDefaultSize) : stack_(allocator, stackCapacity) {}$/;"	f	class:internal::Hasher
Hasher	include/rapidjson/schema.h	/^class Hasher {$/;"	c	namespace:internal
HasherType	include/rapidjson/schema.h	/^    typedef internal::Hasher<EncodingType, StateAllocator> HasherType;$/;"	t	class:GenericSchemaValidator
Host	include/rapidjson/internal/meta.h	/^    struct Host {$/;"	s	struct:internal::IsBaseOfImpl
I	include/rapidjson/document.h	/^        struct I {$/;"	s	union:GenericValue::Number
ID_VOID_MAIN	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	6;"	d	file:
IGenericRemoteSchemaDocumentProvider	include/rapidjson/schema.h	/^class IGenericRemoteSchemaDocumentProvider {$/;"	c
INC	anonymize_dicom/Makefile	/^INC=$(foreach d, $(INCLUDES), -I$d)$/;"	m
INCLUDES	anonymize_dicom/Makefile	/^INCLUDES=\/usr\/local\/cuda\/samples\/common\/inc\/ \/usr\/local\/cuda\/include\/ ..\/$/;"	m
INLINE	dosecalc-beamlet/sparsify_manager.h	/^    INLINE,$/;"	m	class:SPARSIFY_STRATEGY
INT16_C	include/rapidjson/msinttypes/stdint.h	277;"	d
INT16_C	include/rapidjson/msinttypes/stdint.h	55;"	d
INT16_C	include/rapidjson/msinttypes/stdint.h	66;"	d
INT16_MAX	include/rapidjson/msinttypes/stdint.h	181;"	d
INT16_MIN	include/rapidjson/msinttypes/stdint.h	180;"	d
INT32_C	include/rapidjson/msinttypes/stdint.h	278;"	d
INT32_C	include/rapidjson/msinttypes/stdint.h	56;"	d
INT32_C	include/rapidjson/msinttypes/stdint.h	67;"	d
INT32_MAX	include/rapidjson/msinttypes/stdint.h	183;"	d
INT32_MIN	include/rapidjson/msinttypes/stdint.h	182;"	d
INT64_C	include/rapidjson/msinttypes/stdint.h	279;"	d
INT64_C	include/rapidjson/msinttypes/stdint.h	57;"	d
INT64_C	include/rapidjson/msinttypes/stdint.h	68;"	d
INT64_MAX	include/rapidjson/msinttypes/stdint.h	185;"	d
INT64_MIN	include/rapidjson/msinttypes/stdint.h	184;"	d
INT8_C	include/rapidjson/msinttypes/stdint.h	276;"	d
INT8_C	include/rapidjson/msinttypes/stdint.h	54;"	d
INT8_C	include/rapidjson/msinttypes/stdint.h	65;"	d
INT8_MAX	include/rapidjson/msinttypes/stdint.h	179;"	d
INT8_MIN	include/rapidjson/msinttypes/stdint.h	178;"	d
INTERPTYPE	DoseCalcIO/ctlut.h	/^    enum class INTERPTYPE {$/;"	c	struct:CTLUT
INTMAX_C	include/rapidjson/msinttypes/stdint.h	290;"	d
INTMAX_C	include/rapidjson/msinttypes/stdint.h	79;"	d
INTMAX_MAX	include/rapidjson/msinttypes/stdint.h	232;"	d
INTMAX_MIN	include/rapidjson/msinttypes/stdint.h	231;"	d
INTPTR_MAX	include/rapidjson/msinttypes/stdint.h	222;"	d
INTPTR_MAX	include/rapidjson/msinttypes/stdint.h	226;"	d
INTPTR_MIN	include/rapidjson/msinttypes/stdint.h	221;"	d
INTPTR_MIN	include/rapidjson/msinttypes/stdint.h	225;"	d
INT_FAST16_MAX	include/rapidjson/msinttypes/stdint.h	209;"	d
INT_FAST16_MIN	include/rapidjson/msinttypes/stdint.h	208;"	d
INT_FAST32_MAX	include/rapidjson/msinttypes/stdint.h	211;"	d
INT_FAST32_MIN	include/rapidjson/msinttypes/stdint.h	210;"	d
INT_FAST64_MAX	include/rapidjson/msinttypes/stdint.h	213;"	d
INT_FAST64_MIN	include/rapidjson/msinttypes/stdint.h	212;"	d
INT_FAST8_MAX	include/rapidjson/msinttypes/stdint.h	207;"	d
INT_FAST8_MIN	include/rapidjson/msinttypes/stdint.h	206;"	d
INT_LEAST16_MAX	include/rapidjson/msinttypes/stdint.h	195;"	d
INT_LEAST16_MIN	include/rapidjson/msinttypes/stdint.h	194;"	d
INT_LEAST32_MAX	include/rapidjson/msinttypes/stdint.h	197;"	d
INT_LEAST32_MIN	include/rapidjson/msinttypes/stdint.h	196;"	d
INT_LEAST64_MAX	include/rapidjson/msinttypes/stdint.h	199;"	d
INT_LEAST64_MIN	include/rapidjson/msinttypes/stdint.h	198;"	d
INT_LEAST8_MAX	include/rapidjson/msinttypes/stdint.h	193;"	d
INT_LEAST8_MIN	include/rapidjson/msinttypes/stdint.h	192;"	d
INVALID	dosecalc-beamlet/nvbbRayConvolve_device.cu	4;"	d	file:
IN_PTV	DoseCalcIO/beam.h	/^            IN_PTV,$/;"	m	class:BEAM::ISO_LOC_T
IRemoteSchemaDocumentProvider	include/rapidjson/fwd.h	/^typedef IGenericRemoteSchemaDocumentProvider<SchemaDocument> IRemoteSchemaDocumentProvider;$/;"	t
IRemoteSchemaDocumentProvider	include/rapidjson/schema.h	/^typedef IGenericRemoteSchemaDocumentProvider<SchemaDocument> IRemoteSchemaDocumentProvider;$/;"	t
IRemoteSchemaDocumentProviderType	include/rapidjson/schema.h	/^    typedef IGenericRemoteSchemaDocumentProvider<GenericSchemaDocument> IRemoteSchemaDocumentProviderType;$/;"	t	class:GenericSchemaDocument
ISO_LOC_T	DoseCalcIO/beam.h	/^        enum class ISO_LOC_T {$/;"	c	class:BEAM
ISO_T	DoseCalcIO/beam.h	/^        enum class ISO_T {$/;"	c	class:BEAM
ISchemaStateFactory	include/rapidjson/schema.h	/^class ISchemaStateFactory {$/;"	c	namespace:internal
ISchemaValidator	include/rapidjson/schema.h	/^class ISchemaValidator {$/;"	c	namespace:internal
IStreamWrapper	include/rapidjson/istreamwrapper.h	/^typedef BasicIStreamWrapper<std::istream> IStreamWrapper;$/;"	t
ImplicitConcatenation	include/rapidjson/internal/regex.h	/^    void ImplicitConcatenation(Stack<Allocator>& atomCountStack, Stack<Allocator>& operatorStack) {$/;"	f	class:internal::GenericRegex
Initialize	DoseCalcIO/paths.cpp	/^void Paths::Initialize() {$/;"	f	class:Paths
InsituStringStream	include/rapidjson/fwd.h	/^typedef GenericInsituStringStream<UTF8<char> > InsituStringStream;$/;"	t
InsituStringStream	include/rapidjson/stream.h	/^typedef GenericInsituStringStream<UTF8<> > InsituStringStream;$/;"	t
Instance	DoseCalcIO/paths.cpp	/^Paths* Paths::Instance() {$/;"	f	class:Paths
Instance	RTClasses/logconfig.cpp	/^LogConfig* LogConfig::Instance() {$/;"	f	class:LogConfig
Int	include/rapidjson/document.h	/^    bool Int(int i) { new (stack_.template Push<ValueType>()) ValueType(i); return true; }$/;"	f	class:GenericDocument
Int	include/rapidjson/prettywriter.h	/^    bool Int(int i)             { PrettyPrefix(kNumberType); return Base::WriteInt(i); }$/;"	f	class:PrettyWriter
Int	include/rapidjson/reader.h	/^    bool Int(int) { return static_cast<Override&>(*this).Default(); }$/;"	f	struct:BaseReaderHandler
Int	include/rapidjson/schema.h	/^    bool Int(Context& context, int i) const {$/;"	f	class:internal::Schema
Int	include/rapidjson/schema.h	/^    bool Int(int i)         { RAPIDJSON_SCHEMA_HANDLE_VALUE_(Int,    (CurrentContext(), i), (i)); }$/;"	f	class:GenericSchemaValidator
Int	include/rapidjson/schema.h	/^    bool Int(int i) { Number n; n.u.i = i; n.d = static_cast<double>(i); return WriteNumber(n); }$/;"	f	class:internal::Hasher
Int	include/rapidjson/writer.h	/^    bool Int(int i)             { Prefix(kNumberType); return EndValue(WriteInt(i)); }$/;"	f	class:Writer
Int64	include/rapidjson/document.h	/^    bool Int64(int64_t i) { new (stack_.template Push<ValueType>()) ValueType(i); return true; }$/;"	f	class:GenericDocument
Int64	include/rapidjson/prettywriter.h	/^    bool Int64(int64_t i64)     { PrettyPrefix(kNumberType); return Base::WriteInt64(i64); }$/;"	f	class:PrettyWriter
Int64	include/rapidjson/reader.h	/^    bool Int64(int64_t) { return static_cast<Override&>(*this).Default(); }$/;"	f	struct:BaseReaderHandler
Int64	include/rapidjson/schema.h	/^    bool Int64(Context& context, int64_t i) const {$/;"	f	class:internal::Schema
Int64	include/rapidjson/schema.h	/^    bool Int64(int64_t i)   { RAPIDJSON_SCHEMA_HANDLE_VALUE_(Int64,  (CurrentContext(), i), (i)); }$/;"	f	class:GenericSchemaValidator
Int64	include/rapidjson/schema.h	/^    bool Int64(int64_t i) { Number n; n.u.i = i; n.d = static_cast<double>(i); return WriteNumber(n); }$/;"	f	class:internal::Hasher
Int64	include/rapidjson/writer.h	/^    bool Int64(int64_t i64)     { Prefix(kNumberType); return EndValue(WriteInt64(i64)); }$/;"	f	class:Writer
IntegerExponent	include/rapidjson/internal/ieee754.h	/^    int IntegerExponent() const { return (IsNormal() ? Exponent() : kDenormalExponent) - kSignificandSize; }$/;"	f	class:internal::Double
IntegerSignificand	include/rapidjson/internal/ieee754.h	/^    uint64_t IntegerSignificand() const { return IsNormal() ? Significand() | kHiddenBit : Significand(); }$/;"	f	class:internal::Double
Is	include/rapidjson/document.h	/^    bool Is() const { return internal::TypeHelper<ValueType, T>::Is(*this); }$/;"	f	class:GenericValue
Is	include/rapidjson/document.h	/^    static bool Is(const ValueType& v) { return v.IsArray(); }$/;"	f	struct:internal::TypeHelper
Is	include/rapidjson/document.h	/^    static bool Is(const ValueType& v) { return v.IsBool(); }$/;"	f	struct:internal::TypeHelper
Is	include/rapidjson/document.h	/^    static bool Is(const ValueType& v) { return v.IsDouble(); }$/;"	f	struct:internal::TypeHelper
Is	include/rapidjson/document.h	/^    static bool Is(const ValueType& v) { return v.IsFloat(); }$/;"	f	struct:internal::TypeHelper
Is	include/rapidjson/document.h	/^    static bool Is(const ValueType& v) { return v.IsInt(); }$/;"	f	struct:internal::TypeHelper
Is	include/rapidjson/document.h	/^    static bool Is(const ValueType& v) { return v.IsInt64(); }$/;"	f	struct:internal::TypeHelper
Is	include/rapidjson/document.h	/^    static bool Is(const ValueType& v) { return v.IsObject(); }$/;"	f	struct:internal::TypeHelper
Is	include/rapidjson/document.h	/^    static bool Is(const ValueType& v) { return v.IsString(); }$/;"	f	struct:internal::TypeHelper
Is	include/rapidjson/document.h	/^    static bool Is(const ValueType& v) { return v.IsUint(); }$/;"	f	struct:internal::TypeHelper
Is	include/rapidjson/document.h	/^    static bool Is(const ValueType& v) { return v.IsUint64(); }$/;"	f	struct:internal::TypeHelper
IsAppBuiltAs64	CudaUtilities/manage_gpu.cu	/^inline bool IsAppBuiltAs64()$/;"	f
IsArray	include/rapidjson/document.h	/^    bool IsArray()  const { return data_.f.flags == kArrayFlag; }$/;"	f	class:GenericValue
IsBaseOf	include/rapidjson/internal/meta.h	/^template <typename B, typename D> struct IsBaseOf$/;"	s	namespace:internal
IsBaseOfImpl	include/rapidjson/internal/meta.h	/^template<typename B, typename D> struct IsBaseOfImpl {$/;"	s	namespace:internal
IsBool	include/rapidjson/document.h	/^    bool IsBool()   const { return (data_.f.flags & kBoolFlag) != 0; }$/;"	f	class:GenericValue
IsComplete	include/rapidjson/writer.h	/^    bool IsComplete() const {$/;"	f	class:Writer
IsConst	include/rapidjson/internal/meta.h	/^template <typename T> struct IsConst : FalseType {};$/;"	s	namespace:internal
IsConst	include/rapidjson/internal/meta.h	/^template <typename T> struct IsConst<const T> : TrueType {};$/;"	s	namespace:internal
IsDouble	include/rapidjson/document.h	/^    bool IsDouble() const { return (data_.f.flags & kDoubleFlag) != 0; }$/;"	f	class:GenericValue
IsError	include/rapidjson/error/error.h	/^    bool IsError() const { return code_ != kParseErrorNone; }$/;"	f	struct:ParseResult
IsFalse	include/rapidjson/document.h	/^    bool IsFalse()  const { return data_.f.flags == kFalseFlag; }$/;"	f	class:GenericValue
IsFloat	include/rapidjson/document.h	/^    bool IsFloat() const  {$/;"	f	class:GenericValue
IsGPUCapableP2P	CudaUtilities/manage_gpu.cu	/^inline bool IsGPUCapableP2P(cudaDeviceProp *pProp)$/;"	f
IsGenericValue	include/rapidjson/document.h	/^template <typename T> struct IsGenericValue : IsGenericValueImpl<T>::Type {};$/;"	s	namespace:internal
IsGenericValueImpl	include/rapidjson/document.h	/^struct IsGenericValueImpl : FalseType {};$/;"	s	namespace:internal
IsGenericValueImpl	include/rapidjson/document.h	/^template <typename T> struct IsGenericValueImpl<T, typename Void<typename T::EncodingType>::Type, typename Void<typename T::AllocatorType>::Type>$/;"	s	namespace:internal
IsInf	include/rapidjson/internal/ieee754.h	/^    bool IsInf() const { return (u_ & kExponentMask) == kExponentMask && Significand() == 0; }$/;"	f	class:internal::Double
IsInt	include/rapidjson/document.h	/^    bool IsInt()    const { return (data_.f.flags & kIntFlag) != 0; }$/;"	f	class:GenericValue
IsInt64	include/rapidjson/document.h	/^    bool IsInt64()  const { return (data_.f.flags & kInt64Flag) != 0; }$/;"	f	class:GenericValue
IsIterativeParsingCompleteState	include/rapidjson/reader.h	/^    RAPIDJSON_FORCEINLINE bool IsIterativeParsingCompleteState(IterativeParsingState s) {$/;"	f	class:GenericReader
IsIterativeParsingDelimiterState	include/rapidjson/reader.h	/^    RAPIDJSON_FORCEINLINE bool IsIterativeParsingDelimiterState(IterativeParsingState s) {$/;"	f	class:GenericReader
IsLosslessDouble	include/rapidjson/document.h	/^    bool IsLosslessDouble() const {$/;"	f	class:GenericValue
IsLosslessFloat	include/rapidjson/document.h	/^    bool IsLosslessFloat() const {$/;"	f	class:GenericValue
IsMoreConst	include/rapidjson/internal/meta.h	/^struct IsMoreConst$/;"	s	namespace:internal
IsNan	include/rapidjson/internal/ieee754.h	/^    bool IsNan() const { return (u_ & kExponentMask) == kExponentMask && Significand() != 0; }$/;"	f	class:internal::Double
IsNanOrInf	include/rapidjson/internal/ieee754.h	/^    bool IsNanOrInf() const { return (u_ & kExponentMask) == kExponentMask; }$/;"	f	class:internal::Double
IsNormal	include/rapidjson/internal/ieee754.h	/^    bool IsNormal() const { return (u_ & kExponentMask) != 0 || Significand() == 0; }$/;"	f	class:internal::Double
IsNull	include/rapidjson/document.h	/^    bool IsNull()   const { return data_.f.flags == kNullFlag; }$/;"	f	class:GenericValue
IsNumber	include/rapidjson/document.h	/^    bool IsNumber() const { return (data_.f.flags & kNumberFlag) != 0; }$/;"	f	class:GenericValue
IsObject	include/rapidjson/document.h	/^    bool IsObject() const { return data_.f.flags == kObjectFlag; }$/;"	f	class:GenericValue
IsPatternMatch	include/rapidjson/schema.h	/^    static bool IsPatternMatch(const RegexType* pattern, const Ch *str, SizeType length) {$/;"	f	class:internal::Schema
IsPatternMatch	include/rapidjson/schema.h	/^    static bool IsPatternMatch(const RegexType* pattern, const Ch *str, SizeType) {$/;"	f	class:internal::Schema
IsPatternMatch	include/rapidjson/schema.h	/^    static bool IsPatternMatch(const RegexType*, const Ch *, SizeType) { return true; }$/;"	f	class:internal::Schema
IsPointer	include/rapidjson/internal/meta.h	/^template <typename T> struct IsPointer : FalseType {};$/;"	s	namespace:internal
IsPointer	include/rapidjson/internal/meta.h	/^template <typename T> struct IsPointer<T*> : TrueType {};$/;"	s	namespace:internal
IsSame	include/rapidjson/internal/meta.h	/^template <typename T, typename U> struct IsSame : FalseType {};$/;"	s	namespace:internal
IsSame	include/rapidjson/internal/meta.h	/^template <typename T> struct IsSame<T, T> : TrueType {};$/;"	s	namespace:internal
IsString	include/rapidjson/document.h	/^    bool IsString() const { return (data_.f.flags & kStringFlag) != 0; }$/;"	f	class:GenericValue
IsTrue	include/rapidjson/document.h	/^    bool IsTrue()   const { return data_.f.flags == kTrueFlag; }$/;"	f	class:GenericValue
IsUint	include/rapidjson/document.h	/^    bool IsUint()   const { return (data_.f.flags & kUintFlag) != 0; }$/;"	f	class:GenericValue
IsUint64	include/rapidjson/document.h	/^    bool IsUint64() const { return (data_.f.flags & kUint64Flag) != 0; }$/;"	f	class:GenericValue
IsValid	include/rapidjson/internal/regex.h	/^    bool IsValid() const {$/;"	f	class:internal::GenericRegex
IsValid	include/rapidjson/pointer.h	/^        bool IsValid() const { return valid_; }$/;"	f	class:GenericPointer::PercentDecodeStream
IsValid	include/rapidjson/pointer.h	/^    bool IsValid() const { return parseErrorCode_ == kPointerParseErrorNone; }$/;"	f	class:GenericPointer
IsValid	include/rapidjson/schema.h	/^    bool IsValid() const { return isValid_; }$/;"	f	class:SchemaValidatingReader
IsValid	include/rapidjson/schema.h	/^    bool IsValid() const { return stack_.GetSize() == sizeof(uint64_t); }$/;"	f	class:internal::Hasher
IsValid	include/rapidjson/schema.h	/^    virtual bool IsValid() const { return valid_; }$/;"	f	class:GenericSchemaValidator
IsZero	include/rapidjson/internal/biginteger.h	/^    bool IsZero() const { return count_ == 1 && digits_[0] == 0; }$/;"	f	class:internal::BigInteger
IsZero	include/rapidjson/internal/ieee754.h	/^    bool IsZero() const { return (u_ & (kExponentMask | kSignificandMask)) == 0; }$/;"	f	class:internal::Double
IterativeParse	include/rapidjson/reader.h	/^    ParseResult IterativeParse(InputStream& is, Handler& handler) {$/;"	f	class:GenericReader
IterativeParseComplete	include/rapidjson/reader.h	/^    RAPIDJSON_FORCEINLINE bool IterativeParseComplete() {$/;"	f	class:GenericReader
IterativeParseInit	include/rapidjson/reader.h	/^    void IterativeParseInit() {$/;"	f	class:GenericReader
IterativeParseNext	include/rapidjson/reader.h	/^    bool IterativeParseNext(InputStream& is, Handler& handler) {$/;"	f	class:GenericReader
IterativeParsingArrayFinishState	include/rapidjson/reader.h	/^        IterativeParsingArrayFinishState,$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingArrayInitialState	include/rapidjson/reader.h	/^        IterativeParsingArrayInitialState,$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingElementDelimiterState	include/rapidjson/reader.h	/^        IterativeParsingElementDelimiterState,$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingElementState	include/rapidjson/reader.h	/^        IterativeParsingElementState,$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingErrorState	include/rapidjson/reader.h	/^        IterativeParsingErrorState,      \/\/ sink states at top$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingFinishState	include/rapidjson/reader.h	/^        IterativeParsingFinishState = 0, \/\/ sink states at top$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingKeyValueDelimiterState	include/rapidjson/reader.h	/^        IterativeParsingKeyValueDelimiterState,$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingMemberDelimiterState	include/rapidjson/reader.h	/^        IterativeParsingMemberDelimiterState,$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingMemberKeyState	include/rapidjson/reader.h	/^        IterativeParsingMemberKeyState,$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingMemberValueState	include/rapidjson/reader.h	/^        IterativeParsingMemberValueState,$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingObjectFinishState	include/rapidjson/reader.h	/^        IterativeParsingObjectFinishState,$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingObjectInitialState	include/rapidjson/reader.h	/^        IterativeParsingObjectInitialState,$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingStartState	include/rapidjson/reader.h	/^        IterativeParsingStartState,$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingState	include/rapidjson/reader.h	/^    enum IterativeParsingState {$/;"	g	class:GenericReader
IterativeParsingValueState	include/rapidjson/reader.h	/^        IterativeParsingValueState,$/;"	e	enum:GenericReader::IterativeParsingState
Iterator	include/rapidjson/document.h	/^    typedef GenericMember<Encoding,Allocator>* Iterator;$/;"	t	struct:GenericMemberIterator
Iterator	include/rapidjson/document.h	/^    typedef GenericMemberIterator Iterator;$/;"	t	class:GenericMemberIterator
Iterator	include/rapidjson/document.h	/^    typedef const GenericMember<Encoding,Allocator>* Iterator;$/;"	t	struct:GenericMemberIterator
KB	CudaUtilities/memory_manager.cuh	15;"	d	file:
KERNEL	DoseCalcIO/kernel.h	/^class KERNEL {$/;"	c
KERNEL	DoseCalcIO/kernel.h	44;"	d
KERNEL_CATEGORIES	DoseCalcIO/kernel.h	/^enum class KERNEL_CATEGORIES {$/;"	c
KERNEL_TOTAL_VALUE	DoseCalcIO/kernel.h	47;"	d
KERNEL_VALUE	DoseCalcIO/kernel.h	45;"	d
KERN_RADII	dosecalc-beam/nvbbRayConvolve_device.cuh	/^__constant__ float             KERN_RADII[N_KERNEL_RADII];$/;"	v
KERN_RADII	dosecalc-beamlet/nvbbRayConvolve_device.cuh	/^__constant__ float             KERN_RADII[N_KERNEL_RADII];$/;"	v
Key	include/rapidjson/document.h	/^    bool Key(const Ch* str, SizeType length, bool copy) { return String(str, length, copy); }$/;"	f	class:GenericDocument
Key	include/rapidjson/prettywriter.h	/^    bool Key(const Ch* str) { return Key(str, internal::StrLen(str)); }$/;"	f	class:PrettyWriter
Key	include/rapidjson/prettywriter.h	/^    bool Key(const Ch* str, SizeType length, bool copy = false) { return String(str, length, copy); }$/;"	f	class:PrettyWriter
Key	include/rapidjson/prettywriter.h	/^    bool Key(const std::basic_string<Ch>& str) {$/;"	f	class:PrettyWriter
Key	include/rapidjson/reader.h	/^    bool Key(const Ch* str, SizeType len, bool copy) { return static_cast<Override&>(*this).String(str, len, copy); }$/;"	f	struct:BaseReaderHandler
Key	include/rapidjson/schema.h	/^    bool Key(Context& context, const Ch* str, SizeType len, bool) const {$/;"	f	class:internal::Schema
Key	include/rapidjson/schema.h	/^    bool Key(const Ch* str, SizeType len, bool copy) { return String(str, len, copy); }$/;"	f	class:internal::Hasher
Key	include/rapidjson/schema.h	/^    bool Key(const Ch* str, SizeType len, bool copy) {$/;"	f	class:GenericSchemaValidator
Key	include/rapidjson/writer.h	/^    bool Key(const Ch* const& str) { return Key(str, internal::StrLen(str)); }$/;"	f	class:Writer
Key	include/rapidjson/writer.h	/^    bool Key(const Ch* str, SizeType length, bool copy = false) { return String(str, length, copy); }$/;"	f	class:Writer
Key	include/rapidjson/writer.h	/^    bool Key(const std::basic_string<Ch>& str)$/;"	f	class:Writer
KeyValPairs	DoseCalcIO/io_data_structs.h	/^struct KeyValPairs {$/;"	s
LDFLAGS	anonymize_dicom/Makefile	/^LDFLAGS=$/;"	m
LDLIBS	anonymize_dicom/Makefile	/^LDLIBS=ofstd dcmdata dcmimgle dcmimage dcmrt$/;"	m
LIB	anonymize_dicom/Makefile	/^LIB=$(foreach l, $(LDLIBS), -l$l)$/;"	m
LINEAR	DoseCalcIO/ctlut.h	/^        LINEAR,$/;"	m	class:CTLUT::INTERPTYPE
LOG	Utilities/wqueue.h	15;"	d
LOGIC_EXCEPTION	include/cuda-common/exception.h	81;"	d
LPS	RTClasses/rtimages.h	/^    enum class DATAORDER { LPS, RAS };$/;"	m	class:RTImage::DATAORDER
LUTPOINT	DoseCalcIO/ctlut.h	/^    LUTPOINT(std::string label, float hunits, float massdens, float reledens=0)$/;"	f	struct:LUTPOINT
LUTPOINT	DoseCalcIO/ctlut.h	/^struct LUTPOINT {$/;"	s
LeftBracketToken	include/rapidjson/reader.h	/^        LeftBracketToken = 0,$/;"	e	enum:GenericReader::Token
LeftCurlyBracketToken	include/rapidjson/reader.h	/^        LeftCurlyBracketToken,$/;"	e	enum:GenericReader::Token
LenPos	include/rapidjson/document.h	/^        enum { MaxChars = sizeof(static_cast<Flag*>(0)->payload) \/ sizeof(Ch), MaxSize = MaxChars - 1, LenPos = MaxSize };$/;"	e	enum:GenericValue::ShortString::__anon5
Length	include/rapidjson/reader.h	/^        size_t Length() const { return length_; }$/;"	f	class:GenericReader::StackStream
Length	include/rapidjson/reader.h	/^        size_t Length() { return 0; }$/;"	f	class:GenericReader::NumberStream
Length	include/rapidjson/reader.h	/^        size_t Length() { return stackStream.Length(); }$/;"	f	class:GenericReader::NumberStream
Level	include/rapidjson/writer.h	/^        Level(bool inArray_) : valueCount(0), inArray(inArray_) {}$/;"	f	struct:Writer::Level
Level	include/rapidjson/writer.h	/^    struct Level {$/;"	s	class:Writer
LogConfig	RTClasses/logconfig.h	/^        LogConfig() {}$/;"	f	class:LogConfig
LogConfig	RTClasses/logconfig.h	/^class LogConfig {$/;"	c
Logger	Utilities/logging.h	/^class Logger {$/;"	c
MAGENTA	Utilities/logging.h	/^    YELLOW, BLUE, MAGENTA,$/;"	e	enum:COLOR
MAJOR_VERSION	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^MAJOR_VERSION, $/;"	e	enum:libraryPropertyType_t	file:
MAX	include/cuda-common/helper_cuda.h	1019;"	d
MAXIMUM_DEVICE_COUNT	include/dosecalc_defs.h	16;"	d
MAXIMUM_SERVERS_PER_NODE	include/client/dummy_defs.h	8;"	d
MAX_FNAME_CHARS	RTClasses/rtimages.cpp	11;"	d	file:
MAX_KERNELS	DoseCalcIO/kernel.h	9;"	d
MAX_TEXTURE_DIM	dosecalc-preprocess/kernels.cuh	6;"	d	file:
MB	CudaUtilities/memory_manager.cuh	16;"	d	file:
MEAN_ANGLE	DoseCalcIO/kernel.cpp	23;"	d	file:
MEAN_RADIUS	DoseCalcIO/kernel.cpp	22;"	d	file:
MGCS_PARAMS	include/client/dummy_defs.h	/^class MGCS_PARAMS$/;"	c
MINOR_VERSION	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^MINOR_VERSION, $/;"	e	enum:libraryPropertyType_t	file:
MONO_KERNELS	DoseCalcIO/kernel.h	/^struct MONO_KERNELS {$/;"	s
MRIMAGE_SOP_CLASS_UID	RTClasses/rtimages.h	13;"	d
MULTITHREADING_H	Utilities/multithreading.h	13;"	d
MULTITHREADING_H	include/cuda-common/multithreading.h	13;"	d
Malloc	include/rapidjson/allocators.h	/^    void* Malloc(size_t size) { $/;"	f	class:CrtAllocator
Malloc	include/rapidjson/allocators.h	/^    void* Malloc(size_t size) {$/;"	f	class:MemoryPoolAllocator
MallocState	include/rapidjson/schema.h	/^    virtual void* MallocState(size_t size) {$/;"	f	class:GenericSchemaValidator
Match	include/rapidjson/internal/regex.h	/^    bool Match(InputStream& is) {$/;"	f	class:internal::GenericRegexSearch
Match	include/rapidjson/internal/regex.h	/^    bool Match(const Ch* s) {$/;"	f	class:internal::GenericRegexSearch
MatchRange	include/rapidjson/internal/regex.h	/^    bool MatchRange(SizeType rangeIndex, unsigned codepoint) const {$/;"	f	class:internal::GenericRegexSearch
MaxChars	include/rapidjson/document.h	/^        enum { MaxChars = sizeof(static_cast<Flag*>(0)->payload) \/ sizeof(Ch), MaxSize = MaxChars - 1, LenPos = MaxSize };$/;"	e	enum:GenericValue::ShortString::__anon5
MaxSize	include/rapidjson/document.h	/^        enum { MaxChars = sizeof(static_cast<Flag*>(0)->payload) \/ sizeof(Ch), MaxSize = MaxChars - 1, LenPos = MaxSize };$/;"	e	enum:GenericValue::ShortString::__anon5
MaybeAddConst	include/rapidjson/internal/meta.h	/^template <bool Constify, typename T> struct MaybeAddConst : SelectIfCond<Constify, const T, T> {};$/;"	s	namespace:internal
Member	include/rapidjson/document.h	/^    typedef GenericMember<Encoding, Allocator> Member;$/;"	t	class:GenericValue
MemberBegin	include/rapidjson/document.h	/^    ConstMemberIterator MemberBegin() const { RAPIDJSON_ASSERT(IsObject()); return ConstMemberIterator(GetMembersPointer()); }$/;"	f	class:GenericValue
MemberBegin	include/rapidjson/document.h	/^    MemberIterator MemberBegin()            { RAPIDJSON_ASSERT(IsObject()); return MemberIterator(GetMembersPointer()); }$/;"	f	class:GenericValue
MemberBegin	include/rapidjson/document.h	/^    MemberIterator MemberBegin() const { return value_.MemberBegin(); }$/;"	f	class:GenericObject
MemberCount	include/rapidjson/document.h	/^    SizeType MemberCount() const { RAPIDJSON_ASSERT(IsObject()); return data_.o.size; }$/;"	f	class:GenericValue
MemberCount	include/rapidjson/document.h	/^    SizeType MemberCount() const { return value_.MemberCount(); }$/;"	f	class:GenericObject
MemberEnd	include/rapidjson/document.h	/^    ConstMemberIterator MemberEnd() const   { RAPIDJSON_ASSERT(IsObject()); return ConstMemberIterator(GetMembersPointer() + data_.o.size); }$/;"	f	class:GenericValue
MemberEnd	include/rapidjson/document.h	/^    MemberIterator MemberEnd()              { RAPIDJSON_ASSERT(IsObject()); return MemberIterator(GetMembersPointer() + data_.o.size); }$/;"	f	class:GenericValue
MemberEnd	include/rapidjson/document.h	/^    MemberIterator MemberEnd() const { return value_.MemberEnd(); }$/;"	f	class:GenericObject
MemberIterator	include/rapidjson/document.h	/^    typedef GenericMemberIterator<Const, typename ValueT::EncodingType, typename ValueT::AllocatorType> MemberIterator;  \/\/ This may be const or non-const iterator$/;"	t	class:GenericObject
MemberIterator	include/rapidjson/document.h	/^    typedef typename GenericMemberIterator<false,Encoding,Allocator>::Iterator MemberIterator;  \/\/!< Member iterator for iterating in object.$/;"	t	class:GenericValue
MemoryBuffer	include/rapidjson/fwd.h	/^typedef GenericMemoryBuffer<CrtAllocator> MemoryBuffer;$/;"	t
MemoryBuffer	include/rapidjson/memorybuffer.h	/^typedef GenericMemoryBuffer<> MemoryBuffer;$/;"	t
MemoryManager	CudaUtilities/memory_manager.cuh	/^        MemoryManager() {}$/;"	f	class:MemoryManager
MemoryManager	CudaUtilities/memory_manager.cuh	/^        MemoryManager(int64_t mem_limit) : mem_limit{mem_limit} {}$/;"	f	class:MemoryManager
MemoryManager	CudaUtilities/memory_manager.cuh	/^class MemoryManager {$/;"	c	file:
MemoryPoolAllocator	include/rapidjson/allocators.h	/^    MemoryPoolAllocator(size_t chunkSize = kDefaultChunkCapacity, BaseAllocator* baseAllocator = 0) : $/;"	f	class:MemoryPoolAllocator
MemoryPoolAllocator	include/rapidjson/allocators.h	/^    MemoryPoolAllocator(void *buffer, size_t size, size_t chunkSize = kDefaultChunkCapacity, BaseAllocator* baseAllocator = 0) :$/;"	f	class:MemoryPoolAllocator
MemoryPoolAllocator	include/rapidjson/allocators.h	/^class MemoryPoolAllocator {$/;"	c
MemoryStream	include/rapidjson/memorystream.h	/^    MemoryStream(const Ch *src, size_t size) : src_(src), begin_(src), end_(src + size), size_(size) {}$/;"	f	struct:MemoryStream
MemoryStream	include/rapidjson/memorystream.h	/^struct MemoryStream {$/;"	s
Min	include/rapidjson/internal/regex.h	/^    static SizeType Min(SizeType a, SizeType b) { return a < b ? a : b; }$/;"	f	class:internal::GenericRegex
Min3	include/rapidjson/internal/strtod.h	/^inline T Min3(T a, T b, T c) {$/;"	f	namespace:internal
MulAdd64	include/rapidjson/internal/biginteger.h	/^    static uint64_t MulAdd64(uint64_t a, uint64_t b, uint64_t k, uint64_t* outHigh) {$/;"	f	class:internal::BigInteger
MultiplyPow5	include/rapidjson/internal/biginteger.h	/^    BigInteger& MultiplyPow5(unsigned exp) {$/;"	f	class:internal::BigInteger
N	include/rapidjson/reader.h	1791;"	d
N	include/rapidjson/reader.h	1805;"	d
N	tests/utils/generate_beamlist.py	/^                N = N+1$/;"	v
N	tests/utils/generate_beamlist.py	/^    N = 0$/;"	v
N16	include/rapidjson/reader.h	1792;"	d
N16	include/rapidjson/reader.h	1806;"	d
NONE	Utilities/logging.h	/^    NONE = 0,$/;"	e	enum:COLOR
NUM_PRELINKED_OBJECTS	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/a_dlink.reg.c	1;"	d	file:
NVTX_NAME_STREAM	include/profile.h	26;"	d
NVTX_NAME_STREAM	include/profile.h	32;"	d
NVTX_POP_RANGE	include/profile.h	25;"	d
NVTX_POP_RANGE	include/profile.h	31;"	d
NVTX_PUSH_RANGE	include/profile.h	13;"	d
NVTX_PUSH_RANGE	include/profile.h	30;"	d
N_KERNEL_ANGLES	DoseCalcIO/kernel.h	11;"	d
N_KERNEL_CATEGORIES	DoseCalcIO/kernel.h	12;"	d
N_KERNEL_RADII	DoseCalcIO/kernel.h	10;"	d
N_beamlets	DoseCalcIO/io_data_structs.h	/^    ushort      N_beamlets;       \/\/ number of active beamlets in this beam$/;"	m	struct:HEADER_BEAM
N_beams	DoseCalcIO/io_data_structs.h	/^    ushort      N_beams;              \/\/ total number of beams stored in file$/;"	m	struct:HEADER_PATIENT
N_coeffs	DoseCalcIO/io_data_structs.h	/^    uint64_t    N_coeffs;         \/\/ number of non-zero coeffs in column$/;"	m	struct:HEADER_BEAMLET
NeedPercentEncode	include/rapidjson/pointer.h	/^    bool NeedPercentEncode(Ch c) const {$/;"	f	class:GenericPointer
NewRange	include/rapidjson/internal/regex.h	/^    SizeType NewRange(unsigned codepoint) {$/;"	f	class:internal::GenericRegex
NewState	include/rapidjson/internal/regex.h	/^    SizeType NewState(SizeType out, SizeType out1, unsigned codepoint) {$/;"	f	class:internal::GenericRegex
NextPositiveDouble	include/rapidjson/internal/ieee754.h	/^    double NextPositiveDouble() const {$/;"	f	class:internal::Double
No	include/rapidjson/internal/meta.h	/^    typedef char (&No) [2];$/;"	t	struct:internal::IsBaseOfImpl
NonConstIterator	include/rapidjson/document.h	/^    typedef GenericMemberIterator<false,Encoding,Allocator> NonConstIterator;$/;"	t	class:GenericMemberIterator
Normalize	include/rapidjson/internal/diyfp.h	/^    DiyFp Normalize() const {$/;"	f	struct:internal::DiyFp
NormalizeBoundary	include/rapidjson/internal/diyfp.h	/^    DiyFp NormalizeBoundary() const {$/;"	f	struct:internal::DiyFp
NormalizedBoundaries	include/rapidjson/internal/diyfp.h	/^    void NormalizedBoundaries(DiyFp* minus, DiyFp* plus) const {$/;"	f	struct:internal::DiyFp
NotExpr	include/rapidjson/internal/meta.h	/^template <typename C> struct NotExpr  : SelectIf<C,FalseType,TrueType>::Type {};$/;"	s	namespace:internal
NotNullStrLen	include/rapidjson/document.h	/^    SizeType NotNullStrLen(const CharType* str) {$/;"	f	struct:GenericStringRef
Null	include/rapidjson/document.h	/^    bool Null() { new (stack_.template Push<ValueType>()) ValueType(); return true; }$/;"	f	class:GenericDocument
Null	include/rapidjson/prettywriter.h	/^    bool Null()                 { PrettyPrefix(kNullType);   return Base::WriteNull(); }$/;"	f	class:PrettyWriter
Null	include/rapidjson/reader.h	/^    bool Null() { return static_cast<Override&>(*this).Default(); }$/;"	f	struct:BaseReaderHandler
Null	include/rapidjson/schema.h	/^    bool Null()             { RAPIDJSON_SCHEMA_HANDLE_VALUE_(Null,   (CurrentContext()   ), ( )); }$/;"	f	class:GenericSchemaValidator
Null	include/rapidjson/schema.h	/^    bool Null() { return WriteType(kNullType); }$/;"	f	class:internal::Hasher
Null	include/rapidjson/schema.h	/^    bool Null(Context& context) const { $/;"	f	class:internal::Schema
Null	include/rapidjson/writer.h	/^    bool Null()                 { Prefix(kNullType);   return EndValue(WriteNull()); }$/;"	f	class:Writer
NullToken	include/rapidjson/reader.h	/^        NullToken,$/;"	e	enum:GenericReader::Token
Number	include/rapidjson/document.h	/^    union Number {$/;"	u	class:GenericValue
Number	include/rapidjson/schema.h	/^    struct Number {$/;"	s	class:internal::Hasher
NumberStream	include/rapidjson/reader.h	/^        NumberStream(GenericReader& reader, InputStream& is) : Base(reader, is) {}$/;"	f	class:GenericReader::NumberStream
NumberStream	include/rapidjson/reader.h	/^        NumberStream(GenericReader& reader, InputStream& is) : Base(reader, is), stackStream(reader.stack_) {}$/;"	f	class:GenericReader::NumberStream
NumberStream	include/rapidjson/reader.h	/^        NumberStream(GenericReader& reader, InputStream& s) : is(s) { (void)reader;  }$/;"	f	class:GenericReader::NumberStream
NumberStream	include/rapidjson/reader.h	/^    class NumberStream<InputStream, false, false> {$/;"	c	class:GenericReader
NumberStream	include/rapidjson/reader.h	/^    class NumberStream<InputStream, true, false> : public NumberStream<InputStream, false, false> {$/;"	c	class:GenericReader
NumberStream	include/rapidjson/reader.h	/^    class NumberStream<InputStream, true, true> : public NumberStream<InputStream, true, false> {$/;"	c	class:GenericReader
NumberToken	include/rapidjson/reader.h	/^        NumberToken,$/;"	e	enum:GenericReader::Token
OBJS	anonymize_dicom/Makefile	/^OBJS=$(subst .cpp,.o,$(SRCS))$/;"	m
ORIENT_T	DoseCalcIO/beam.h	/^        enum class ORIENT_T {$/;"	c	class:BEAM
OStreamWrapper	include/rapidjson/ostreamwrapper.h	/^typedef BasicOStreamWrapper<std::ostream> OStreamWrapper;$/;"	t
OUTPUT_DIR	extern/python/generate_phantom.py	/^    OUTPUT_DIR = '.\/phantom_output'$/;"	v
OUT_PTV	DoseCalcIO/beam.h	/^            OUT_PTV,$/;"	m	class:BEAM::ISO_LOC_T
Object	include/rapidjson/document.h	/^    typedef GenericObject<false, ValueT> Object;$/;"	t	class:GenericObject
Object	include/rapidjson/document.h	/^    typedef GenericObject<false, ValueType> Object;$/;"	t	class:GenericValue
ObjectData	include/rapidjson/document.h	/^    struct ObjectData {$/;"	s	class:GenericValue
ObjectEmpty	include/rapidjson/document.h	/^    bool ObjectEmpty() const { RAPIDJSON_ASSERT(IsObject()); return data_.o.size == 0; }$/;"	f	class:GenericValue
ObjectEmpty	include/rapidjson/document.h	/^    bool ObjectEmpty() const { return value_.ObjectEmpty(); }$/;"	f	class:GenericObject
ObjectType	include/rapidjson/document.h	/^    typedef typename ValueType::ConstObject ObjectType;$/;"	t	struct:internal::TypeHelper
ObjectType	include/rapidjson/document.h	/^    typedef typename ValueType::Object ObjectType;$/;"	t	struct:internal::TypeHelper
Offset	include/rapidjson/error/error.h	/^    size_t Offset() const { return offset_; }$/;"	f	struct:ParseResult
Operator	include/rapidjson/internal/regex.h	/^    enum Operator {$/;"	g	class:internal::GenericRegex
OrExpr	include/rapidjson/internal/meta.h	/^template <typename C1, typename C2> struct OrExpr  : OrExprCond<C1::Value, C2::Value>::Type {};$/;"	s	namespace:internal
OrExprCond	include/rapidjson/internal/meta.h	/^template <> struct OrExprCond<false, false> : FalseType {};$/;"	s	namespace:internal
OrExprCond	include/rapidjson/internal/meta.h	/^template <bool Cond1, bool Cond2> struct OrExprCond : TrueType {};$/;"	s	namespace:internal
Override	include/rapidjson/reader.h	/^    typedef typename internal::SelectIf<internal::IsSame<Derived, void>, BaseReaderHandler, Derived>::Type Override;$/;"	t	struct:BaseReaderHandler
PATCH_LEVEL	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^PATCH_LEVEL$/;"	e	enum:libraryPropertyType_t	file:
PER_BEAM	dosecalc-beamlet/sparsify_manager.h	/^    PER_BEAM,$/;"	m	class:WRITE_STRATEGY
PER_BEAMLET	dosecalc-beamlet/sparsify_manager.h	/^    PER_BEAMLET,$/;"	m	class:WRITE_STRATEGY
PI	include/dosecalc_defs.h	9;"	d
PILLAR_GRID	DoseCalcIO/io_data_structs.h	/^struct PILLAR_GRID{$/;"	s
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	339;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	342;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	345;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	348;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	351;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	354;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	357;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	360;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	363;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	366;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	369;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	372;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	375;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	378;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	381;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	384;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	387;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	390;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	393;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	396;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	399;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	402;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	405;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	408;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	412;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	415;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	418;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	421;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	424;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	429;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	432;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	436;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	101;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	104;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	107;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	110;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	113;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	116;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	119;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	123;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	126;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	129;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	132;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	135;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	140;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	143;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	147;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	50;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	53;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	56;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	59;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	62;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	65;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	68;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	71;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	74;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	77;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	80;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	83;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	86;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	89;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	92;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	95;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	98;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	324;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	327;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	330;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	333;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	336;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	339;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	342;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	345;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	348;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	351;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	354;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	357;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	360;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	363;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	366;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	369;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	372;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	375;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	378;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	381;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	384;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	387;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	390;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	393;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	397;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	400;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	403;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	406;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	409;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	414;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	417;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	421;"	d	file:
PRINT_MIN	CudaUtilities/cuda_timing.cuh	10;"	d	file:
PRINT_MIN	Utilities/timing.h	10;"	d
PRINT_MS	CudaUtilities/cuda_timing.cuh	8;"	d	file:
PRINT_MS	Utilities/timing.h	8;"	d
PRINT_SEC	CudaUtilities/cuda_timing.cuh	9;"	d	file:
PRINT_SEC	Utilities/timing.h	9;"	d
PRIX16	include/rapidjson/msinttypes/inttypes.h	118;"	d
PRIX32	include/rapidjson/msinttypes/inttypes.h	131;"	d
PRIX64	include/rapidjson/msinttypes/inttypes.h	144;"	d
PRIX8	include/rapidjson/msinttypes/inttypes.h	105;"	d
PRIXFAST16	include/rapidjson/msinttypes/inttypes.h	126;"	d
PRIXFAST32	include/rapidjson/msinttypes/inttypes.h	139;"	d
PRIXFAST64	include/rapidjson/msinttypes/inttypes.h	152;"	d
PRIXFAST8	include/rapidjson/msinttypes/inttypes.h	113;"	d
PRIXLEAST16	include/rapidjson/msinttypes/inttypes.h	122;"	d
PRIXLEAST32	include/rapidjson/msinttypes/inttypes.h	135;"	d
PRIXLEAST64	include/rapidjson/msinttypes/inttypes.h	148;"	d
PRIXLEAST8	include/rapidjson/msinttypes/inttypes.h	109;"	d
PRIXMAX	include/rapidjson/msinttypes/inttypes.h	157;"	d
PRIXPTR	include/rapidjson/msinttypes/inttypes.h	162;"	d
PRId16	include/rapidjson/msinttypes/inttypes.h	74;"	d
PRId32	include/rapidjson/msinttypes/inttypes.h	81;"	d
PRId64	include/rapidjson/msinttypes/inttypes.h	88;"	d
PRId8	include/rapidjson/msinttypes/inttypes.h	67;"	d
PRIdFAST16	include/rapidjson/msinttypes/inttypes.h	78;"	d
PRIdFAST32	include/rapidjson/msinttypes/inttypes.h	85;"	d
PRIdFAST64	include/rapidjson/msinttypes/inttypes.h	92;"	d
PRIdFAST8	include/rapidjson/msinttypes/inttypes.h	71;"	d
PRIdLEAST16	include/rapidjson/msinttypes/inttypes.h	76;"	d
PRIdLEAST32	include/rapidjson/msinttypes/inttypes.h	83;"	d
PRIdLEAST64	include/rapidjson/msinttypes/inttypes.h	90;"	d
PRIdLEAST8	include/rapidjson/msinttypes/inttypes.h	69;"	d
PRIdMAX	include/rapidjson/msinttypes/inttypes.h	95;"	d
PRIdPTR	include/rapidjson/msinttypes/inttypes.h	98;"	d
PRIi16	include/rapidjson/msinttypes/inttypes.h	75;"	d
PRIi32	include/rapidjson/msinttypes/inttypes.h	82;"	d
PRIi64	include/rapidjson/msinttypes/inttypes.h	89;"	d
PRIi8	include/rapidjson/msinttypes/inttypes.h	68;"	d
PRIiFAST16	include/rapidjson/msinttypes/inttypes.h	79;"	d
PRIiFAST32	include/rapidjson/msinttypes/inttypes.h	86;"	d
PRIiFAST64	include/rapidjson/msinttypes/inttypes.h	93;"	d
PRIiFAST8	include/rapidjson/msinttypes/inttypes.h	72;"	d
PRIiLEAST16	include/rapidjson/msinttypes/inttypes.h	77;"	d
PRIiLEAST32	include/rapidjson/msinttypes/inttypes.h	84;"	d
PRIiLEAST64	include/rapidjson/msinttypes/inttypes.h	91;"	d
PRIiLEAST8	include/rapidjson/msinttypes/inttypes.h	70;"	d
PRIiMAX	include/rapidjson/msinttypes/inttypes.h	96;"	d
PRIiPTR	include/rapidjson/msinttypes/inttypes.h	99;"	d
PRIo16	include/rapidjson/msinttypes/inttypes.h	115;"	d
PRIo32	include/rapidjson/msinttypes/inttypes.h	128;"	d
PRIo64	include/rapidjson/msinttypes/inttypes.h	141;"	d
PRIo8	include/rapidjson/msinttypes/inttypes.h	102;"	d
PRIoFAST16	include/rapidjson/msinttypes/inttypes.h	123;"	d
PRIoFAST32	include/rapidjson/msinttypes/inttypes.h	136;"	d
PRIoFAST64	include/rapidjson/msinttypes/inttypes.h	149;"	d
PRIoFAST8	include/rapidjson/msinttypes/inttypes.h	110;"	d
PRIoLEAST16	include/rapidjson/msinttypes/inttypes.h	119;"	d
PRIoLEAST32	include/rapidjson/msinttypes/inttypes.h	132;"	d
PRIoLEAST64	include/rapidjson/msinttypes/inttypes.h	145;"	d
PRIoLEAST8	include/rapidjson/msinttypes/inttypes.h	106;"	d
PRIoMAX	include/rapidjson/msinttypes/inttypes.h	154;"	d
PRIoPTR	include/rapidjson/msinttypes/inttypes.h	159;"	d
PRIu16	include/rapidjson/msinttypes/inttypes.h	116;"	d
PRIu32	include/rapidjson/msinttypes/inttypes.h	129;"	d
PRIu64	include/rapidjson/msinttypes/inttypes.h	142;"	d
PRIu8	include/rapidjson/msinttypes/inttypes.h	103;"	d
PRIuFAST16	include/rapidjson/msinttypes/inttypes.h	124;"	d
PRIuFAST32	include/rapidjson/msinttypes/inttypes.h	137;"	d
PRIuFAST64	include/rapidjson/msinttypes/inttypes.h	150;"	d
PRIuFAST8	include/rapidjson/msinttypes/inttypes.h	111;"	d
PRIuLEAST16	include/rapidjson/msinttypes/inttypes.h	120;"	d
PRIuLEAST32	include/rapidjson/msinttypes/inttypes.h	133;"	d
PRIuLEAST64	include/rapidjson/msinttypes/inttypes.h	146;"	d
PRIuLEAST8	include/rapidjson/msinttypes/inttypes.h	107;"	d
PRIuMAX	include/rapidjson/msinttypes/inttypes.h	155;"	d
PRIuPTR	include/rapidjson/msinttypes/inttypes.h	160;"	d
PRIx16	include/rapidjson/msinttypes/inttypes.h	117;"	d
PRIx32	include/rapidjson/msinttypes/inttypes.h	130;"	d
PRIx64	include/rapidjson/msinttypes/inttypes.h	143;"	d
PRIx8	include/rapidjson/msinttypes/inttypes.h	104;"	d
PRIxFAST16	include/rapidjson/msinttypes/inttypes.h	125;"	d
PRIxFAST32	include/rapidjson/msinttypes/inttypes.h	138;"	d
PRIxFAST64	include/rapidjson/msinttypes/inttypes.h	151;"	d
PRIxFAST8	include/rapidjson/msinttypes/inttypes.h	112;"	d
PRIxLEAST16	include/rapidjson/msinttypes/inttypes.h	121;"	d
PRIxLEAST32	include/rapidjson/msinttypes/inttypes.h	134;"	d
PRIxLEAST64	include/rapidjson/msinttypes/inttypes.h	147;"	d
PRIxLEAST8	include/rapidjson/msinttypes/inttypes.h	108;"	d
PRIxMAX	include/rapidjson/msinttypes/inttypes.h	156;"	d
PRIxPTR	include/rapidjson/msinttypes/inttypes.h	161;"	d
PTRDIFF_MAX	include/rapidjson/msinttypes/stdint.h	239;"	d
PTRDIFF_MAX	include/rapidjson/msinttypes/stdint.h	242;"	d
PTRDIFF_MIN	include/rapidjson/msinttypes/stdint.h	238;"	d
PTRDIFF_MIN	include/rapidjson/msinttypes/stdint.h	241;"	d
PTV_CENTROID	DoseCalcIO/beam.h	/^            PTV_CENTROID,$/;"	m	class:BEAM::ISO_T
P_ALL	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^P_ALL, $/;"	e	enum:__anon19	file:
P_PGID	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^P_PGID$/;"	e	enum:__anon19	file:
P_PID	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^P_PID, $/;"	e	enum:__anon19	file:
PackRowConvolve	dosecalc-beamlet/nvbbRayConvolve_device.cu	/^PackRowConvolve( float *bDens,$/;"	f
PackedREVtoBEVdose	dosecalc-beamlet/nvbbRayConvolve_device.cu	/^PackedREVtoBEVdose($/;"	f
Parse	include/rapidjson/document.h	/^    GenericDocument& Parse(const Ch* str) {$/;"	f	class:GenericDocument
Parse	include/rapidjson/document.h	/^    GenericDocument& Parse(const Ch* str, size_t length) {$/;"	f	class:GenericDocument
Parse	include/rapidjson/document.h	/^    GenericDocument& Parse(const std::basic_string<Ch>& str) {$/;"	f	class:GenericDocument
Parse	include/rapidjson/document.h	/^    GenericDocument& Parse(const std::basic_string<typename SourceEncoding::Ch>& str) {$/;"	f	class:GenericDocument
Parse	include/rapidjson/document.h	/^    GenericDocument& Parse(const typename SourceEncoding::Ch* str) {$/;"	f	class:GenericDocument
Parse	include/rapidjson/document.h	/^    GenericDocument& Parse(const typename SourceEncoding::Ch* str, size_t length) {$/;"	f	class:GenericDocument
Parse	include/rapidjson/internal/regex.h	/^    void Parse(DecodedStream<InputStream, Encoding>& ds) {$/;"	f	class:internal::GenericRegex
Parse	include/rapidjson/pointer.h	/^    void Parse(const Ch* source, size_t length) {$/;"	f	class:GenericPointer
Parse	include/rapidjson/reader.h	/^    ParseResult Parse(InputStream& is, Handler& handler) {$/;"	f	class:GenericReader
ParseArray	include/rapidjson/reader.h	/^    void ParseArray(InputStream& is, Handler& handler) {$/;"	f	class:GenericReader
ParseErrorCode	include/rapidjson/error/error.h	/^enum ParseErrorCode {$/;"	g
ParseFalse	include/rapidjson/reader.h	/^    void ParseFalse(InputStream& is, Handler& handler) {$/;"	f	class:GenericReader
ParseFlag	include/rapidjson/reader.h	/^enum ParseFlag {$/;"	g
ParseHex4	include/rapidjson/reader.h	/^    unsigned ParseHex4(InputStream& is, size_t escapeOffset) {$/;"	f	class:GenericReader
ParseInsitu	include/rapidjson/document.h	/^    GenericDocument& ParseInsitu(Ch* str) {$/;"	f	class:GenericDocument
ParseNull	include/rapidjson/reader.h	/^    void ParseNull(InputStream& is, Handler& handler) {$/;"	f	class:GenericReader
ParseNumber	include/rapidjson/reader.h	/^    void ParseNumber(InputStream& is, Handler& handler) {$/;"	f	class:GenericReader
ParseObject	include/rapidjson/reader.h	/^    void ParseObject(InputStream& is, Handler& handler) {$/;"	f	class:GenericReader
ParseRange	include/rapidjson/internal/regex.h	/^    bool ParseRange(DecodedStream<InputStream, Encoding>& ds, SizeType* range) {$/;"	f	class:internal::GenericRegex
ParseResult	include/rapidjson/error/error.h	/^    ParseResult() : code_(kParseErrorNone), offset_(0) {}$/;"	f	struct:ParseResult
ParseResult	include/rapidjson/error/error.h	/^    ParseResult(ParseErrorCode code, size_t offset) : code_(code), offset_(offset) {}$/;"	f	struct:ParseResult
ParseResult	include/rapidjson/error/error.h	/^struct ParseResult {$/;"	s
ParseStream	include/rapidjson/document.h	/^    GenericDocument& ParseStream(InputStream& is) {$/;"	f	class:GenericDocument
ParseString	include/rapidjson/reader.h	/^    void ParseString(InputStream& is, Handler& handler, bool isKey = false) {$/;"	f	class:GenericReader
ParseStringToStream	include/rapidjson/reader.h	/^    RAPIDJSON_FORCEINLINE void ParseStringToStream(InputStream& is, OutputStream& os) {$/;"	f	class:GenericReader
ParseTrue	include/rapidjson/reader.h	/^    void ParseTrue(InputStream& is, Handler& handler) {$/;"	f	class:GenericReader
ParseUint64	include/rapidjson/internal/biginteger.h	/^    static uint64_t ParseUint64(const char* begin, const char* end) {$/;"	f	class:internal::BigInteger
ParseUnsigned	include/rapidjson/internal/regex.h	/^    bool ParseUnsigned(DecodedStream<InputStream, Encoding>& ds, unsigned* u) {$/;"	f	class:internal::GenericRegex
ParseValue	include/rapidjson/reader.h	/^    void ParseValue(InputStream& is, Handler& handler) {$/;"	f	class:GenericReader
Patch	include/rapidjson/internal/regex.h	/^    void Patch(SizeType l, SizeType s) {$/;"	f	class:internal::GenericRegex
Paths	DoseCalcIO/paths.h	/^        Paths() {};$/;"	f	class:Paths
Paths	DoseCalcIO/paths.h	/^class Paths {$/;"	c
PatternProperty	include/rapidjson/schema.h	/^        PatternProperty() : schema(), pattern() {}$/;"	f	struct:internal::Schema::PatternProperty
PatternProperty	include/rapidjson/schema.h	/^    struct PatternProperty {$/;"	s	class:internal::Schema
PatternValidatorType	include/rapidjson/schema.h	/^    enum PatternValidatorType {$/;"	g	struct:internal::SchemaValidationContext
Peek	include/rapidjson/encodedstream.h	/^    Ch Peek() const { RAPIDJSON_ASSERT(false); return 0;}$/;"	f	class:AutoUTFOutputStream
Peek	include/rapidjson/encodedstream.h	/^    Ch Peek() const { RAPIDJSON_ASSERT(false); return 0;}$/;"	f	class:EncodedOutputStream
Peek	include/rapidjson/encodedstream.h	/^    Ch Peek() const { return current_; }$/;"	f	class:AutoUTFInputStream
Peek	include/rapidjson/encodedstream.h	/^    Ch Peek() const { return current_; }$/;"	f	class:EncodedInputStream
Peek	include/rapidjson/encodedstream.h	/^    Ch Peek() const { return is_.Peek(); }$/;"	f	class:EncodedInputStream
Peek	include/rapidjson/filereadstream.h	/^    Ch Peek() const { return *current_; }$/;"	f	class:FileReadStream
Peek	include/rapidjson/filewritestream.h	/^    char Peek() const { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:FileWriteStream
Peek	include/rapidjson/internal/regex.h	/^    unsigned Peek() { return codepoint_; }$/;"	f	class:internal::DecodedStream
Peek	include/rapidjson/istreamwrapper.h	/^    Ch Peek() const { $/;"	f	class:BasicIStreamWrapper
Peek	include/rapidjson/memorystream.h	/^    Ch Peek() const { return RAPIDJSON_UNLIKELY(src_ == end_) ? '\\0' : *src_; }$/;"	f	struct:MemoryStream
Peek	include/rapidjson/ostreamwrapper.h	/^    char Peek() const { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:BasicOStreamWrapper
Peek	include/rapidjson/reader.h	/^        RAPIDJSON_FORCEINLINE Ch Peek() const { return is.Peek(); }$/;"	f	class:GenericReader::NumberStream
Peek	include/rapidjson/stream.h	/^    Ch Peek() const { return *src_; }$/;"	f	struct:GenericStringStream
Peek	include/rapidjson/stream.h	/^    Ch Peek() { return *src_; }$/;"	f	struct:GenericInsituStringStream
Peek4	include/rapidjson/filereadstream.h	/^    const Ch* Peek4() const {$/;"	f	class:FileReadStream
Peek4	include/rapidjson/istreamwrapper.h	/^    const Ch* Peek4() const {$/;"	f	class:BasicIStreamWrapper
Peek4	include/rapidjson/memorystream.h	/^    const Ch* Peek4() const {$/;"	f	struct:MemoryStream
PercentDecodeStream	include/rapidjson/pointer.h	/^        PercentDecodeStream(const Ch* source, const Ch* end) : src_(source), head_(source), end_(end), valid_(true) {}$/;"	f	class:GenericPointer::PercentDecodeStream
PercentDecodeStream	include/rapidjson/pointer.h	/^    class PercentDecodeStream {$/;"	c	class:GenericPointer
PercentEncodeStream	include/rapidjson/pointer.h	/^        PercentEncodeStream(OutputStream& os) : os_(os) {}$/;"	f	class:GenericPointer::PercentEncodeStream
PercentEncodeStream	include/rapidjson/pointer.h	/^    class PercentEncodeStream {$/;"	c	class:GenericPointer
PlainType	include/rapidjson/document.h	/^    typedef GenericMember<Encoding,Allocator> PlainType;$/;"	t	class:GenericMemberIterator
PlainType	include/rapidjson/document.h	/^    typedef ValueT PlainType;$/;"	t	class:GenericArray
PlainType	include/rapidjson/document.h	/^    typedef ValueT PlainType;$/;"	t	class:GenericObject
Pointer	include/rapidjson/document.h	/^    typedef typename BaseType::pointer         Pointer;$/;"	t	class:GenericMemberIterator
Pointer	include/rapidjson/fwd.h	/^typedef GenericPointer<Value, CrtAllocator> Pointer;$/;"	t
Pointer	include/rapidjson/pointer.h	/^typedef GenericPointer<Value> Pointer;$/;"	t
PointerParseErrorCode	include/rapidjson/pointer.h	/^enum PointerParseErrorCode {$/;"	g
PointerType	include/rapidjson/schema.h	/^    typedef GenericPointer<ValueType, Allocator> PointerType;$/;"	t	class:GenericSchemaDocument
PointerType	include/rapidjson/schema.h	/^    typedef typename SchemaDocumentType::PointerType PointerType;$/;"	t	class:GenericSchemaValidator
PointerType	include/rapidjson/schema.h	/^    typedef typename SchemaDocumentType::PointerType PointerType;$/;"	t	class:SchemaValidatingReader
PointerType	include/rapidjson/schema.h	/^    typedef typename SchemaDocumentType::PointerType PointerType;$/;"	t	class:internal::Schema
Pop	include/rapidjson/internal/stack.h	/^    T* Pop(size_t count) {$/;"	f	class:internal::Stack
Pop	include/rapidjson/memorybuffer.h	/^    void Pop(size_t count) { stack_.template Pop<Ch>(count); }$/;"	f	struct:GenericMemoryBuffer
Pop	include/rapidjson/reader.h	/^        Ch* Pop() {$/;"	f	class:GenericReader::StackStream
Pop	include/rapidjson/reader.h	/^        const char* Pop() { return 0; }$/;"	f	class:GenericReader::NumberStream
Pop	include/rapidjson/reader.h	/^        const char* Pop() {$/;"	f	class:GenericReader::NumberStream
Pop	include/rapidjson/stream.h	/^    void Pop(size_t count) { dst_ -= count; }$/;"	f	struct:GenericInsituStringStream
Pop	include/rapidjson/stringbuffer.h	/^    void Pop(size_t count) { stack_.template Pop<Ch>(count); }$/;"	f	class:GenericStringBuffer
PopBack	include/rapidjson/document.h	/^    GenericArray PopBack() const { value_.PopBack(); return *this; }$/;"	f	class:GenericArray
PopBack	include/rapidjson/document.h	/^    GenericValue& PopBack() {$/;"	f	class:GenericValue
PopSchema	include/rapidjson/schema.h	/^    RAPIDJSON_FORCEINLINE void PopSchema() {$/;"	f	class:GenericSchemaValidator
Populate	include/rapidjson/document.h	/^    GenericDocument& Populate(Generator& g) {$/;"	f	class:GenericDocument
Pow10	include/rapidjson/internal/pow10.h	/^inline double Pow10(int n) {$/;"	f	namespace:internal
Predict	include/rapidjson/reader.h	/^    RAPIDJSON_FORCEINLINE IterativeParsingState Predict(IterativeParsingState state, Token token) {$/;"	f	class:GenericReader
Prefix	include/rapidjson/writer.h	/^    void Prefix(Type type) {$/;"	f	class:Writer
Prettify	include/rapidjson/internal/dtoa.h	/^inline char* Prettify(char* buffer, int length, int k, int maxDecimalPlaces) {$/;"	f	namespace:internal
PrettyFormatOptions	include/rapidjson/prettywriter.h	/^enum PrettyFormatOptions {$/;"	g
PrettyPrefix	include/rapidjson/prettywriter.h	/^    void PrettyPrefix(Type type) {$/;"	f	class:PrettyWriter
PrettyWriter	include/rapidjson/prettywriter.h	/^    PrettyWriter(PrettyWriter&& rhs) :$/;"	f	class:PrettyWriter
PrettyWriter	include/rapidjson/prettywriter.h	/^    explicit PrettyWriter(OutputStream& os, StackAllocator* allocator = 0, size_t levelDepth = Base::kDefaultLevelDepth) : $/;"	f	class:PrettyWriter
PrettyWriter	include/rapidjson/prettywriter.h	/^    explicit PrettyWriter(StackAllocator* allocator = 0, size_t levelDepth = Base::kDefaultLevelDepth) : $/;"	f	class:PrettyWriter
PrettyWriter	include/rapidjson/prettywriter.h	/^class PrettyWriter : public Writer<OutputStream, SourceEncoding, TargetEncoding, StackAllocator, writeFlags> {$/;"	c
PrintInvalidDocument	include/rapidjson/schema.h	/^inline void PrintInvalidDocument(const char* document) {$/;"	f	namespace:internal
PrintInvalidDocument	include/rapidjson/schema.h	/^inline void PrintInvalidDocument(const wchar_t* document) {$/;"	f	namespace:internal
PrintInvalidKeyword	include/rapidjson/schema.h	/^inline void PrintInvalidKeyword(const char* keyword) {$/;"	f	namespace:internal
PrintInvalidKeyword	include/rapidjson/schema.h	/^inline void PrintInvalidKeyword(const wchar_t* keyword) {$/;"	f	namespace:internal
PrintValidatorPointers	include/rapidjson/schema.h	/^inline void PrintValidatorPointers(unsigned depth, const char* s, const char* d) {$/;"	f	namespace:internal
PrintValidatorPointers	include/rapidjson/schema.h	/^inline void PrintValidatorPointers(unsigned depth, const wchar_t* s, const wchar_t* d) {$/;"	f	namespace:internal
Property	include/rapidjson/schema.h	/^        Property() : schema(), dependenciesSchema(), dependenciesValidatorIndex(), dependencies(), required(false) {}$/;"	f	struct:internal::Schema::Property
Property	include/rapidjson/schema.h	/^    struct Property {$/;"	s	class:internal::Schema
Push	include/rapidjson/internal/stack.h	/^    RAPIDJSON_FORCEINLINE T* Push(size_t count = 1) {$/;"	f	class:internal::Stack
Push	include/rapidjson/memorybuffer.h	/^    Ch* Push(size_t count) { return stack_.template Push<Ch>(count); }$/;"	f	struct:GenericMemoryBuffer
Push	include/rapidjson/reader.h	/^		  RAPIDJSON_FORCEINLINE void Push(char) {}$/;"	f	class:GenericReader::NumberStream
Push	include/rapidjson/reader.h	/^        RAPIDJSON_FORCEINLINE void Push(char c) {$/;"	f	class:GenericReader::NumberStream
Push	include/rapidjson/reader.h	/^        RAPIDJSON_FORCEINLINE void* Push(SizeType count) {$/;"	f	class:GenericReader::StackStream
Push	include/rapidjson/stream.h	/^    Ch* Push(size_t count) { Ch* begin = dst_; dst_ += count; return begin; }$/;"	f	struct:GenericInsituStringStream
Push	include/rapidjson/stringbuffer.h	/^    Ch* Push(size_t count) { return stack_.template Push<Ch>(count); }$/;"	f	class:GenericStringBuffer
PushBack	include/rapidjson/document.h	/^    GenericArray PushBack(StringRefType value, AllocatorType& allocator) const { value_.PushBack(value, allocator); return *this; }$/;"	f	class:GenericArray
PushBack	include/rapidjson/document.h	/^    GenericArray PushBack(ValueType& value, AllocatorType& allocator) const { value_.PushBack(value, allocator); return *this; }$/;"	f	class:GenericArray
PushBack	include/rapidjson/document.h	/^    GenericArray PushBack(ValueType&& value, AllocatorType& allocator) const { value_.PushBack(value, allocator); return *this; }$/;"	f	class:GenericArray
PushBack	include/rapidjson/document.h	/^    GenericValue& PushBack(GenericValue& value, Allocator& allocator) {$/;"	f	class:GenericValue
PushBack	include/rapidjson/document.h	/^    GenericValue& PushBack(GenericValue&& value, Allocator& allocator) {$/;"	f	class:GenericValue
PushBack	include/rapidjson/document.h	/^    GenericValue& PushBack(StringRefType value, Allocator& allocator) {$/;"	f	class:GenericValue
PushBack	include/rapidjson/document.h	/^    PushBack(T value, Allocator& allocator) {$/;"	f	class:GenericValue
PushBack	include/rapidjson/document.h	/^    template <typename T> RAPIDJSON_DISABLEIF_RETURN((internal::OrExpr<internal::IsPointer<T>, internal::IsGenericValue<T> >), (const GenericArray&)) PushBack(T value, AllocatorType& allocator) const { value_.PushBack(value, allocator); return *this; }$/;"	f	class:GenericArray
PushBack	include/rapidjson/internal/biginteger.h	/^    void PushBack(Type digit) {$/;"	f	class:internal::BigInteger
PushOperand	include/rapidjson/internal/regex.h	/^    void PushOperand(Stack<Allocator>& operandStack, unsigned codepoint) {$/;"	f	class:internal::GenericRegex
PushSchema	include/rapidjson/schema.h	/^    RAPIDJSON_FORCEINLINE void PushSchema(const SchemaType& schema) { new (schemaStack_.template Push<Context>()) Context(*this, &schema); }$/;"	f	class:GenericSchemaValidator
PushUnsafe	include/rapidjson/internal/stack.h	/^    RAPIDJSON_FORCEINLINE T* PushUnsafe(size_t count = 1) {$/;"	f	class:internal::Stack
PushUnsafe	include/rapidjson/stringbuffer.h	/^    Ch* PushUnsafe(size_t count) { return stack_.template PushUnsafe<Ch>(count); }$/;"	f	class:GenericStringBuffer
Put	include/rapidjson/encodedstream.h	/^    void Put(Ch c) { Encoding::Put(os_, c);  }$/;"	f	class:EncodedOutputStream
Put	include/rapidjson/encodedstream.h	/^    void Put(Ch c) { putFunc_(*os_, c); }$/;"	f	class:AutoUTFOutputStream
Put	include/rapidjson/encodedstream.h	/^    void Put(Ch) { RAPIDJSON_ASSERT(false); }$/;"	f	class:AutoUTFInputStream
Put	include/rapidjson/encodedstream.h	/^    void Put(Ch) { RAPIDJSON_ASSERT(false); }$/;"	f	class:EncodedInputStream
Put	include/rapidjson/encodedstream.h	/^    void Put(Ch) {}$/;"	f	class:EncodedInputStream
Put	include/rapidjson/encodings.h	/^    static void Put(OutputByteStream& os, Ch c) {$/;"	f	struct:ASCII
Put	include/rapidjson/encodings.h	/^    static void Put(OutputByteStream& os, Ch c) {$/;"	f	struct:UTF8
Put	include/rapidjson/encodings.h	/^    static void Put(OutputByteStream& os, CharType c) {$/;"	f	struct:UTF16BE
Put	include/rapidjson/encodings.h	/^    static void Put(OutputByteStream& os, CharType c) {$/;"	f	struct:UTF16LE
Put	include/rapidjson/encodings.h	/^    static void Put(OutputByteStream& os, CharType c) {$/;"	f	struct:UTF32BE
Put	include/rapidjson/encodings.h	/^    static void Put(OutputByteStream& os, CharType c) {$/;"	f	struct:UTF32LE
Put	include/rapidjson/filereadstream.h	/^    void Put(Ch) { RAPIDJSON_ASSERT(false); }$/;"	f	class:FileReadStream
Put	include/rapidjson/filewritestream.h	/^    void Put(char c) { $/;"	f	class:FileWriteStream
Put	include/rapidjson/istreamwrapper.h	/^    void Put(Ch) { RAPIDJSON_ASSERT(false); }$/;"	f	class:BasicIStreamWrapper
Put	include/rapidjson/memorybuffer.h	/^    void Put(Ch c) { *stack_.template Push<Ch>() = c; }$/;"	f	struct:GenericMemoryBuffer
Put	include/rapidjson/memorystream.h	/^    void Put(Ch) { RAPIDJSON_ASSERT(false); }$/;"	f	struct:MemoryStream
Put	include/rapidjson/ostreamwrapper.h	/^    void Put(Ch c) {$/;"	f	class:BasicOStreamWrapper
Put	include/rapidjson/pointer.h	/^        void Put(char c) { \/\/ UTF-8 must be byte$/;"	f	class:GenericPointer::PercentEncodeStream
Put	include/rapidjson/reader.h	/^        RAPIDJSON_FORCEINLINE void Put(Ch c) {$/;"	f	class:GenericReader::StackStream
Put	include/rapidjson/stream.h	/^    void Put(Ch c) { RAPIDJSON_ASSERT(dst_ != 0); *dst_++ = c; }$/;"	f	struct:GenericInsituStringStream
Put	include/rapidjson/stream.h	/^    void Put(Ch) { RAPIDJSON_ASSERT(false); }$/;"	f	struct:GenericStringStream
Put	include/rapidjson/stringbuffer.h	/^    void Put(Ch c) { *stack_.template Push<Ch>() = c; }$/;"	f	class:GenericStringBuffer
PutBOM	include/rapidjson/encodedstream.h	/^    void PutBOM() { $/;"	f	class:AutoUTFOutputStream
PutBOM	include/rapidjson/encodings.h	/^    static void PutBOM(OutputByteStream& os) {$/;"	f	struct:ASCII
PutBOM	include/rapidjson/encodings.h	/^    static void PutBOM(OutputByteStream& os) {$/;"	f	struct:UTF16BE
PutBOM	include/rapidjson/encodings.h	/^    static void PutBOM(OutputByteStream& os) {$/;"	f	struct:UTF16LE
PutBOM	include/rapidjson/encodings.h	/^    static void PutBOM(OutputByteStream& os) {$/;"	f	struct:UTF32BE
PutBOM	include/rapidjson/encodings.h	/^    static void PutBOM(OutputByteStream& os) {$/;"	f	struct:UTF32LE
PutBOM	include/rapidjson/encodings.h	/^    static void PutBOM(OutputByteStream& os) {$/;"	f	struct:UTF8
PutBegin	include/rapidjson/encodedstream.h	/^    Ch* PutBegin() { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:AutoUTFInputStream
PutBegin	include/rapidjson/encodedstream.h	/^    Ch* PutBegin() { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:AutoUTFOutputStream
PutBegin	include/rapidjson/encodedstream.h	/^    Ch* PutBegin() { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:EncodedInputStream
PutBegin	include/rapidjson/encodedstream.h	/^    Ch* PutBegin() { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:EncodedOutputStream
PutBegin	include/rapidjson/encodedstream.h	/^    Ch* PutBegin() { return 0; }$/;"	f	class:EncodedInputStream
PutBegin	include/rapidjson/filereadstream.h	/^    Ch* PutBegin() { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:FileReadStream
PutBegin	include/rapidjson/filewritestream.h	/^    char* PutBegin() { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:FileWriteStream
PutBegin	include/rapidjson/istreamwrapper.h	/^    Ch* PutBegin() { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:BasicIStreamWrapper
PutBegin	include/rapidjson/memorystream.h	/^    Ch* PutBegin() { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	struct:MemoryStream
PutBegin	include/rapidjson/ostreamwrapper.h	/^    char* PutBegin() { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:BasicOStreamWrapper
PutBegin	include/rapidjson/stream.h	/^    Ch* PutBegin() { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	struct:GenericStringStream
PutBegin	include/rapidjson/stream.h	/^    Ch* PutBegin() { return dst_ = src_; }$/;"	f	struct:GenericInsituStringStream
PutEnd	include/rapidjson/encodedstream.h	/^    size_t PutEnd(Ch*) { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:AutoUTFInputStream
PutEnd	include/rapidjson/encodedstream.h	/^    size_t PutEnd(Ch*) { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:AutoUTFOutputStream
PutEnd	include/rapidjson/encodedstream.h	/^    size_t PutEnd(Ch*) { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:EncodedInputStream
PutEnd	include/rapidjson/encodedstream.h	/^    size_t PutEnd(Ch*) { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:EncodedOutputStream
PutEnd	include/rapidjson/encodedstream.h	/^    size_t PutEnd(Ch*) { return 0; }$/;"	f	class:EncodedInputStream
PutEnd	include/rapidjson/filereadstream.h	/^    size_t PutEnd(Ch*) { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:FileReadStream
PutEnd	include/rapidjson/filewritestream.h	/^    size_t PutEnd(char*) { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:FileWriteStream
PutEnd	include/rapidjson/istreamwrapper.h	/^    size_t PutEnd(Ch*) { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:BasicIStreamWrapper
PutEnd	include/rapidjson/memorystream.h	/^    size_t PutEnd(Ch*) { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	struct:MemoryStream
PutEnd	include/rapidjson/ostreamwrapper.h	/^    size_t PutEnd(char*) { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:BasicOStreamWrapper
PutEnd	include/rapidjson/stream.h	/^    size_t PutEnd(Ch* begin) { return static_cast<size_t>(dst_ - begin); }$/;"	f	struct:GenericInsituStringStream
PutEnd	include/rapidjson/stream.h	/^    size_t PutEnd(Ch*) { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	struct:GenericStringStream
PutFunc	include/rapidjson/encodedstream.h	/^    typedef void (*PutFunc)(OutputByteStream&, Ch);$/;"	t	class:AutoUTFOutputStream
PutN	include/rapidjson/filewritestream.h	/^    void PutN(char c, size_t n) {$/;"	f	class:FileWriteStream
PutN	include/rapidjson/filewritestream.h	/^inline void PutN(FileWriteStream& stream, char c, size_t n) {$/;"	f
PutN	include/rapidjson/memorybuffer.h	/^inline void PutN(MemoryBuffer& memoryBuffer, char c, size_t n) {$/;"	f
PutN	include/rapidjson/stream.h	/^inline void PutN(Stream& stream, Ch c, size_t n) {$/;"	f
PutN	include/rapidjson/stringbuffer.h	/^inline void PutN(GenericStringBuffer<UTF8<> >& stream, char c, size_t n) {$/;"	f
PutReserve	include/rapidjson/stream.h	/^inline void PutReserve(Stream& stream, size_t count) {$/;"	f
PutReserve	include/rapidjson/stringbuffer.h	/^inline void PutReserve(GenericStringBuffer<Encoding, Allocator>& stream, size_t count) {$/;"	f
PutUnsafe	include/rapidjson/stream.h	/^inline void PutUnsafe(Stream& stream, typename Stream::Ch c) {$/;"	f
PutUnsafe	include/rapidjson/stringbuffer.h	/^    void PutUnsafe(Ch c) { *stack_.template PushUnsafe<Ch>() = c; }$/;"	f	class:GenericStringBuffer
PutUnsafe	include/rapidjson/stringbuffer.h	/^inline void PutUnsafe(GenericStringBuffer<Encoding, Allocator>& stream, typename Encoding::Ch c) {$/;"	f
RANGE_EXCEPTION	include/cuda-common/exception.h	85;"	d
RAPIDJSON_48BITPOINTER_OPTIMIZATION	include/rapidjson/rapidjson.h	310;"	d
RAPIDJSON_48BITPOINTER_OPTIMIZATION	include/rapidjson/rapidjson.h	312;"	d
RAPIDJSON_64BIT	include/rapidjson/rapidjson.h	259;"	d
RAPIDJSON_64BIT	include/rapidjson/rapidjson.h	261;"	d
RAPIDJSON_ALIGN	include/rapidjson/rapidjson.h	278;"	d
RAPIDJSON_ALIGN	include/rapidjson/rapidjson.h	280;"	d
RAPIDJSON_ALLOCATORS_H_	include/rapidjson/allocators.h	16;"	d
RAPIDJSON_ASSERT	include/rapidjson/rapidjson.h	411;"	d
RAPIDJSON_BIGENDIAN	include/rapidjson/rapidjson.h	199;"	d
RAPIDJSON_BIGINTEGER_H_	include/rapidjson/internal/biginteger.h	16;"	d
RAPIDJSON_DELETE	include/rapidjson/rapidjson.h	603;"	d
RAPIDJSON_DIAG_OFF	include/rapidjson/rapidjson.h	510;"	d
RAPIDJSON_DIAG_POP	include/rapidjson/rapidjson.h	516;"	d
RAPIDJSON_DIAG_PRAGMA	include/rapidjson/rapidjson.h	509;"	d
RAPIDJSON_DIAG_PUSH	include/rapidjson/rapidjson.h	515;"	d
RAPIDJSON_DISABLEIF	include/rapidjson/internal/meta.h	159;"	d
RAPIDJSON_DISABLEIF_RETURN	include/rapidjson/internal/meta.h	168;"	d
RAPIDJSON_DIYFP_H_	include/rapidjson/internal/diyfp.h	20;"	d
RAPIDJSON_DOCUMENT_H_	include/rapidjson/document.h	16;"	d
RAPIDJSON_DO_JOIN	include/rapidjson/rapidjson.h	55;"	d
RAPIDJSON_DO_JOIN2	include/rapidjson/rapidjson.h	56;"	d
RAPIDJSON_DO_STRINGIFY	include/rapidjson/rapidjson.h	51;"	d
RAPIDJSON_DTOA_	include/rapidjson/internal/dtoa.h	20;"	d
RAPIDJSON_ENABLEIF	include/rapidjson/internal/meta.h	155;"	d
RAPIDJSON_ENABLEIF_RETURN	include/rapidjson/internal/meta.h	163;"	d
RAPIDJSON_ENCODEDSTREAM_H_	include/rapidjson/encodedstream.h	16;"	d
RAPIDJSON_ENCODINGS_FUNC	include/rapidjson/encodedstream.h	127;"	d
RAPIDJSON_ENCODINGS_FUNC	include/rapidjson/encodedstream.h	287;"	d
RAPIDJSON_ENCODINGS_FUNC	include/rapidjson/encodings.h	620;"	d
RAPIDJSON_ENCODINGS_FUNC	include/rapidjson/encodings.h	650;"	d
RAPIDJSON_ENCODINGS_H_	include/rapidjson/encodings.h	16;"	d
RAPIDJSON_ENDIAN	include/rapidjson/rapidjson.h	218;"	d
RAPIDJSON_ENDIAN	include/rapidjson/rapidjson.h	220;"	d
RAPIDJSON_ENDIAN	include/rapidjson/rapidjson.h	228;"	d
RAPIDJSON_ENDIAN	include/rapidjson/rapidjson.h	230;"	d
RAPIDJSON_ENDIAN	include/rapidjson/rapidjson.h	236;"	d
RAPIDJSON_ENDIAN	include/rapidjson/rapidjson.h	238;"	d
RAPIDJSON_ENDIAN	include/rapidjson/rapidjson.h	241;"	d
RAPIDJSON_ENDIAN	include/rapidjson/rapidjson.h	243;"	d
RAPIDJSON_ENDIAN	include/rapidjson/rapidjson.h	245;"	d
RAPIDJSON_ENDIAN	include/rapidjson/rapidjson.h	247;"	d
RAPIDJSON_ERROR_CHARTYPE	include/rapidjson/error/error.h	39;"	d
RAPIDJSON_ERROR_EN_H_	include/rapidjson/error/en.h	16;"	d
RAPIDJSON_ERROR_ERROR_H_	include/rapidjson/error/error.h	16;"	d
RAPIDJSON_ERROR_STRING	include/rapidjson/error/error.h	52;"	d
RAPIDJSON_FILEREADSTREAM_H_	include/rapidjson/filereadstream.h	16;"	d
RAPIDJSON_FILEWRITESTREAM_H_	include/rapidjson/filewritestream.h	16;"	d
RAPIDJSON_FORCEINLINE	include/rapidjson/rapidjson.h	187;"	d
RAPIDJSON_FORCEINLINE	include/rapidjson/rapidjson.h	189;"	d
RAPIDJSON_FORCEINLINE	include/rapidjson/rapidjson.h	191;"	d
RAPIDJSON_FWD_H_	include/rapidjson/fwd.h	16;"	d
RAPIDJSON_GETPOINTER	include/rapidjson/rapidjson.h	321;"	d
RAPIDJSON_GETPOINTER	include/rapidjson/rapidjson.h	324;"	d
RAPIDJSON_GNUC	include/rapidjson/rapidjson.h	502;"	d
RAPIDJSON_HAS_CXX11_NOEXCEPT	include/rapidjson/rapidjson.h	562;"	d
RAPIDJSON_HAS_CXX11_RANGE_FOR	include/rapidjson/rapidjson.h	583;"	d
RAPIDJSON_HAS_CXX11_RVALUE_REFS	include/rapidjson/rapidjson.h	547;"	d
RAPIDJSON_HAS_CXX11_TYPETRAITS	include/rapidjson/rapidjson.h	578;"	d
RAPIDJSON_HAS_STDSTRING	include/rapidjson/rapidjson.h	132;"	d
RAPIDJSON_HAS_STDSTRING	include/rapidjson/rapidjson.h	134;"	d
RAPIDJSON_IEEE754_	include/rapidjson/internal/ieee754.h	16;"	d
RAPIDJSON_INTERNAL_META_H_	include/rapidjson/internal/meta.h	16;"	d
RAPIDJSON_INTERNAL_REGEX_H_	include/rapidjson/internal/regex.h	16;"	d
RAPIDJSON_INTERNAL_STACK_H_	include/rapidjson/internal/stack.h	16;"	d
RAPIDJSON_INTERNAL_STRFUNC_H_	include/rapidjson/internal/strfunc.h	16;"	d
RAPIDJSON_INTERNAL_SWAP_H_	include/rapidjson/internal/swap.h	16;"	d
RAPIDJSON_INVALID_KEYWORD_RETURN	include/rapidjson/schema.h	117;"	d
RAPIDJSON_INVALID_KEYWORD_VERBOSE	include/rapidjson/schema.h	112;"	d
RAPIDJSON_ISTREAMWRAPPER_H_	include/rapidjson/istreamwrapper.h	16;"	d
RAPIDJSON_ITOA_	include/rapidjson/internal/itoa.h	16;"	d
RAPIDJSON_JOIN	include/rapidjson/rapidjson.h	54;"	d
RAPIDJSON_LIKELY	include/rapidjson/rapidjson.h	466;"	d
RAPIDJSON_LITTLEENDIAN	include/rapidjson/rapidjson.h	198;"	d
RAPIDJSON_MAJOR_VERSION	include/rapidjson/rapidjson.h	75;"	d
RAPIDJSON_MEMORYBUFFER_H_	include/rapidjson/memorybuffer.h	16;"	d
RAPIDJSON_MEMORYSTREAM_H_	include/rapidjson/memorystream.h	16;"	d
RAPIDJSON_MINOR_VERSION	include/rapidjson/rapidjson.h	76;"	d
RAPIDJSON_MULTILINEMACRO_BEGIN	include/rapidjson/rapidjson.h	490;"	d
RAPIDJSON_MULTILINEMACRO_END	include/rapidjson/rapidjson.h	491;"	d
RAPIDJSON_NAMESPACE	include/rapidjson/rapidjson.h	118;"	d
RAPIDJSON_NAMESPACE_BEGIN	include/rapidjson/rapidjson.h	121;"	d
RAPIDJSON_NAMESPACE_END	include/rapidjson/rapidjson.h	124;"	d
RAPIDJSON_NEW	include/rapidjson/rapidjson.h	599;"	d
RAPIDJSON_NOEXCEPT	include/rapidjson/document.h	/^    GenericStringRef(const CharType (&str)[N]) RAPIDJSON_NOEXCEPT$/;"	m	struct:GenericStringRef
RAPIDJSON_NOEXCEPT	include/rapidjson/rapidjson.h	571;"	d
RAPIDJSON_NOTHING	include/rapidjson/reader.h	59;"	d
RAPIDJSON_NO_INT64DEFINE	include/rapidjson/rapidjson.h	177;"	d
RAPIDJSON_NO_SIZETYPEDEFINE	include/rapidjson/rapidjson.h	381;"	d
RAPIDJSON_OSTREAMWRAPPER_H_	include/rapidjson/ostreamwrapper.h	16;"	d
RAPIDJSON_PARSE_DEFAULT_FLAGS	include/rapidjson/reader.h	141;"	d
RAPIDJSON_PARSE_ERROR	include/rapidjson/reader.h	120;"	d
RAPIDJSON_PARSE_ERROR_EARLY_RETURN	include/rapidjson/reader.h	61;"	d
RAPIDJSON_PARSE_ERROR_EARLY_RETURN_VOID	include/rapidjson/reader.h	66;"	d
RAPIDJSON_PARSE_ERROR_NORETURN	include/rapidjson/reader.h	101;"	d
RAPIDJSON_PATCH_VERSION	include/rapidjson/rapidjson.h	77;"	d
RAPIDJSON_POINTER_H_	include/rapidjson/pointer.h	16;"	d
RAPIDJSON_POW10_	include/rapidjson/internal/pow10.h	16;"	d
RAPIDJSON_PRAGMA	include/rapidjson/rapidjson.h	508;"	d
RAPIDJSON_PRETTYWRITER_H_	include/rapidjson/prettywriter.h	16;"	d
RAPIDJSON_RAPIDJSON_H_	include/rapidjson/rapidjson.h	16;"	d
RAPIDJSON_READER_H_	include/rapidjson/reader.h	16;"	d
RAPIDJSON_REGEX_VERBOSE	include/rapidjson/internal/regex.h	43;"	d
RAPIDJSON_REMOVEFPTR_	include/rapidjson/internal/meta.h	151;"	d
RAPIDJSON_SCHEMA_HANDLE_BEGIN_	include/rapidjson/schema.h	1677;"	d
RAPIDJSON_SCHEMA_HANDLE_BEGIN_	include/rapidjson/schema.h	1751;"	d
RAPIDJSON_SCHEMA_HANDLE_BEGIN_VERBOSE_	include/rapidjson/schema.h	1667;"	d
RAPIDJSON_SCHEMA_HANDLE_BEGIN_VERBOSE_	include/rapidjson/schema.h	1674;"	d
RAPIDJSON_SCHEMA_HANDLE_BEGIN_VERBOSE_	include/rapidjson/schema.h	1750;"	d
RAPIDJSON_SCHEMA_HANDLE_END_	include/rapidjson/schema.h	1696;"	d
RAPIDJSON_SCHEMA_HANDLE_PARALLEL_	include/rapidjson/schema.h	1684;"	d
RAPIDJSON_SCHEMA_HANDLE_PARALLEL_	include/rapidjson/schema.h	1752;"	d
RAPIDJSON_SCHEMA_HANDLE_VALUE_	include/rapidjson/schema.h	1699;"	d
RAPIDJSON_SCHEMA_HANDLE_VALUE_	include/rapidjson/schema.h	1753;"	d
RAPIDJSON_SCHEMA_HAS_REGEX	include/rapidjson/schema.h	41;"	d
RAPIDJSON_SCHEMA_HAS_REGEX	include/rapidjson/schema.h	43;"	d
RAPIDJSON_SCHEMA_H_	include/rapidjson/schema.h	16;"	d
RAPIDJSON_SCHEMA_USE_INTERNALREGEX	include/rapidjson/schema.h	23;"	d
RAPIDJSON_SCHEMA_USE_INTERNALREGEX	include/rapidjson/schema.h	25;"	d
RAPIDJSON_SCHEMA_USE_STDREGEX	include/rapidjson/schema.h	29;"	d
RAPIDJSON_SCHEMA_USE_STDREGEX	include/rapidjson/schema.h	31;"	d
RAPIDJSON_SCHEMA_VERBOSE	include/rapidjson/schema.h	47;"	d
RAPIDJSON_SETPOINTER	include/rapidjson/rapidjson.h	320;"	d
RAPIDJSON_SETPOINTER	include/rapidjson/rapidjson.h	323;"	d
RAPIDJSON_SIMD	include/rapidjson/rapidjson.h	358;"	d
RAPIDJSON_STATIC_ASSERT	include/rapidjson/rapidjson.h	420;"	d
RAPIDJSON_STATIC_ASSERT	include/rapidjson/rapidjson.h	450;"	d
RAPIDJSON_STATIC_ASSERT_UNUSED_ATTRIBUTE	include/rapidjson/rapidjson.h	437;"	d
RAPIDJSON_STREAM_H_	include/rapidjson/stream.h	18;"	d
RAPIDJSON_STRINGBUFFER_H_	include/rapidjson/stringbuffer.h	16;"	d
RAPIDJSON_STRINGIFY	include/rapidjson/rapidjson.h	50;"	d
RAPIDJSON_STRING_	include/rapidjson/schema.h	882;"	d
RAPIDJSON_STRING_	include/rapidjson/schema.h	923;"	d
RAPIDJSON_STRTOD_	include/rapidjson/internal/strtod.h	16;"	d
RAPIDJSON_UINT64_C2	include/rapidjson/rapidjson.h	294;"	d
RAPIDJSON_UNLIKELY	include/rapidjson/rapidjson.h	479;"	d
RAPIDJSON_VERSION_CODE	include/rapidjson/rapidjson.h	495;"	d
RAPIDJSON_VERSION_STRING	include/rapidjson/rapidjson.h	78;"	d
RAPIDJSON_WRITER_H_	include/rapidjson/writer.h	16;"	d
RAPIDJSON_WRITE_DEFAULT_FLAGS	include/rapidjson/writer.h	63;"	d
RED	Utilities/logging.h	/^    BLACK, RED, GREEN,$/;"	e	enum:COLOR
RESULTS_DIR	include/dosecalc_defs.h	12;"	d
REV2XYZdose	dosecalc-beam/nvbbRayConvolve_device.cu	/^REV2XYZdose($/;"	f
REV_DATA	DoseCalcIO/io_data_structs.h	/^struct REV_DATA {$/;"	s
REV_PAD	include/dosecalc_defs.h	19;"	d
RM	anonymize_dicom/Makefile	/^RM=rm -f$/;"	m
RM	build/CudaUtilities/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/DoseCalcAlgo/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/DoseCalcIO/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/RTClasses/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/Utilities/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/dosecalc-beam/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/dosecalc-beamlet/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/dosecalc-preprocess/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	build/unit_tests/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
ROIMaskList	DoseCalcIO/roi.h	/^        ROIMaskList() {}$/;"	f	class:ROIMaskList
ROIMaskList	DoseCalcIO/roi.h	/^class ROIMaskList {$/;"	c
ROI_DATA	RTClasses/rtstruct.h	/^    class ROI_DATA$/;"	c	class:RTStruct
RTIMAGE	RTClasses/rtimages.h	/^    enum class SOPTYPE { RTIMAGE, CT, MR };$/;"	m	class:RTImage::SOPTYPE
RTIMAGE_SOP_CLASS_UID	RTClasses/rtimages.h	11;"	d
RTImage	RTClasses/rtimages.h	/^    RTImage() {}$/;"	f	class:RTImage
RTImage	RTClasses/rtimages.h	/^    RTImage(const std::string& dname, bool verbose=false) : dicom_dir{dname} {$/;"	f	class:RTImage
RTImage	RTClasses/rtimages.h	/^class RTImage$/;"	c
RTSTRUCT_SOP_CLASS_UID	RTClasses/rtstruct.h	8;"	d
RTStruct	RTClasses/rtstruct.cpp	/^RTStruct::RTStruct()$/;"	f	class:RTStruct
RTStruct	RTClasses/rtstruct.h	/^class RTStruct$/;"	c
RUNTIME_EXCEPTION	include/cuda-common/exception.h	77;"	d
Range	include/rapidjson/internal/regex.h	/^    struct Range {$/;"	s	class:internal::GenericRegex
Range	include/rapidjson/internal/regex.h	/^    typedef typename RegexType::Range Range;$/;"	t	class:internal::GenericRegexSearch
RawNumber	include/rapidjson/document.h	/^    bool RawNumber(const Ch* str, SizeType length, bool copy) { $/;"	f	class:GenericDocument
RawNumber	include/rapidjson/prettywriter.h	/^    bool RawNumber(const Ch* str, SizeType length, bool copy = false) {$/;"	f	class:PrettyWriter
RawNumber	include/rapidjson/reader.h	/^    bool RawNumber(const Ch* str, SizeType len, bool copy) { return static_cast<Override&>(*this).String(str, len, copy); }$/;"	f	struct:BaseReaderHandler
RawNumber	include/rapidjson/schema.h	/^    bool RawNumber(const Ch* str, SizeType len, bool) {$/;"	f	class:internal::Hasher
RawNumber	include/rapidjson/schema.h	/^    bool RawNumber(const Ch* str, SizeType length, bool copy)$/;"	f	class:GenericSchemaValidator
RawNumber	include/rapidjson/writer.h	/^    bool RawNumber(const Ch* str, SizeType length, bool copy = false) {$/;"	f	class:Writer
RawValue	include/rapidjson/prettywriter.h	/^    bool RawValue(const Ch* json, size_t length, Type type) {$/;"	f	class:PrettyWriter
RawValue	include/rapidjson/writer.h	/^    bool RawValue(const Ch* json, size_t length, Type type) {$/;"	f	class:Writer
Read	include/rapidjson/filereadstream.h	/^    void Read() {$/;"	f	class:FileReadStream
Reader	include/rapidjson/fwd.h	/^typedef GenericReader<UTF8<char>, UTF8<char>, CrtAllocator> Reader;$/;"	t
Reader	include/rapidjson/reader.h	/^typedef GenericReader<UTF8<>, UTF8<> > Reader;$/;"	t
Realloc	include/rapidjson/allocators.h	/^    void* Realloc(void* originalPtr, size_t originalSize, size_t newSize) {$/;"	f	class:CrtAllocator
Realloc	include/rapidjson/allocators.h	/^    void* Realloc(void* originalPtr, size_t originalSize, size_t newSize) {$/;"	f	class:MemoryPoolAllocator
Reference	include/rapidjson/document.h	/^    typedef typename BaseType::reference       Reference;$/;"	t	class:GenericMemberIterator
Regex	include/rapidjson/internal/regex.h	/^typedef GenericRegex<UTF8<> > Regex;$/;"	t	namespace:internal
RegexSearch	include/rapidjson/internal/regex.h	/^typedef GenericRegexSearch<Regex> RegexSearch;$/;"	t	namespace:internal
RegexType	include/rapidjson/schema.h	/^        typedef char RegexType;$/;"	t	class:internal::Schema
RegexType	include/rapidjson/schema.h	/^        typedef internal::GenericRegex<EncodingType> RegexType;$/;"	t	class:internal::Schema
RegexType	include/rapidjson/schema.h	/^        typedef std::basic_regex<Ch> RegexType;$/;"	t	class:internal::Schema
RemoveAllMembers	include/rapidjson/document.h	/^    void RemoveAllMembers() { value_.RemoveAllMembers(); }$/;"	f	class:GenericObject
RemoveAllMembers	include/rapidjson/document.h	/^    void RemoveAllMembers() {$/;"	f	class:GenericValue
RemoveConst	include/rapidjson/internal/meta.h	/^template <typename T> struct RemoveConst { typedef T Type; };$/;"	s	namespace:internal
RemoveConst	include/rapidjson/internal/meta.h	/^template <typename T> struct RemoveConst<const T> { typedef T Type; };$/;"	s	namespace:internal
RemoveMember	include/rapidjson/document.h	/^    MemberIterator RemoveMember(MemberIterator m) const { return value_.RemoveMember(m); }$/;"	f	class:GenericObject
RemoveMember	include/rapidjson/document.h	/^    MemberIterator RemoveMember(MemberIterator m) {$/;"	f	class:GenericValue
RemoveMember	include/rapidjson/document.h	/^    bool RemoveMember(const Ch* name) const { return value_.RemoveMember(name); }$/;"	f	class:GenericObject
RemoveMember	include/rapidjson/document.h	/^    bool RemoveMember(const Ch* name) {$/;"	f	class:GenericValue
RemoveMember	include/rapidjson/document.h	/^    bool RemoveMember(const GenericValue<Encoding, SourceAllocator>& name) {$/;"	f	class:GenericValue
RemoveMember	include/rapidjson/document.h	/^    bool RemoveMember(const std::basic_string<Ch>& name) const { return value_.RemoveMember(name); }$/;"	f	class:GenericObject
RemoveMember	include/rapidjson/document.h	/^    bool RemoveMember(const std::basic_string<Ch>& name) { return RemoveMember(GenericValue(StringRef(name))); }$/;"	f	class:GenericValue
RemoveMember	include/rapidjson/document.h	/^    template <typename SourceAllocator> bool RemoveMember(const GenericValue<EncodingType, SourceAllocator>& name) const { return value_.RemoveMember(name); }$/;"	f	class:GenericObject
RemoveSfinaeTag	include/rapidjson/internal/meta.h	/^template <typename T> struct RemoveSfinaeTag<SfinaeTag&(*)(T)> { typedef T Type; };$/;"	s	namespace:internal
Reserve	include/rapidjson/document.h	/^    GenericArray Reserve(SizeType newCapacity, AllocatorType &allocator) const { value_.Reserve(newCapacity, allocator); return *this; }$/;"	f	class:GenericArray
Reserve	include/rapidjson/document.h	/^    GenericValue& Reserve(SizeType newCapacity, Allocator &allocator) {$/;"	f	class:GenericValue
Reserve	include/rapidjson/internal/stack.h	/^    RAPIDJSON_FORCEINLINE void Reserve(size_t count = 1) {$/;"	f	class:internal::Stack
Reserve	include/rapidjson/stringbuffer.h	/^    void Reserve(size_t count) { stack_.template Reserve<Ch>(count); }$/;"	f	class:GenericStringBuffer
Reset	include/rapidjson/schema.h	/^    void Reset() {$/;"	f	class:GenericSchemaValidator
Reset	include/rapidjson/writer.h	/^    void Reset(OutputStream& os) {$/;"	f	class:Writer
Resize	include/rapidjson/internal/stack.h	/^    void Resize(size_t newCapacity) {$/;"	f	class:internal::Stack
RightBracketToken	include/rapidjson/reader.h	/^        RightBracketToken,$/;"	e	enum:GenericReader::Token
RightCurlyBracketToken	include/rapidjson/reader.h	/^        RightCurlyBracketToken,$/;"	e	enum:GenericReader::Token
RotateAroundAxisAtOriginRHS	extern/python/fmaps.py	/^    def RotateAroundAxisAtOriginRHS(p, r, t):$/;"	m	class:Beam
RowConvolve	dosecalc-beam/nvbbRayConvolve_device.cu	/^RowConvolve($/;"	f
SCNX16	include/rapidjson/msinttypes/inttypes.h	221;"	d
SCNX32	include/rapidjson/msinttypes/inttypes.h	234;"	d
SCNX64	include/rapidjson/msinttypes/inttypes.h	247;"	d
SCNX8	include/rapidjson/msinttypes/inttypes.h	208;"	d
SCNXFAST16	include/rapidjson/msinttypes/inttypes.h	229;"	d
SCNXFAST32	include/rapidjson/msinttypes/inttypes.h	242;"	d
SCNXFAST64	include/rapidjson/msinttypes/inttypes.h	255;"	d
SCNXFAST8	include/rapidjson/msinttypes/inttypes.h	216;"	d
SCNXLEAST16	include/rapidjson/msinttypes/inttypes.h	225;"	d
SCNXLEAST32	include/rapidjson/msinttypes/inttypes.h	238;"	d
SCNXLEAST64	include/rapidjson/msinttypes/inttypes.h	251;"	d
SCNXLEAST8	include/rapidjson/msinttypes/inttypes.h	212;"	d
SCNXMAX	include/rapidjson/msinttypes/inttypes.h	260;"	d
SCNXPTR	include/rapidjson/msinttypes/inttypes.h	266;"	d
SCNXPTR	include/rapidjson/msinttypes/inttypes.h	271;"	d
SCNd16	include/rapidjson/msinttypes/inttypes.h	172;"	d
SCNd32	include/rapidjson/msinttypes/inttypes.h	179;"	d
SCNd64	include/rapidjson/msinttypes/inttypes.h	186;"	d
SCNd8	include/rapidjson/msinttypes/inttypes.h	165;"	d
SCNdFAST16	include/rapidjson/msinttypes/inttypes.h	176;"	d
SCNdFAST32	include/rapidjson/msinttypes/inttypes.h	183;"	d
SCNdFAST64	include/rapidjson/msinttypes/inttypes.h	190;"	d
SCNdFAST8	include/rapidjson/msinttypes/inttypes.h	169;"	d
SCNdLEAST16	include/rapidjson/msinttypes/inttypes.h	174;"	d
SCNdLEAST32	include/rapidjson/msinttypes/inttypes.h	181;"	d
SCNdLEAST64	include/rapidjson/msinttypes/inttypes.h	188;"	d
SCNdLEAST8	include/rapidjson/msinttypes/inttypes.h	167;"	d
SCNdMAX	include/rapidjson/msinttypes/inttypes.h	193;"	d
SCNdPTR	include/rapidjson/msinttypes/inttypes.h	197;"	d
SCNdPTR	include/rapidjson/msinttypes/inttypes.h	200;"	d
SCNi16	include/rapidjson/msinttypes/inttypes.h	173;"	d
SCNi32	include/rapidjson/msinttypes/inttypes.h	180;"	d
SCNi64	include/rapidjson/msinttypes/inttypes.h	187;"	d
SCNi8	include/rapidjson/msinttypes/inttypes.h	166;"	d
SCNiFAST16	include/rapidjson/msinttypes/inttypes.h	177;"	d
SCNiFAST32	include/rapidjson/msinttypes/inttypes.h	184;"	d
SCNiFAST64	include/rapidjson/msinttypes/inttypes.h	191;"	d
SCNiFAST8	include/rapidjson/msinttypes/inttypes.h	170;"	d
SCNiLEAST16	include/rapidjson/msinttypes/inttypes.h	175;"	d
SCNiLEAST32	include/rapidjson/msinttypes/inttypes.h	182;"	d
SCNiLEAST64	include/rapidjson/msinttypes/inttypes.h	189;"	d
SCNiLEAST8	include/rapidjson/msinttypes/inttypes.h	168;"	d
SCNiMAX	include/rapidjson/msinttypes/inttypes.h	194;"	d
SCNiPTR	include/rapidjson/msinttypes/inttypes.h	198;"	d
SCNiPTR	include/rapidjson/msinttypes/inttypes.h	201;"	d
SCNo16	include/rapidjson/msinttypes/inttypes.h	218;"	d
SCNo32	include/rapidjson/msinttypes/inttypes.h	231;"	d
SCNo64	include/rapidjson/msinttypes/inttypes.h	244;"	d
SCNo8	include/rapidjson/msinttypes/inttypes.h	205;"	d
SCNoFAST16	include/rapidjson/msinttypes/inttypes.h	226;"	d
SCNoFAST32	include/rapidjson/msinttypes/inttypes.h	239;"	d
SCNoFAST64	include/rapidjson/msinttypes/inttypes.h	252;"	d
SCNoFAST8	include/rapidjson/msinttypes/inttypes.h	213;"	d
SCNoLEAST16	include/rapidjson/msinttypes/inttypes.h	222;"	d
SCNoLEAST32	include/rapidjson/msinttypes/inttypes.h	235;"	d
SCNoLEAST64	include/rapidjson/msinttypes/inttypes.h	248;"	d
SCNoLEAST8	include/rapidjson/msinttypes/inttypes.h	209;"	d
SCNoMAX	include/rapidjson/msinttypes/inttypes.h	257;"	d
SCNoPTR	include/rapidjson/msinttypes/inttypes.h	263;"	d
SCNoPTR	include/rapidjson/msinttypes/inttypes.h	268;"	d
SCNu16	include/rapidjson/msinttypes/inttypes.h	219;"	d
SCNu32	include/rapidjson/msinttypes/inttypes.h	232;"	d
SCNu64	include/rapidjson/msinttypes/inttypes.h	245;"	d
SCNu8	include/rapidjson/msinttypes/inttypes.h	206;"	d
SCNuFAST16	include/rapidjson/msinttypes/inttypes.h	227;"	d
SCNuFAST32	include/rapidjson/msinttypes/inttypes.h	240;"	d
SCNuFAST64	include/rapidjson/msinttypes/inttypes.h	253;"	d
SCNuFAST8	include/rapidjson/msinttypes/inttypes.h	214;"	d
SCNuLEAST16	include/rapidjson/msinttypes/inttypes.h	223;"	d
SCNuLEAST32	include/rapidjson/msinttypes/inttypes.h	236;"	d
SCNuLEAST64	include/rapidjson/msinttypes/inttypes.h	249;"	d
SCNuLEAST8	include/rapidjson/msinttypes/inttypes.h	210;"	d
SCNuMAX	include/rapidjson/msinttypes/inttypes.h	258;"	d
SCNuPTR	include/rapidjson/msinttypes/inttypes.h	264;"	d
SCNuPTR	include/rapidjson/msinttypes/inttypes.h	269;"	d
SCNx16	include/rapidjson/msinttypes/inttypes.h	220;"	d
SCNx32	include/rapidjson/msinttypes/inttypes.h	233;"	d
SCNx64	include/rapidjson/msinttypes/inttypes.h	246;"	d
SCNx8	include/rapidjson/msinttypes/inttypes.h	207;"	d
SCNxFAST16	include/rapidjson/msinttypes/inttypes.h	228;"	d
SCNxFAST32	include/rapidjson/msinttypes/inttypes.h	241;"	d
SCNxFAST64	include/rapidjson/msinttypes/inttypes.h	254;"	d
SCNxFAST8	include/rapidjson/msinttypes/inttypes.h	215;"	d
SCNxLEAST16	include/rapidjson/msinttypes/inttypes.h	224;"	d
SCNxLEAST32	include/rapidjson/msinttypes/inttypes.h	237;"	d
SCNxLEAST64	include/rapidjson/msinttypes/inttypes.h	250;"	d
SCNxLEAST8	include/rapidjson/msinttypes/inttypes.h	211;"	d
SCNxMAX	include/rapidjson/msinttypes/inttypes.h	259;"	d
SCNxPTR	include/rapidjson/msinttypes/inttypes.h	265;"	d
SCNxPTR	include/rapidjson/msinttypes/inttypes.h	270;"	d
SET_INACTIVE_THREAD	dosecalc-beamlet/nvbbRayConvolve_device.cu	10;"	d	file:
SHELL	build/CudaUtilities/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/DoseCalcAlgo/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/DoseCalcIO/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/RTClasses/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/Utilities/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/dosecalc-beam/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/dosecalc-beamlet/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/dosecalc-preprocess/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/unit_tests/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHM_DATA	include/server/brain_defs.h	/^struct SHM_DATA {$/;"	s
SHM_DENS	dosecalc-beamlet/nvbbRayConvolve_device.cu	251;"	d	file:
SHM_TERM	dosecalc-beamlet/nvbbRayConvolve_device.cu	252;"	d	file:
SID	include/client/dummy_defs.h	/^    int SID;               \/\/ ID of the server node \/\/ CHILD$/;"	m	class:MGCS_PARAMS
SIG_ATOMIC_MAX	include/rapidjson/msinttypes/stdint.h	246;"	d
SIG_ATOMIC_MIN	include/rapidjson/msinttypes/stdint.h	245;"	d
SIMULATE_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	209;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	21;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	231;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	24;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	12;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	203;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	21;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	225;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	24;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	216;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	238;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	40;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	44;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	46;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	21;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	210;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	232;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	40;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	44;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	46;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	217;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	239;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	41;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	49;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	22;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	211;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	233;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	41;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	49;"	d	file:
SIMULATE_VERSION_PATCH	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	52;"	d	file:
SIMULATE_VERSION_PATCH	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	52;"	d	file:
SIZE_MAX	include/rapidjson/msinttypes/stdint.h	250;"	d
SIZE_MAX	include/rapidjson/msinttypes/stdint.h	252;"	d
SLICE_DATA	RTClasses/rtimages.h	/^        SLICE_DATA() {}$/;"	f	class:RTImage::SLICE_DATA
SLICE_DATA	RTClasses/rtimages.h	/^        SLICE_DATA(const SLICE_DATA& copyfrom) {$/;"	f	class:RTImage::SLICE_DATA
SLICE_DATA	RTClasses/rtimages.h	/^    class SLICE_DATA {$/;"	c	class:RTImage
SOPTYPE	RTClasses/rtimages.h	/^    enum class SOPTYPE { RTIMAGE, CT, MR };$/;"	c	class:RTImage
SPARSIFY_STRATEGY	dosecalc-beamlet/sparsify_manager.h	/^enum class SPARSIFY_STRATEGY {$/;"	c
SPECfile	include/client/dummy_defs.h	/^    char SPECfile[32];$/;"	m	class:MGCS_PARAMS
SPRINTF	include/cuda-common/helper_string.h	45;"	d
SPRINTF	include/cuda-common/helper_string.h	71;"	d
SRCS	anonymize_dicom/Makefile	/^SRCS=anonymize_dicom.cpp ..\/RTClasses\/rtimages.cpp$/;"	m
SRData	dosecalc-beamlet/sparsify_manager.h	/^            SRData() {};$/;"	f	struct:SRWorker::SRData
SRData	dosecalc-beamlet/sparsify_manager.h	/^            SRData(SRData&& other) {$/;"	f	struct:SRWorker::SRData
SRData	dosecalc-beamlet/sparsify_manager.h	/^        struct SRData {$/;"	s	class:SRWorker
SRWorker	dosecalc-beamlet/sparsify_manager.h	/^        SRWorker(SRWorker& other) : parent{other.parent} { _assign_workerid(); };  \/* Copy const. *\/$/;"	f	class:SRWorker
SRWorker	dosecalc-beamlet/sparsify_manager.h	/^        SRWorker(SRWorker&& other) : parent{other.parent} { _assign_workerid(); }; \/* Move const. *\/$/;"	f	class:SRWorker
SRWorker	dosecalc-beamlet/sparsify_manager.h	/^        SRWorker(SparsifyManager& parent) : parent{parent} { _assign_workerid(); }     \/* default const. *\/$/;"	f	class:SRWorker
SRWorker	dosecalc-beamlet/sparsify_manager.h	/^class SRWorker : public Thread {$/;"	c
SSCANF	include/cuda-common/helper_string.h	42;"	d
SSCANF	include/cuda-common/helper_string.h	68;"	d
STATIC_ASSERTION_FAILURE	include/rapidjson/rapidjson.h	/^template <> struct STATIC_ASSERTION_FAILURE<true> { enum { value = 1 }; };$/;"	s
STR	include/version.h	8;"	d
STRCASECMP	include/cuda-common/helper_string.h	26;"	d
STRCASECMP	include/cuda-common/helper_string.h	52;"	d
STRCPY	include/cuda-common/helper_string.h	32;"	d
STRCPY	include/cuda-common/helper_string.h	58;"	d
STRINGIFY	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	335;"	d	file:
STRINGIFY	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	46;"	d	file:
STRINGIFY	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	320;"	d	file:
STRINGIFY_HELPER	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	334;"	d	file:
STRINGIFY_HELPER	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	45;"	d	file:
STRINGIFY_HELPER	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	319;"	d	file:
STRING_HELPER_H	include/cuda-common/helper_string.h	14;"	d
STRNCASECMP	include/cuda-common/helper_string.h	29;"	d
STRNCASECMP	include/cuda-common/helper_string.h	55;"	d
STR_HELPER	include/version.h	7;"	d
SUBTERMA	dosecalc-beamlet/nvbbRayConvolve_device.cu	8;"	d	file:
SUFFIXES	build/CudaUtilities/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/DoseCalcAlgo/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/DoseCalcIO/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/RTClasses/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/Utilities/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/dosecalc-beam/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/dosecalc-beamlet/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/dosecalc-preprocess/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	build/unit_tests/Makefile	/^SUFFIXES =$/;"	m
SValue	include/rapidjson/schema.h	/^    typedef GenericValue<EncodingType, AllocatorType> SValue;$/;"	t	class:internal::Schema
ScanCopyUnescapedString	include/rapidjson/reader.h	/^    static RAPIDJSON_FORCEINLINE void ScanCopyUnescapedString(InputStream&, OutputStream&) {$/;"	f	class:GenericReader
ScanCopyUnescapedString	include/rapidjson/reader.h	/^    static RAPIDJSON_FORCEINLINE void ScanCopyUnescapedString(InsituStringStream& is, InsituStringStream& os) {$/;"	f	class:GenericReader
ScanCopyUnescapedString	include/rapidjson/reader.h	/^    static RAPIDJSON_FORCEINLINE void ScanCopyUnescapedString(StringStream& is, StackStream<char>& os) {$/;"	f	class:GenericReader
ScanWriteUnescapedString	include/rapidjson/writer.h	/^    bool ScanWriteUnescapedString(GenericStringStream<SourceEncoding>& is, size_t length) {$/;"	f	class:Writer
ScanWriteUnescapedString	include/rapidjson/writer.h	/^inline bool Writer<StringBuffer>::ScanWriteUnescapedString(StringStream& is, size_t length) {$/;"	f	class:Writer
Schema	include/rapidjson/schema.h	/^    Schema(SchemaDocumentType* schemaDocument, const PointerType& p, const ValueType& value, const ValueType& document, AllocatorType* allocator) :$/;"	f	class:internal::Schema
Schema	include/rapidjson/schema.h	/^class Schema {$/;"	c	namespace:internal
SchemaArray	include/rapidjson/schema.h	/^        SchemaArray() : schemas(), count() {}$/;"	f	struct:internal::Schema::SchemaArray
SchemaArray	include/rapidjson/schema.h	/^    struct SchemaArray {$/;"	s	class:internal::Schema
SchemaDocument	include/rapidjson/fwd.h	/^typedef GenericSchemaDocument<Value, CrtAllocator> SchemaDocument;$/;"	t
SchemaDocument	include/rapidjson/schema.h	/^typedef GenericSchemaDocument<Value> SchemaDocument;$/;"	t
SchemaEntry	include/rapidjson/schema.h	/^        SchemaEntry(const PointerType& p, SchemaType* s, bool o, Allocator* allocator) : pointer(p, allocator), schema(s), owned(o) {}$/;"	f	struct:GenericSchemaDocument::SchemaEntry
SchemaEntry	include/rapidjson/schema.h	/^    struct SchemaEntry {$/;"	s	class:GenericSchemaDocument
SchemaRefEntry	include/rapidjson/schema.h	/^        SchemaRefEntry(const PointerType& s, const PointerType& t, const SchemaType** outSchema, Allocator *allocator) : source(s, allocator), target(t, allocator), schema(outSchema) {}$/;"	f	struct:GenericSchemaDocument::SchemaRefEntry
SchemaRefEntry	include/rapidjson/schema.h	/^    struct SchemaRefEntry {$/;"	s	class:GenericSchemaDocument
SchemaType	include/rapidjson/schema.h	/^    typedef Schema<SchemaDocumentType> SchemaType;$/;"	t	class:internal::Schema
SchemaType	include/rapidjson/schema.h	/^    typedef Schema<SchemaDocumentType> SchemaType;$/;"	t	struct:internal::SchemaValidationContext
SchemaType	include/rapidjson/schema.h	/^    typedef internal::Schema<GenericSchemaDocument> SchemaType;$/;"	t	class:GenericSchemaDocument
SchemaType	include/rapidjson/schema.h	/^    typedef typename SchemaDocumentType::SchemaType SchemaType;$/;"	t	class:GenericSchemaValidator
SchemaValidatingReader	include/rapidjson/schema.h	/^    SchemaValidatingReader(InputStream& is, const SchemaDocumentType& sd) : is_(is), sd_(sd), invalidSchemaKeyword_(), isValid_(true) {}$/;"	f	class:SchemaValidatingReader
SchemaValidatingReader	include/rapidjson/schema.h	/^class SchemaValidatingReader {$/;"	c
SchemaValidationContext	include/rapidjson/schema.h	/^    SchemaValidationContext(SchemaValidatorFactoryType& f, const SchemaType* s) :$/;"	f	struct:internal::SchemaValidationContext
SchemaValidationContext	include/rapidjson/schema.h	/^struct SchemaValidationContext {$/;"	s	namespace:internal
SchemaValidator	include/rapidjson/fwd.h	/^typedef GenericSchemaValidator<SchemaDocument, BaseReaderHandler<UTF8<char>, void>, CrtAllocator> SchemaValidator;$/;"	t
SchemaValidator	include/rapidjson/schema.h	/^typedef GenericSchemaValidator<SchemaDocument> SchemaValidator;$/;"	t
SchemaValidatorFactoryType	include/rapidjson/schema.h	/^    typedef ISchemaStateFactory<SchemaType> SchemaValidatorFactoryType;$/;"	t	struct:internal::SchemaValidationContext
SchemaValueType	include/rapidjson/schema.h	/^    enum SchemaValueType {$/;"	g	class:internal::Schema
Search	include/rapidjson/internal/regex.h	/^    bool Search(InputStream& is) {$/;"	f	class:internal::GenericRegexSearch
Search	include/rapidjson/internal/regex.h	/^    bool Search(const Ch* s) {$/;"	f	class:internal::GenericRegexSearch
SearchWithAnchoring	include/rapidjson/internal/regex.h	/^    bool SearchWithAnchoring(InputStream& is, bool anchorBegin, bool anchorEnd) {$/;"	f	class:internal::GenericRegexSearch
SelectIf	include/rapidjson/internal/meta.h	/^template <typename C, typename T1, typename T2> struct SelectIf : SelectIfCond<C::Value, T1, T2> {};$/;"	s	namespace:internal
SelectIfCond	include/rapidjson/internal/meta.h	/^template <bool C, typename T1, typename T2> struct SelectIfCond : SelectIfImpl<C>::template Apply<T1,T2> {};$/;"	s	namespace:internal
SelectIfImpl	include/rapidjson/internal/meta.h	/^template <> struct SelectIfImpl<false> { template <typename T1, typename T2> struct Apply { typedef T2 Type; }; };$/;"	s	namespace:internal
SelectIfImpl	include/rapidjson/internal/meta.h	/^template <bool C> struct SelectIfImpl { template <typename T1, typename T2> struct Apply { typedef T1 Type; }; };$/;"	s	namespace:internal
Set	include/rapidjson/document.h	/^    ValueType& Set(const T& data) { return internal::TypeHelper<ValueType, T>::Set(*this, data); }$/;"	f	class:GenericValue
Set	include/rapidjson/document.h	/^    ValueType& Set(const T& data, AllocatorType& allocator) { return internal::TypeHelper<ValueType, T>::Set(*this, data, allocator); }$/;"	f	class:GenericValue
Set	include/rapidjson/document.h	/^    static ValueType& Set(ValueType& v, ArrayType data) { return v = data; }$/;"	f	struct:internal::TypeHelper
Set	include/rapidjson/document.h	/^    static ValueType& Set(ValueType& v, ArrayType data, typename ValueType::AllocatorType&) { return v = data; }$/;"	f	struct:internal::TypeHelper
Set	include/rapidjson/document.h	/^    static ValueType& Set(ValueType& v, ObjectType data) { return v = data; }$/;"	f	struct:internal::TypeHelper
Set	include/rapidjson/document.h	/^    static ValueType& Set(ValueType& v, ObjectType data, typename ValueType::AllocatorType&) { return v = data; }$/;"	f	struct:internal::TypeHelper
Set	include/rapidjson/document.h	/^    static ValueType& Set(ValueType& v, bool data) { return v.SetBool(data); }$/;"	f	struct:internal::TypeHelper
Set	include/rapidjson/document.h	/^    static ValueType& Set(ValueType& v, bool data, typename ValueType::AllocatorType&) { return v.SetBool(data); }$/;"	f	struct:internal::TypeHelper
Set	include/rapidjson/document.h	/^    static ValueType& Set(ValueType& v, const StringType data) { return v.SetString(typename ValueType::StringRefType(data)); }$/;"	f	struct:internal::TypeHelper
Set	include/rapidjson/document.h	/^    static ValueType& Set(ValueType& v, const StringType data, typename ValueType::AllocatorType& a) { return v.SetString(data, a); }$/;"	f	struct:internal::TypeHelper
Set	include/rapidjson/document.h	/^    static ValueType& Set(ValueType& v, const StringType& data, typename ValueType::AllocatorType& a) { return v.SetString(data, a); }$/;"	f	struct:internal::TypeHelper
Set	include/rapidjson/document.h	/^    static ValueType& Set(ValueType& v, double data) { return v.SetDouble(data); }$/;"	f	struct:internal::TypeHelper
Set	include/rapidjson/document.h	/^    static ValueType& Set(ValueType& v, double data, typename ValueType::AllocatorType&) { return v.SetDouble(data); }$/;"	f	struct:internal::TypeHelper
Set	include/rapidjson/document.h	/^    static ValueType& Set(ValueType& v, float data) { return v.SetFloat(data); }$/;"	f	struct:internal::TypeHelper
Set	include/rapidjson/document.h	/^    static ValueType& Set(ValueType& v, float data, typename ValueType::AllocatorType&) { return v.SetFloat(data); }$/;"	f	struct:internal::TypeHelper
Set	include/rapidjson/document.h	/^    static ValueType& Set(ValueType& v, int data) { return v.SetInt(data); }$/;"	f	struct:internal::TypeHelper
Set	include/rapidjson/document.h	/^    static ValueType& Set(ValueType& v, int data, typename ValueType::AllocatorType&) { return v.SetInt(data); }$/;"	f	struct:internal::TypeHelper
Set	include/rapidjson/document.h	/^    static ValueType& Set(ValueType& v, int64_t data) { return v.SetInt64(data); }$/;"	f	struct:internal::TypeHelper
Set	include/rapidjson/document.h	/^    static ValueType& Set(ValueType& v, int64_t data, typename ValueType::AllocatorType&) { return v.SetInt64(data); }$/;"	f	struct:internal::TypeHelper
Set	include/rapidjson/document.h	/^    static ValueType& Set(ValueType& v, uint64_t data) { return v.SetUint64(data); }$/;"	f	struct:internal::TypeHelper
Set	include/rapidjson/document.h	/^    static ValueType& Set(ValueType& v, uint64_t data, typename ValueType::AllocatorType&) { return v.SetUint64(data); }$/;"	f	struct:internal::TypeHelper
Set	include/rapidjson/document.h	/^    static ValueType& Set(ValueType& v, unsigned data) { return v.SetUint(data); }$/;"	f	struct:internal::TypeHelper
Set	include/rapidjson/document.h	/^    static ValueType& Set(ValueType& v, unsigned data, typename ValueType::AllocatorType&) { return v.SetUint(data); }$/;"	f	struct:internal::TypeHelper
Set	include/rapidjson/error/error.h	/^    void Set(ParseErrorCode code, size_t offset = 0) { code_ = code; offset_ = offset; }$/;"	f	struct:ParseResult
Set	include/rapidjson/pointer.h	/^        Set(GenericDocument<EncodingType, typename ValueType::AllocatorType, stackAllocator>& document, T value) const {$/;"	f	class:GenericPointer
Set	include/rapidjson/pointer.h	/^    Set(ValueType& root, T value, typename ValueType::AllocatorType& allocator) const {$/;"	f	class:GenericPointer
Set	include/rapidjson/pointer.h	/^    ValueType& Set(GenericDocument<EncodingType, typename ValueType::AllocatorType, stackAllocator>& document, ValueType& value) const {$/;"	f	class:GenericPointer
Set	include/rapidjson/pointer.h	/^    ValueType& Set(GenericDocument<EncodingType, typename ValueType::AllocatorType, stackAllocator>& document, const Ch* value) const {$/;"	f	class:GenericPointer
Set	include/rapidjson/pointer.h	/^    ValueType& Set(GenericDocument<EncodingType, typename ValueType::AllocatorType, stackAllocator>& document, const ValueType& value) const {$/;"	f	class:GenericPointer
Set	include/rapidjson/pointer.h	/^    ValueType& Set(GenericDocument<EncodingType, typename ValueType::AllocatorType, stackAllocator>& document, const std::basic_string<Ch>& value) const {$/;"	f	class:GenericPointer
Set	include/rapidjson/pointer.h	/^    ValueType& Set(ValueType& root, ValueType& value, typename ValueType::AllocatorType& allocator) const {$/;"	f	class:GenericPointer
Set	include/rapidjson/pointer.h	/^    ValueType& Set(ValueType& root, const Ch* value, typename ValueType::AllocatorType& allocator) const {$/;"	f	class:GenericPointer
Set	include/rapidjson/pointer.h	/^    ValueType& Set(ValueType& root, const ValueType& value, typename ValueType::AllocatorType& allocator) const {$/;"	f	class:GenericPointer
Set	include/rapidjson/pointer.h	/^    ValueType& Set(ValueType& root, const std::basic_string<Ch>& value, typename ValueType::AllocatorType& allocator) const {$/;"	f	class:GenericPointer
SetArray	include/rapidjson/document.h	/^    GenericValue& SetArray() { this->~GenericValue(); new (this) GenericValue(kArrayType); return *this; }$/;"	f	class:GenericValue
SetArrayRaw	include/rapidjson/document.h	/^    void SetArrayRaw(GenericValue* values, SizeType count, Allocator& allocator) {$/;"	f	class:GenericValue
SetBool	include/rapidjson/document.h	/^    GenericValue& SetBool(bool b) { this->~GenericValue(); new (this) GenericValue(b); return *this; }$/;"	f	class:GenericValue
SetDouble	include/rapidjson/document.h	/^    GenericValue& SetDouble(double d)       { this->~GenericValue(); new (this) GenericValue(d);    return *this; }$/;"	f	class:GenericValue
SetElementsPointer	include/rapidjson/document.h	/^    RAPIDJSON_FORCEINLINE GenericValue* SetElementsPointer(GenericValue* elements) { return RAPIDJSON_SETPOINTER(GenericValue, data_.a.elements, elements); }$/;"	f	class:GenericValue
SetFloat	include/rapidjson/document.h	/^    GenericValue& SetFloat(float f)         { this->~GenericValue(); new (this) GenericValue(static_cast<double>(f)); return *this; }$/;"	f	class:GenericValue
SetFormatOptions	include/rapidjson/prettywriter.h	/^    PrettyWriter& SetFormatOptions(PrettyFormatOptions options) {$/;"	f	class:PrettyWriter
SetIndent	include/rapidjson/prettywriter.h	/^    PrettyWriter& SetIndent(Ch indentChar, unsigned indentCharCount) {$/;"	f	class:PrettyWriter
SetInt	include/rapidjson/document.h	/^    GenericValue& SetInt(int i)             { this->~GenericValue(); new (this) GenericValue(i);    return *this; }$/;"	f	class:GenericValue
SetInt64	include/rapidjson/document.h	/^    GenericValue& SetInt64(int64_t i64)     { this->~GenericValue(); new (this) GenericValue(i64);  return *this; }$/;"	f	class:GenericValue
SetLength	include/rapidjson/document.h	/^        inline void     SetLength(SizeType len) { str[LenPos] = static_cast<Ch>(MaxSize -  len); }$/;"	f	struct:GenericValue::ShortString
SetMaxDecimalPlaces	include/rapidjson/writer.h	/^    void SetMaxDecimalPlaces(int maxDecimalPlaces) {$/;"	f	class:Writer
SetMembersPointer	include/rapidjson/document.h	/^    RAPIDJSON_FORCEINLINE Member* SetMembersPointer(Member* members) { return RAPIDJSON_SETPOINTER(Member, data_.o.members, members); }$/;"	f	class:GenericValue
SetNull	include/rapidjson/document.h	/^    GenericValue& SetNull() { this->~GenericValue(); new (this) GenericValue(); return *this; }$/;"	f	class:GenericValue
SetObject	include/rapidjson/document.h	/^    GenericValue& SetObject() { this->~GenericValue(); new (this) GenericValue(kObjectType); return *this; }$/;"	f	class:GenericValue
SetObjectRaw	include/rapidjson/document.h	/^    void SetObjectRaw(Member* members, SizeType count, Allocator& allocator) {$/;"	f	class:GenericValue
SetParseError	include/rapidjson/reader.h	/^    void SetParseError(ParseErrorCode code, size_t offset) { parseResult_.Set(code, offset); }$/;"	f	class:GenericReader
SetString	include/rapidjson/document.h	/^    GenericValue& SetString(StringRefType s) { this->~GenericValue(); SetStringRaw(s); return *this; }$/;"	f	class:GenericValue
SetString	include/rapidjson/document.h	/^    GenericValue& SetString(StringRefType s, Allocator& allocator) { this->~GenericValue(); SetStringRaw(s, allocator); return *this; }$/;"	f	class:GenericValue
SetString	include/rapidjson/document.h	/^    GenericValue& SetString(const Ch* s, Allocator& allocator) { return SetString(StringRef(s), allocator); }$/;"	f	class:GenericValue
SetString	include/rapidjson/document.h	/^    GenericValue& SetString(const Ch* s, SizeType length) { return SetString(StringRef(s, length)); }$/;"	f	class:GenericValue
SetString	include/rapidjson/document.h	/^    GenericValue& SetString(const Ch* s, SizeType length, Allocator& allocator) { return SetString(StringRef(s, length), allocator); }$/;"	f	class:GenericValue
SetString	include/rapidjson/document.h	/^    GenericValue& SetString(const std::basic_string<Ch>& s, Allocator& allocator) { return SetString(StringRef(s), allocator); }$/;"	f	class:GenericValue
SetStringPointer	include/rapidjson/document.h	/^    RAPIDJSON_FORCEINLINE const Ch* SetStringPointer(const Ch* str) { return RAPIDJSON_SETPOINTER(Ch, data_.s.str, str); }$/;"	f	class:GenericValue
SetStringRaw	include/rapidjson/document.h	/^    void SetStringRaw(StringRefType s, Allocator& allocator) {$/;"	f	class:GenericValue
SetUint	include/rapidjson/document.h	/^    GenericValue& SetUint(unsigned u)       { this->~GenericValue(); new (this) GenericValue(u);    return *this; }$/;"	f	class:GenericValue
SetUint64	include/rapidjson/document.h	/^    GenericValue& SetUint64(uint64_t u64)   { this->~GenericValue(); new (this) GenericValue(u64);  return *this; }$/;"	f	class:GenericValue
SetValueByPointer	include/rapidjson/pointer.h	/^SetValueByPointer(DocumentType& document, const CharType(&source)[N], T2 value) {$/;"	f
SetValueByPointer	include/rapidjson/pointer.h	/^SetValueByPointer(DocumentType& document, const GenericPointer<typename DocumentType::ValueType>& pointer, T2 value) {$/;"	f
SetValueByPointer	include/rapidjson/pointer.h	/^SetValueByPointer(T& root, const CharType(&source)[N], T2 value, typename T::AllocatorType& a) {$/;"	f
SetValueByPointer	include/rapidjson/pointer.h	/^SetValueByPointer(T& root, const GenericPointer<typename T::ValueType>& pointer, T2 value, typename T::AllocatorType& a) {$/;"	f
SetValueByPointer	include/rapidjson/pointer.h	/^typename DocumentType::ValueType& SetValueByPointer(DocumentType& document, const CharType(&source)[N], const std::basic_string<typename DocumentType::Ch>& value) {$/;"	f
SetValueByPointer	include/rapidjson/pointer.h	/^typename DocumentType::ValueType& SetValueByPointer(DocumentType& document, const CharType(&source)[N], const typename DocumentType::Ch* value) {$/;"	f
SetValueByPointer	include/rapidjson/pointer.h	/^typename DocumentType::ValueType& SetValueByPointer(DocumentType& document, const CharType(&source)[N], const typename DocumentType::ValueType& value) {$/;"	f
SetValueByPointer	include/rapidjson/pointer.h	/^typename DocumentType::ValueType& SetValueByPointer(DocumentType& document, const CharType(&source)[N], typename DocumentType::ValueType& value) {$/;"	f
SetValueByPointer	include/rapidjson/pointer.h	/^typename DocumentType::ValueType& SetValueByPointer(DocumentType& document, const GenericPointer<typename DocumentType::ValueType>& pointer, const std::basic_string<typename DocumentType::Ch>& value) {$/;"	f
SetValueByPointer	include/rapidjson/pointer.h	/^typename DocumentType::ValueType& SetValueByPointer(DocumentType& document, const GenericPointer<typename DocumentType::ValueType>& pointer, const typename DocumentType::Ch* value) {$/;"	f
SetValueByPointer	include/rapidjson/pointer.h	/^typename DocumentType::ValueType& SetValueByPointer(DocumentType& document, const GenericPointer<typename DocumentType::ValueType>& pointer, const typename DocumentType::ValueType& value) {$/;"	f
SetValueByPointer	include/rapidjson/pointer.h	/^typename DocumentType::ValueType& SetValueByPointer(DocumentType& document, const GenericPointer<typename DocumentType::ValueType>& pointer, typename DocumentType::ValueType& value) {$/;"	f
SetValueByPointer	include/rapidjson/pointer.h	/^typename T::ValueType& SetValueByPointer(T& root, const CharType(&source)[N], const std::basic_string<typename T::Ch>& value, typename T::AllocatorType& a) {$/;"	f
SetValueByPointer	include/rapidjson/pointer.h	/^typename T::ValueType& SetValueByPointer(T& root, const CharType(&source)[N], const typename T::Ch* value, typename T::AllocatorType& a) {$/;"	f
SetValueByPointer	include/rapidjson/pointer.h	/^typename T::ValueType& SetValueByPointer(T& root, const CharType(&source)[N], const typename T::ValueType& value, typename T::AllocatorType& a) {$/;"	f
SetValueByPointer	include/rapidjson/pointer.h	/^typename T::ValueType& SetValueByPointer(T& root, const CharType(&source)[N], typename T::ValueType& value, typename T::AllocatorType& a) {$/;"	f
SetValueByPointer	include/rapidjson/pointer.h	/^typename T::ValueType& SetValueByPointer(T& root, const GenericPointer<typename T::ValueType>& pointer, const std::basic_string<typename T::Ch>& value, typename T::AllocatorType& a) {$/;"	f
SetValueByPointer	include/rapidjson/pointer.h	/^typename T::ValueType& SetValueByPointer(T& root, const GenericPointer<typename T::ValueType>& pointer, const typename T::Ch* value, typename T::AllocatorType& a) {$/;"	f
SetValueByPointer	include/rapidjson/pointer.h	/^typename T::ValueType& SetValueByPointer(T& root, const GenericPointer<typename T::ValueType>& pointer, const typename T::ValueType& value, typename T::AllocatorType& a) {$/;"	f
SetValueByPointer	include/rapidjson/pointer.h	/^typename T::ValueType& SetValueByPointer(T& root, const GenericPointer<typename T::ValueType>& pointer, typename T::ValueType& value, typename T::AllocatorType& a) {$/;"	f
SfinaeTag	include/rapidjson/internal/meta.h	/^struct SfinaeTag {};$/;"	s	namespace:internal
ShortString	include/rapidjson/document.h	/^    struct ShortString {$/;"	s	class:GenericValue
ShortVolume	DoseCalcIO/volume.h	/^typedef Volume<short>   ShortVolume;$/;"	t
ShrinkToFit	include/rapidjson/internal/stack.h	/^    void ShrinkToFit() { $/;"	f	class:internal::Stack
ShrinkToFit	include/rapidjson/memorybuffer.h	/^    void ShrinkToFit() { stack_.ShrinkToFit(); }$/;"	f	struct:GenericMemoryBuffer
ShrinkToFit	include/rapidjson/stringbuffer.h	/^    void ShrinkToFit() {$/;"	f	class:GenericStringBuffer
Sign	include/rapidjson/internal/ieee754.h	/^    bool Sign() const { return (u_ & kSignMask) != 0; }$/;"	f	class:internal::Double
Significand	include/rapidjson/internal/ieee754.h	/^    uint64_t Significand() const { return u_ & kSignificandMask; }$/;"	f	class:internal::Double
Size	include/rapidjson/allocators.h	/^    size_t Size() const {$/;"	f	class:MemoryPoolAllocator
Size	include/rapidjson/document.h	/^    SizeType Size() const { RAPIDJSON_ASSERT(IsArray()); return data_.a.size; }$/;"	f	class:GenericValue
Size	include/rapidjson/document.h	/^    SizeType Size() const { return value_.Size(); }$/;"	f	class:GenericArray
SizeType	include/rapidjson/rapidjson.h	/^typedef unsigned SizeType;$/;"	t
SkipUnescapedString	include/rapidjson/reader.h	/^    static RAPIDJSON_FORCEINLINE void SkipUnescapedString(InsituStringStream& is) {$/;"	f	class:GenericReader
SkipWhitespace	include/rapidjson/reader.h	/^inline const char* SkipWhitespace(const char* p, const char* end) {$/;"	f
SkipWhitespace	include/rapidjson/reader.h	/^template<> inline void SkipWhitespace(EncodedInputStream<UTF8<>, MemoryStream>& is) {$/;"	f
SkipWhitespace	include/rapidjson/reader.h	/^template<> inline void SkipWhitespace(InsituStringStream& is) {$/;"	f
SkipWhitespace	include/rapidjson/reader.h	/^template<> inline void SkipWhitespace(StringStream& is) {$/;"	f
SkipWhitespace	include/rapidjson/reader.h	/^void SkipWhitespace(InputStream& is) {$/;"	f
SkipWhitespaceAndComments	include/rapidjson/reader.h	/^    void SkipWhitespaceAndComments(InputStream& is) {$/;"	f	class:GenericReader
SkipWhitespace_SIMD	include/rapidjson/reader.h	/^inline const char *SkipWhitespace_SIMD(const char* p) {$/;"	f
SkipWhitespace_SIMD	include/rapidjson/reader.h	/^inline const char *SkipWhitespace_SIMD(const char* p, const char* end) {$/;"	f
SparseData	DoseCalcIO/io_data_structs.h	/^struct SparseData {$/;"	s
SparsifyData	dosecalc-beamlet/sparsify_worker.h	/^struct SparsifyData {$/;"	s
SparsifyManager	dosecalc-beamlet/sparsify_manager.h	/^        SparsifyManager() {}$/;"	f	class:SparsifyManager
SparsifyManager	dosecalc-beamlet/sparsify_manager.h	/^        SparsifyManager(const std::string& h5filename, HEADER_PATIENT& patient_header, unsigned int num_srworkers=1, unsigned int num_w2fworkers=1,$/;"	f	class:SparsifyManager
SparsifyManager	dosecalc-beamlet/sparsify_manager.h	/^class SparsifyManager {$/;"	c
SparsifyWorkerBase	dosecalc-beamlet/sparsify_worker.h	/^        SparsifyWorkerBase(wqueue<SparsifyData>& queue, const float sparsity_thresh=_default_sparsity_threshold)$/;"	f	class:SparsifyWorkerBase
SparsifyWorkerBase	dosecalc-beamlet/sparsify_worker.h	/^class SparsifyWorkerBase : public Thread {$/;"	c
Stack	include/rapidjson/internal/stack.h	/^    Stack(Allocator* allocator, size_t stackCapacity) : allocator_(allocator), ownAllocator_(0), stack_(0), stackTop_(0), stackEnd_(0), initialCapacity_(stackCapacity) {$/;"	f	class:internal::Stack
Stack	include/rapidjson/internal/stack.h	/^    Stack(Stack&& rhs)$/;"	f	class:internal::Stack
Stack	include/rapidjson/internal/stack.h	/^class Stack {$/;"	c	namespace:internal
StackStream	include/rapidjson/reader.h	/^        StackStream(internal::Stack<StackAllocator>& stack) : stack_(stack), length_(0) {}$/;"	f	class:GenericReader::StackStream
StackStream	include/rapidjson/reader.h	/^    class StackStream {$/;"	c	class:GenericReader
StartArray	include/rapidjson/document.h	/^    bool StartArray() { new (stack_.template Push<ValueType>()) ValueType(kArrayType); return true; }$/;"	f	class:GenericDocument
StartArray	include/rapidjson/prettywriter.h	/^    bool StartArray() {$/;"	f	class:PrettyWriter
StartArray	include/rapidjson/reader.h	/^    bool StartArray() { return static_cast<Override&>(*this).Default(); }$/;"	f	struct:BaseReaderHandler
StartArray	include/rapidjson/schema.h	/^    bool StartArray() { return true; }$/;"	f	class:internal::Hasher
StartArray	include/rapidjson/schema.h	/^    bool StartArray() {$/;"	f	class:GenericSchemaValidator
StartArray	include/rapidjson/schema.h	/^    bool StartArray(Context& context) const { $/;"	f	class:internal::Schema
StartArray	include/rapidjson/writer.h	/^    bool StartArray() {$/;"	f	class:Writer
StartObject	include/rapidjson/document.h	/^    bool StartObject() { new (stack_.template Push<ValueType>()) ValueType(kObjectType); return true; }$/;"	f	class:GenericDocument
StartObject	include/rapidjson/prettywriter.h	/^    bool StartObject() {$/;"	f	class:PrettyWriter
StartObject	include/rapidjson/reader.h	/^    bool StartObject() { return static_cast<Override&>(*this).Default(); }$/;"	f	struct:BaseReaderHandler
StartObject	include/rapidjson/schema.h	/^    bool StartObject() { return true; }$/;"	f	class:internal::Hasher
StartObject	include/rapidjson/schema.h	/^    bool StartObject() {$/;"	f	class:GenericSchemaValidator
StartObject	include/rapidjson/schema.h	/^    bool StartObject(Context& context) const { $/;"	f	class:internal::Schema
StartObject	include/rapidjson/writer.h	/^    bool StartObject() {$/;"	f	class:Writer
State	include/rapidjson/internal/regex.h	/^    struct State {$/;"	s	class:internal::GenericRegex
State	include/rapidjson/internal/regex.h	/^    typedef typename RegexType::State State;$/;"	t	class:internal::GenericRegexSearch
StaticAssertTest	include/rapidjson/rapidjson.h	/^template <size_t x> struct StaticAssertTest {};$/;"	s
StrLen	include/rapidjson/internal/strfunc.h	/^inline SizeType StrLen(const Ch* s) {$/;"	f	namespace:internal
StrLen	include/rapidjson/internal/strfunc.h	/^inline SizeType StrLen(const char* s) {$/;"	f	namespace:internal
StrLen	include/rapidjson/internal/strfunc.h	/^inline SizeType StrLen(const wchar_t* s) {$/;"	f	namespace:internal
StreamLocalCopy	include/rapidjson/reader.h	/^    StreamLocalCopy(Stream& original) : s(original) {}$/;"	f	class:internal::StreamLocalCopy
StreamLocalCopy	include/rapidjson/reader.h	/^    StreamLocalCopy(Stream& original) : s(original), original_(original) {}$/;"	f	class:internal::StreamLocalCopy
StreamLocalCopy	include/rapidjson/reader.h	/^class StreamLocalCopy<Stream, 0> {$/;"	c	namespace:internal
StreamLocalCopy	include/rapidjson/reader.h	/^class StreamLocalCopy<Stream, 1> {$/;"	c	namespace:internal
StreamTraits	include/rapidjson/stream.h	/^struct StreamTraits {$/;"	s
StreamTraits	include/rapidjson/stream.h	/^struct StreamTraits<GenericInsituStringStream<Encoding> > {$/;"	s
StreamTraits	include/rapidjson/stream.h	/^struct StreamTraits<GenericStringStream<Encoding> > {$/;"	s
String	include/rapidjson/document.h	/^    bool String(const Ch* str, SizeType length, bool copy) { $/;"	f	class:GenericDocument
String	include/rapidjson/document.h	/^    struct String {$/;"	s	class:GenericValue
String	include/rapidjson/prettywriter.h	/^    bool String(const Ch* str) { return String(str, internal::StrLen(str)); }$/;"	f	class:PrettyWriter
String	include/rapidjson/prettywriter.h	/^    bool String(const Ch* str, SizeType length, bool copy = false) {$/;"	f	class:PrettyWriter
String	include/rapidjson/prettywriter.h	/^    bool String(const std::basic_string<Ch>& str) {$/;"	f	class:PrettyWriter
String	include/rapidjson/reader.h	/^    bool String(const Ch*, SizeType, bool) { return static_cast<Override&>(*this).Default(); }$/;"	f	struct:BaseReaderHandler
String	include/rapidjson/schema.h	/^    bool String(Context& context, const Ch* str, SizeType length, bool) const {$/;"	f	class:internal::Schema
String	include/rapidjson/schema.h	/^    bool String(const Ch* str, SizeType len, bool) {$/;"	f	class:internal::Hasher
String	include/rapidjson/schema.h	/^    bool String(const Ch* str, SizeType length, bool copy)$/;"	f	class:GenericSchemaValidator
String	include/rapidjson/writer.h	/^    bool String(const Ch* const& str) { return String(str, internal::StrLen(str)); }$/;"	f	class:Writer
String	include/rapidjson/writer.h	/^    bool String(const Ch* str, SizeType length, bool copy = false) {$/;"	f	class:Writer
String	include/rapidjson/writer.h	/^    bool String(const std::basic_string<Ch>& str) {$/;"	f	class:Writer
StringBuffer	include/rapidjson/fwd.h	/^typedef GenericStringBuffer<UTF8<char>, CrtAllocator> StringBuffer;$/;"	t
StringBuffer	include/rapidjson/stringbuffer.h	/^typedef GenericStringBuffer<UTF8<> > StringBuffer;$/;"	t
StringEqual	include/rapidjson/document.h	/^    bool StringEqual(const GenericValue<Encoding, SourceAllocator>& rhs) const {$/;"	f	class:GenericValue
StringRef	include/rapidjson/document.h	/^inline GenericStringRef<CharType> StringRef(const CharType* str) {$/;"	f
StringRef	include/rapidjson/document.h	/^inline GenericStringRef<CharType> StringRef(const CharType* str, size_t length) {$/;"	f
StringRef	include/rapidjson/document.h	/^inline GenericStringRef<CharType> StringRef(const std::basic_string<CharType>& str) {$/;"	f
StringRefType	include/rapidjson/document.h	/^    typedef GenericStringRef<Ch> StringRefType;     \/\/!< Reference to a constant string$/;"	t	class:GenericValue
StringRefType	include/rapidjson/document.h	/^    typedef typename ValueType::StringRefType StringRefType;$/;"	t	class:GenericArray
StringRefType	include/rapidjson/document.h	/^    typedef typename ValueType::StringRefType StringRefType;$/;"	t	class:GenericObject
StringStream	include/rapidjson/fwd.h	/^typedef GenericStringStream<UTF8<char> > StringStream;$/;"	t
StringStream	include/rapidjson/stream.h	/^typedef GenericStringStream<UTF8<> > StringStream;$/;"	t
StringToken	include/rapidjson/reader.h	/^        StringToken,$/;"	e	enum:GenericReader::Token
StringType	include/rapidjson/document.h	/^    typedef const typename ValueType::Ch* StringType;$/;"	t	struct:internal::TypeHelper
StringType	include/rapidjson/document.h	/^    typedef std::basic_string<typename ValueType::Ch> StringType;$/;"	t	struct:internal::TypeHelper
Stringify	include/rapidjson/pointer.h	/^    bool Stringify(OutputStream& os) const {$/;"	f	class:GenericPointer
StringifyUriFragment	include/rapidjson/pointer.h	/^    bool StringifyUriFragment(OutputStream& os) const {$/;"	f	class:GenericPointer
StrtodBigInteger	include/rapidjson/internal/strtod.h	/^inline double StrtodBigInteger(double approx, const char* decimals, size_t length, size_t decimalPosition, int exp) {$/;"	f	namespace:internal
StrtodDiyFp	include/rapidjson/internal/strtod.h	/^inline bool StrtodDiyFp(const char* decimals, size_t length, size_t decimalPosition, int exp, double* result) {$/;"	f	namespace:internal
StrtodFast	include/rapidjson/internal/strtod.h	/^inline bool StrtodFast(double d, int p, double* result) {$/;"	f	namespace:internal
StrtodFullPrecision	include/rapidjson/internal/strtod.h	/^inline double StrtodFullPrecision(double d, int p, const char* decimals, size_t length, size_t decimalPosition, int exp) {$/;"	f	namespace:internal
StrtodNormalPrecision	include/rapidjson/internal/strtod.h	/^inline double StrtodNormalPrecision(double d, int p) {$/;"	f	namespace:internal
StructureSet	DoseCalcIO/roi.h	/^struct StructureSet {$/;"	s
Swap	include/rapidjson/pointer.h	/^    ValueType& Swap(GenericDocument<EncodingType, typename ValueType::AllocatorType, stackAllocator>& document, ValueType& value) const {$/;"	f	class:GenericPointer
Swap	include/rapidjson/pointer.h	/^    ValueType& Swap(ValueType& root, ValueType& value, typename ValueType::AllocatorType& allocator) const {$/;"	f	class:GenericPointer
SwapValueByPointer	include/rapidjson/pointer.h	/^typename DocumentType::ValueType& SwapValueByPointer(DocumentType& document, const CharType(&source)[N], typename DocumentType::ValueType& value) {$/;"	f
SwapValueByPointer	include/rapidjson/pointer.h	/^typename DocumentType::ValueType& SwapValueByPointer(DocumentType& document, const GenericPointer<typename DocumentType::ValueType>& pointer, typename DocumentType::ValueType& value) {$/;"	f
SwapValueByPointer	include/rapidjson/pointer.h	/^typename T::ValueType& SwapValueByPointer(T& root, const CharType(&source)[N], typename T::ValueType& value, typename T::AllocatorType& a) {$/;"	f
SwapValueByPointer	include/rapidjson/pointer.h	/^typename T::ValueType& SwapValueByPointer(T& root, const GenericPointer<typename T::ValueType>& pointer, typename T::ValueType& value, typename T::AllocatorType& a) {$/;"	f
TAIL	include/rapidjson/encodings.h	149;"	d
TAIL	include/rapidjson/encodings.h	175;"	d
TAIL	include/rapidjson/encodings.h	182;"	d
TAIL	include/rapidjson/encodings.h	201;"	d
TB	CudaUtilities/memory_manager.cuh	18;"	d	file:
TERMA_ONLY	dosecalc-beamlet/main.cu	/^bool TERMA_ONLY = false; \/\/ XXX temporary$/;"	v
THREADED	dosecalc-beamlet/sparsify_manager.h	/^    THREADED,$/;"	m	class:SPARSIFY_STRATEGY
TILE_DIM_X	include/dosecalc_defs.h	26;"	d
TILE_DIM_Y	include/dosecalc_defs.h	27;"	d
TRANS	include/rapidjson/encodings.h	148;"	d
TRANS	include/rapidjson/encodings.h	174;"	d
TRANS	include/rapidjson/encodings.h	181;"	d
TRANS	include/rapidjson/encodings.h	200;"	d
Take	include/rapidjson/encodedstream.h	/^    Ch Take() { Ch c = current_; current_ = Encoding::Take(is_); return c; }$/;"	f	class:EncodedInputStream
Take	include/rapidjson/encodedstream.h	/^    Ch Take() { Ch c = current_; current_ = takeFunc_(*is_); return c; }$/;"	f	class:AutoUTFInputStream
Take	include/rapidjson/encodedstream.h	/^    Ch Take() { RAPIDJSON_ASSERT(false); return 0;}$/;"	f	class:AutoUTFOutputStream
Take	include/rapidjson/encodedstream.h	/^    Ch Take() { RAPIDJSON_ASSERT(false); return 0;}$/;"	f	class:EncodedOutputStream
Take	include/rapidjson/encodedstream.h	/^    Ch Take() { return is_.Take(); }$/;"	f	class:EncodedInputStream
Take	include/rapidjson/encodings.h	/^    static Ch Take(InputByteStream& is) {$/;"	f	struct:ASCII
Take	include/rapidjson/encodings.h	/^    static Ch Take(InputByteStream& is) {$/;"	f	struct:UTF8
Take	include/rapidjson/encodings.h	/^    static CharType Take(InputByteStream& is) {$/;"	f	struct:UTF16BE
Take	include/rapidjson/encodings.h	/^    static CharType Take(InputByteStream& is) {$/;"	f	struct:UTF16LE
Take	include/rapidjson/encodings.h	/^    static CharType Take(InputByteStream& is) {$/;"	f	struct:UTF32BE
Take	include/rapidjson/encodings.h	/^    static CharType Take(InputByteStream& is) {$/;"	f	struct:UTF32LE
Take	include/rapidjson/filereadstream.h	/^    Ch Take() { Ch c = *current_; Read(); return c; }$/;"	f	class:FileReadStream
Take	include/rapidjson/filewritestream.h	/^    char Take() { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:FileWriteStream
Take	include/rapidjson/internal/regex.h	/^    unsigned Take() {$/;"	f	class:internal::DecodedStream
Take	include/rapidjson/istreamwrapper.h	/^    Ch Take() { $/;"	f	class:BasicIStreamWrapper
Take	include/rapidjson/memorystream.h	/^    Ch Take() { return RAPIDJSON_UNLIKELY(src_ == end_) ? '\\0' : *src_++; }$/;"	f	struct:MemoryStream
Take	include/rapidjson/ostreamwrapper.h	/^    char Take() { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:BasicOStreamWrapper
Take	include/rapidjson/pointer.h	/^        Ch Take() {$/;"	f	class:GenericPointer::PercentDecodeStream
Take	include/rapidjson/reader.h	/^        RAPIDJSON_FORCEINLINE Ch Take() { return Base::TakePush(); }$/;"	f	class:GenericReader::NumberStream
Take	include/rapidjson/reader.h	/^        RAPIDJSON_FORCEINLINE Ch Take() { return is.Take(); }$/;"	f	class:GenericReader::NumberStream
Take	include/rapidjson/stream.h	/^    Ch Take() { return *src_++; }$/;"	f	struct:GenericInsituStringStream
Take	include/rapidjson/stream.h	/^    Ch Take() { return *src_++; }$/;"	f	struct:GenericStringStream
TakeBOM	include/rapidjson/encodings.h	/^    static CharType TakeBOM(InputByteStream& is) {$/;"	f	struct:ASCII
TakeBOM	include/rapidjson/encodings.h	/^    static CharType TakeBOM(InputByteStream& is) {$/;"	f	struct:UTF16BE
TakeBOM	include/rapidjson/encodings.h	/^    static CharType TakeBOM(InputByteStream& is) {$/;"	f	struct:UTF16LE
TakeBOM	include/rapidjson/encodings.h	/^    static CharType TakeBOM(InputByteStream& is) {$/;"	f	struct:UTF32BE
TakeBOM	include/rapidjson/encodings.h	/^    static CharType TakeBOM(InputByteStream& is) {$/;"	f	struct:UTF32LE
TakeBOM	include/rapidjson/encodings.h	/^    static CharType TakeBOM(InputByteStream& is) {$/;"	f	struct:UTF8
TakeFunc	include/rapidjson/encodedstream.h	/^    typedef Ch (*TakeFunc)(InputByteStream& is);$/;"	t	class:AutoUTFInputStream
TakePush	include/rapidjson/reader.h	/^        RAPIDJSON_FORCEINLINE Ch TakePush() { return is.Take(); }$/;"	f	class:GenericReader::NumberStream
TakePush	include/rapidjson/reader.h	/^        RAPIDJSON_FORCEINLINE Ch TakePush() {$/;"	f	class:GenericReader::NumberStream
Tell	include/rapidjson/encodedstream.h	/^    size_t Tell() const { RAPIDJSON_ASSERT(false);  return 0; }$/;"	f	class:EncodedOutputStream
Tell	include/rapidjson/encodedstream.h	/^    size_t Tell() const { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:AutoUTFOutputStream
Tell	include/rapidjson/encodedstream.h	/^    size_t Tell() const { return is_->Tell(); }$/;"	f	class:AutoUTFInputStream
Tell	include/rapidjson/encodedstream.h	/^    size_t Tell() const { return is_.Tell(); }$/;"	f	class:EncodedInputStream
Tell	include/rapidjson/filereadstream.h	/^    size_t Tell() const { return count_ + static_cast<size_t>(current_ - buffer_); }$/;"	f	class:FileReadStream
Tell	include/rapidjson/filewritestream.h	/^    size_t Tell() const { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:FileWriteStream
Tell	include/rapidjson/istreamwrapper.h	/^    size_t Tell() const { return count_; }$/;"	f	class:BasicIStreamWrapper
Tell	include/rapidjson/memorystream.h	/^    size_t Tell() const { return static_cast<size_t>(src_ - begin_); }$/;"	f	struct:MemoryStream
Tell	include/rapidjson/ostreamwrapper.h	/^    size_t Tell() const { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:BasicOStreamWrapper
Tell	include/rapidjson/pointer.h	/^        size_t Tell() const { return static_cast<size_t>(src_ - head_); }$/;"	f	class:GenericPointer::PercentDecodeStream
Tell	include/rapidjson/reader.h	/^        size_t Tell() { return is.Tell(); }$/;"	f	class:GenericReader::NumberStream
Tell	include/rapidjson/stream.h	/^    size_t Tell() const { return static_cast<size_t>(src_ - head_); }$/;"	f	struct:GenericStringStream
Tell	include/rapidjson/stream.h	/^    size_t Tell() { return static_cast<size_t>(src_ - head_); }$/;"	f	struct:GenericInsituStringStream
Thread	Utilities/thread.h	/^        Thread() : m_running{false}, m_detached{false} {}$/;"	f	class:Thread
Thread	Utilities/thread.h	/^class Thread {$/;"	c
Timer	Utilities/timing.h	/^class Timer {$/;"	c
ToBias	include/rapidjson/internal/ieee754.h	/^    uint64_t ToBias() const { return (u_ & kSignMask) ? ~u_ + 1 : u_ | kSignMask; }$/;"	f	class:internal::Double
ToDouble	include/rapidjson/internal/diyfp.h	/^    double ToDouble() const {$/;"	f	struct:internal::DiyFp
Token	include/rapidjson/pointer.h	/^    struct Token {$/;"	s	class:GenericPointer
Token	include/rapidjson/reader.h	/^    enum Token {$/;"	g	class:GenericReader
TokenHelper	include/rapidjson/schema.h	/^struct TokenHelper {$/;"	s	namespace:internal
TokenHelper	include/rapidjson/schema.h	/^struct TokenHelper<Stack, char> {$/;"	s	namespace:internal
Tokenize	include/rapidjson/reader.h	/^    RAPIDJSON_FORCEINLINE Token Tokenize(Ch c) {$/;"	f	class:GenericReader
Top	include/rapidjson/internal/stack.h	/^    T* Top() { $/;"	f	class:internal::Stack
Top	include/rapidjson/internal/stack.h	/^    const T* Top() const {$/;"	f	class:internal::Stack
Transcode	include/rapidjson/encodings.h	/^    static RAPIDJSON_FORCEINLINE bool Transcode(InputStream& is, OutputStream& os) {$/;"	f	struct:Transcoder
TranscodeUnsafe	include/rapidjson/encodings.h	/^    static RAPIDJSON_FORCEINLINE bool TranscodeUnsafe(InputStream& is, OutputStream& os) {$/;"	f	struct:Transcoder
Transcoder	include/rapidjson/encodings.h	/^struct Transcoder {$/;"	s
Transcoder	include/rapidjson/encodings.h	/^struct Transcoder<Encoding, Encoding> {$/;"	s
Transit	include/rapidjson/reader.h	/^    RAPIDJSON_FORCEINLINE IterativeParsingState Transit(IterativeParsingState src, Token token, IterativeParsingState dst, InputStream& is, Handler& handler) {$/;"	f	class:GenericReader
TrueToken	include/rapidjson/reader.h	/^        TrueToken,$/;"	e	enum:GenericReader::Token
TrueType	include/rapidjson/internal/meta.h	/^typedef BoolType<true> TrueType;$/;"	t	namespace:internal
Type	include/rapidjson/internal/biginteger.h	/^    typedef uint64_t Type;$/;"	t	class:internal::BigInteger
Type	include/rapidjson/internal/meta.h	/^    typedef BoolType Type;$/;"	t	struct:internal::BoolType
Type	include/rapidjson/internal/meta.h	/^template <> struct SelectIfImpl<false> { template <typename T1, typename T2> struct Apply { typedef T2 Type; }; };$/;"	t	struct:internal::SelectIfImpl::Apply
Type	include/rapidjson/internal/meta.h	/^template <bool C> struct SelectIfImpl { template <typename T1, typename T2> struct Apply { typedef T1 Type; }; };$/;"	t	struct:internal::SelectIfImpl::Apply
Type	include/rapidjson/internal/meta.h	/^template <bool Condition, typename T = void> struct DisableIfCond { typedef T Type; };$/;"	t	struct:internal::DisableIfCond
Type	include/rapidjson/internal/meta.h	/^template <bool Condition, typename T = void> struct EnableIfCond  { typedef T Type; };$/;"	t	struct:internal::EnableIfCond
Type	include/rapidjson/internal/meta.h	/^template <typename T> struct AddConst { typedef const T Type; };$/;"	t	struct:internal::AddConst
Type	include/rapidjson/internal/meta.h	/^template <typename T> struct RemoveConst { typedef T Type; };$/;"	t	struct:internal::RemoveConst
Type	include/rapidjson/internal/meta.h	/^template <typename T> struct RemoveConst<const T> { typedef T Type; };$/;"	t	struct:internal::RemoveConst
Type	include/rapidjson/internal/meta.h	/^template <typename T> struct RemoveSfinaeTag<SfinaeTag&(*)(T)> { typedef T Type; };$/;"	t	struct:internal::RemoveSfinaeTag
Type	include/rapidjson/internal/meta.h	/^template <typename T> struct Void { typedef void Type; };$/;"	t	struct:internal::Void
Type	include/rapidjson/rapidjson.h	/^enum Type {$/;"	g
TypeHelper	include/rapidjson/document.h	/^struct TypeHelper {};$/;"	s	namespace:internal
TypeHelper	include/rapidjson/document.h	/^struct TypeHelper<ValueType, bool> {$/;"	s	namespace:internal
TypeHelper	include/rapidjson/document.h	/^struct TypeHelper<ValueType, const typename ValueType::Ch*> {$/;"	s	namespace:internal
TypeHelper	include/rapidjson/document.h	/^struct TypeHelper<ValueType, double> {$/;"	s	namespace:internal
TypeHelper	include/rapidjson/document.h	/^struct TypeHelper<ValueType, float> {$/;"	s	namespace:internal
TypeHelper	include/rapidjson/document.h	/^struct TypeHelper<ValueType, int64_t> {$/;"	s	namespace:internal
TypeHelper	include/rapidjson/document.h	/^struct TypeHelper<ValueType, int> {$/;"	s	namespace:internal
TypeHelper	include/rapidjson/document.h	/^struct TypeHelper<ValueType, std::basic_string<typename ValueType::Ch> > {$/;"	s	namespace:internal
TypeHelper	include/rapidjson/document.h	/^struct TypeHelper<ValueType, typename ValueType::Array> {$/;"	s	namespace:internal
TypeHelper	include/rapidjson/document.h	/^struct TypeHelper<ValueType, typename ValueType::ConstArray> {$/;"	s	namespace:internal
TypeHelper	include/rapidjson/document.h	/^struct TypeHelper<ValueType, typename ValueType::ConstObject> {$/;"	s	namespace:internal
TypeHelper	include/rapidjson/document.h	/^struct TypeHelper<ValueType, typename ValueType::Object> {$/;"	s	namespace:internal
TypeHelper	include/rapidjson/document.h	/^struct TypeHelper<ValueType, uint64_t> {$/;"	s	namespace:internal
TypeHelper	include/rapidjson/document.h	/^struct TypeHelper<ValueType, unsigned> {$/;"	s	namespace:internal
U	include/rapidjson/document.h	/^        struct U {$/;"	s	union:GenericValue::Number
U	include/rapidjson/schema.h	/^        union U {$/;"	u	struct:internal::Hasher::Number
UINT16_C	include/rapidjson/msinttypes/stdint.h	282;"	d
UINT16_C	include/rapidjson/msinttypes/stdint.h	59;"	d
UINT16_C	include/rapidjson/msinttypes/stdint.h	71;"	d
UINT16_MAX	RTClasses/rtimages.h	16;"	d
UINT16_MAX	include/rapidjson/msinttypes/stdint.h	187;"	d
UINT32_C	include/rapidjson/msinttypes/stdint.h	283;"	d
UINT32_C	include/rapidjson/msinttypes/stdint.h	60;"	d
UINT32_C	include/rapidjson/msinttypes/stdint.h	72;"	d
UINT32_MAX	include/rapidjson/msinttypes/stdint.h	188;"	d
UINT64_C	include/rapidjson/msinttypes/stdint.h	284;"	d
UINT64_C	include/rapidjson/msinttypes/stdint.h	61;"	d
UINT64_C	include/rapidjson/msinttypes/stdint.h	73;"	d
UINT64_MAX	include/rapidjson/msinttypes/stdint.h	189;"	d
UINT8_C	include/rapidjson/msinttypes/stdint.h	281;"	d
UINT8_C	include/rapidjson/msinttypes/stdint.h	58;"	d
UINT8_C	include/rapidjson/msinttypes/stdint.h	70;"	d
UINT8_MAX	include/rapidjson/msinttypes/stdint.h	186;"	d
UINTMAX_C	include/rapidjson/msinttypes/stdint.h	293;"	d
UINTMAX_C	include/rapidjson/msinttypes/stdint.h	82;"	d
UINTMAX_MAX	include/rapidjson/msinttypes/stdint.h	233;"	d
UINTPTR_MAX	include/rapidjson/msinttypes/stdint.h	223;"	d
UINTPTR_MAX	include/rapidjson/msinttypes/stdint.h	227;"	d
UINT_FAST16_MAX	include/rapidjson/msinttypes/stdint.h	215;"	d
UINT_FAST32_MAX	include/rapidjson/msinttypes/stdint.h	216;"	d
UINT_FAST64_MAX	include/rapidjson/msinttypes/stdint.h	217;"	d
UINT_FAST8_MAX	include/rapidjson/msinttypes/stdint.h	214;"	d
UINT_LEAST16_MAX	include/rapidjson/msinttypes/stdint.h	201;"	d
UINT_LEAST32_MAX	include/rapidjson/msinttypes/stdint.h	202;"	d
UINT_LEAST64_MAX	include/rapidjson/msinttypes/stdint.h	203;"	d
UINT_LEAST8_MAX	include/rapidjson/msinttypes/stdint.h	200;"	d
UNCERT	DoseCalcIO/kernel.cpp	21;"	d	file:
UNSPEC	DoseCalcIO/beam.h	/^            UNSPEC,$/;"	m	class:BEAM::ISO_T
UTF16	include/rapidjson/encodings.h	/^struct UTF16 {$/;"	s
UTF16BE	include/rapidjson/encodings.h	/^struct UTF16BE : UTF16<CharType> {$/;"	s
UTF16LE	include/rapidjson/encodings.h	/^struct UTF16LE : UTF16<CharType> {$/;"	s
UTF32	include/rapidjson/encodings.h	/^struct UTF32 {$/;"	s
UTF32BE	include/rapidjson/encodings.h	/^struct UTF32BE : UTF32<CharType> {$/;"	s
UTF32LE	include/rapidjson/encodings.h	/^struct UTF32LE : UTF32<CharType> {$/;"	s
UTF8	include/rapidjson/encodings.h	/^struct UTF8 {$/;"	s
UTFType	include/rapidjson/encodings.h	/^enum UTFType {$/;"	g
Uint	include/rapidjson/document.h	/^    bool Uint(unsigned i) { new (stack_.template Push<ValueType>()) ValueType(i); return true; }$/;"	f	class:GenericDocument
Uint	include/rapidjson/prettywriter.h	/^    bool Uint(unsigned u)       { PrettyPrefix(kNumberType); return Base::WriteUint(u); }$/;"	f	class:PrettyWriter
Uint	include/rapidjson/reader.h	/^    bool Uint(unsigned) { return static_cast<Override&>(*this).Default(); }$/;"	f	struct:BaseReaderHandler
Uint	include/rapidjson/schema.h	/^    bool Uint(Context& context, unsigned u) const {$/;"	f	class:internal::Schema
Uint	include/rapidjson/schema.h	/^    bool Uint(unsigned u)   { RAPIDJSON_SCHEMA_HANDLE_VALUE_(Uint,   (CurrentContext(), u), (u)); }$/;"	f	class:GenericSchemaValidator
Uint	include/rapidjson/schema.h	/^    bool Uint(unsigned u) { Number n; n.u.u = u; n.d = static_cast<double>(u); return WriteNumber(n); }$/;"	f	class:internal::Hasher
Uint	include/rapidjson/writer.h	/^    bool Uint(unsigned u)       { Prefix(kNumberType); return EndValue(WriteUint(u)); }$/;"	f	class:Writer
Uint64	include/rapidjson/document.h	/^    bool Uint64(uint64_t i) { new (stack_.template Push<ValueType>()) ValueType(i); return true; }$/;"	f	class:GenericDocument
Uint64	include/rapidjson/prettywriter.h	/^    bool Uint64(uint64_t u64)   { PrettyPrefix(kNumberType); return Base::WriteUint64(u64);  }$/;"	f	class:PrettyWriter
Uint64	include/rapidjson/reader.h	/^    bool Uint64(uint64_t) { return static_cast<Override&>(*this).Default(); }$/;"	f	struct:BaseReaderHandler
Uint64	include/rapidjson/schema.h	/^    bool Uint64(Context& context, uint64_t u) const {$/;"	f	class:internal::Schema
Uint64	include/rapidjson/schema.h	/^    bool Uint64(uint64_t u) { Number n; n.u.u = u; n.d = static_cast<double>(u); return WriteNumber(n); }$/;"	f	class:internal::Hasher
Uint64	include/rapidjson/schema.h	/^    bool Uint64(uint64_t u) { RAPIDJSON_SCHEMA_HANDLE_VALUE_(Uint64, (CurrentContext(), u), (u)); }$/;"	f	class:GenericSchemaValidator
Uint64	include/rapidjson/writer.h	/^    bool Uint64(uint64_t u64)   { Prefix(kNumberType); return EndValue(WriteUint64(u64)); }$/;"	f	class:Writer
Uint64Value	include/rapidjson/internal/ieee754.h	/^    uint64_t Uint64Value() const { return u_; }$/;"	f	class:internal::Double
UnpackBEVDosePillar	dosecalc-beamlet/nvbbRayConvolve_device.cu	/^UnpackBEVDosePillar ($/;"	f
Usable	include/rapidjson/document.h	/^        inline static bool Usable(SizeType len) { return                       (MaxSize >= len); }$/;"	f	struct:GenericValue::ShortString
VECT2ARR	DoseCalcIO/macros.h	12;"	d
VECT3ARR	DoseCalcIO/macros.h	13;"	d
VERSION_STRING	include/version.h	16;"	d
Validate	include/rapidjson/encodings.h	/^    static RAPIDJSON_FORCEINLINE bool Validate(InputStream& is, OutputStream& os) {$/;"	f	struct:AutoUTF
Validate	include/rapidjson/encodings.h	/^    static RAPIDJSON_FORCEINLINE bool Validate(InputStream& is, OutputStream& os) {$/;"	f	struct:Transcoder
Validate	include/rapidjson/encodings.h	/^    static bool Validate(InputStream& is, OutputStream& os) {$/;"	f	struct:ASCII
Validate	include/rapidjson/encodings.h	/^    static bool Validate(InputStream& is, OutputStream& os) {$/;"	f	struct:UTF16
Validate	include/rapidjson/encodings.h	/^    static bool Validate(InputStream& is, OutputStream& os) {$/;"	f	struct:UTF32
Validate	include/rapidjson/encodings.h	/^    static bool Validate(InputStream& is, OutputStream& os) {$/;"	f	struct:UTF8
Value	include/rapidjson/document.h	/^typedef GenericValue<UTF8<> > Value;$/;"	t
Value	include/rapidjson/fwd.h	/^typedef GenericValue<UTF8<char>, MemoryPoolAllocator<CrtAllocator> > Value;$/;"	t
Value	include/rapidjson/internal/ieee754.h	/^    double Value() const { return d_; }$/;"	f	class:internal::Double
Value	include/rapidjson/internal/meta.h	/^    enum { Value = (sizeof(Check(Host(), 0)) == sizeof(Yes)) };$/;"	e	enum:internal::IsBaseOfImpl::__anon2
Value	include/rapidjson/internal/meta.h	/^    static const bool Value = Cond;$/;"	m	struct:internal::BoolType
ValueIterator	include/rapidjson/document.h	/^    typedef GenericValue* ValueIterator;            \/\/!< Value iterator for iterating in array.$/;"	t	class:GenericValue
ValueIterator	include/rapidjson/document.h	/^    typedef ValueType* ValueIterator;  \/\/ This may be const or non-const iterator$/;"	t	class:GenericArray
ValueType	include/rapidjson/document.h	/^    typedef GenericValue<Encoding, Allocator> ValueType;    \/\/!< Value type of itself.$/;"	t	class:GenericValue
ValueType	include/rapidjson/document.h	/^    typedef GenericValue<Encoding, Allocator> ValueType;    \/\/!< Value type of the document.$/;"	t	class:GenericDocument
ValueType	include/rapidjson/document.h	/^    typedef typename internal::MaybeAddConst<Const,PlainType>::Type ValueType;$/;"	t	class:GenericArray
ValueType	include/rapidjson/document.h	/^    typedef typename internal::MaybeAddConst<Const,PlainType>::Type ValueType;$/;"	t	class:GenericMemberIterator
ValueType	include/rapidjson/document.h	/^    typedef typename internal::MaybeAddConst<Const,PlainType>::Type ValueType;$/;"	t	class:GenericObject
ValueType	include/rapidjson/schema.h	/^    typedef ValueT ValueType;$/;"	t	class:GenericSchemaDocument
ValueType	include/rapidjson/schema.h	/^    typedef typename SchemaDocumentType::ValueType ValueType;$/;"	t	class:internal::Schema
ValueType	include/rapidjson/schema.h	/^    typedef typename SchemaType::ValueType ValueType;$/;"	t	struct:internal::SchemaValidationContext
Void	include/rapidjson/internal/meta.h	/^template <typename T> struct Void { typedef void Type; };$/;"	s	namespace:internal
Volume	DoseCalcIO/volume.h	/^        Volume() {}$/;"	f	class:Volume
Volume	DoseCalcIO/volume.h	/^        Volume(T* data, const FrameOfReference& frame) :$/;"	f	class:Volume
Volume	DoseCalcIO/volume.h	/^        Volume(const FrameOfReference& frame) :$/;"	f	class:Volume
Volume	DoseCalcIO/volume.h	/^class Volume {$/;"	c
Volume	extern/python/volume.py	/^class Volume:$/;"	c
W2FData	dosecalc-beamlet/sparsify_manager.h	/^        struct W2FData {$/;"	s	class:BaseW2FWorker
W2FWorker_Central	dosecalc-beamlet/sparsify_manager.h	/^        W2FWorker_Central(SparsifyManager& parent) : BaseW2FWorker(parent) {}$/;"	f	class:W2FWorker_Central
W2FWorker_Central	dosecalc-beamlet/sparsify_manager.h	/^        W2FWorker_Central(const BaseW2FWorker& other) : BaseW2FWorker(other.parent) {}$/;"	f	class:W2FWorker_Central
W2FWorker_Central	dosecalc-beamlet/sparsify_manager.h	/^class W2FWorker_Central : public BaseW2FWorker {$/;"	c
W2FWorker_PerBeamlet	dosecalc-beamlet/sparsify_manager.h	/^        W2FWorker_PerBeamlet(SparsifyManager& parent) : BaseW2FWorker(parent) {}$/;"	f	class:W2FWorker_PerBeamlet
W2FWorker_PerBeamlet	dosecalc-beamlet/sparsify_manager.h	/^        W2FWorker_PerBeamlet(const BaseW2FWorker& other) : BaseW2FWorker(other.parent) {}$/;"	f	class:W2FWorker_PerBeamlet
W2FWorker_PerBeamlet	dosecalc-beamlet/sparsify_manager.h	/^class W2FWorker_PerBeamlet : public BaseW2FWorker {$/;"	c
WCHAR_MAX	include/rapidjson/msinttypes/stdint.h	261;"	d
WCHAR_MIN	include/rapidjson/msinttypes/stdint.h	258;"	d
WHITE	Utilities/logging.h	/^    CYAN, WHITE$/;"	e	enum:COLOR
WINT_MAX	include/rapidjson/msinttypes/stdint.h	265;"	d
WINT_MIN	include/rapidjson/msinttypes/stdint.h	264;"	d
WIStreamWrapper	include/rapidjson/istreamwrapper.h	/^typedef BasicIStreamWrapper<std::wistream> WIStreamWrapper;$/;"	t
WLOG	Utilities/wqueue.h	16;"	d
WOStreamWrapper	include/rapidjson/ostreamwrapper.h	/^typedef BasicOStreamWrapper<std::wostream> WOStreamWrapper;$/;"	t
WRITE_STRATEGY	dosecalc-beamlet/sparsify_manager.h	/^enum class WRITE_STRATEGY {$/;"	c
WriteBool	include/rapidjson/writer.h	/^    bool WriteBool(bool b)  {$/;"	f	class:Writer
WriteBuffer	include/rapidjson/schema.h	/^    bool WriteBuffer(Type type, const void* data, size_t len) {$/;"	f	class:internal::Hasher
WriteDouble	include/rapidjson/writer.h	/^    bool WriteDouble(double d) {$/;"	f	class:Writer
WriteDouble	include/rapidjson/writer.h	/^inline bool Writer<StringBuffer>::WriteDouble(double d) {$/;"	f	class:Writer
WriteEndArray	include/rapidjson/writer.h	/^    bool WriteEndArray()    { os_->Put(']'); return true; }$/;"	f	class:Writer
WriteEndObject	include/rapidjson/writer.h	/^    bool WriteEndObject()   { os_->Put('}'); return true; }$/;"	f	class:Writer
WriteExponent	include/rapidjson/internal/dtoa.h	/^inline char* WriteExponent(int K, char* buffer) {$/;"	f	namespace:internal
WriteFlag	include/rapidjson/writer.h	/^enum WriteFlag {$/;"	g
WriteIndent	include/rapidjson/prettywriter.h	/^    void WriteIndent()  {$/;"	f	class:PrettyWriter
WriteInt	include/rapidjson/writer.h	/^    bool WriteInt(int i) {$/;"	f	class:Writer
WriteInt	include/rapidjson/writer.h	/^inline bool Writer<StringBuffer>::WriteInt(int i) {$/;"	f	class:Writer
WriteInt64	include/rapidjson/writer.h	/^    bool WriteInt64(int64_t i64) {$/;"	f	class:Writer
WriteInt64	include/rapidjson/writer.h	/^inline bool Writer<StringBuffer>::WriteInt64(int64_t i64) {$/;"	f	class:Writer
WriteNull	include/rapidjson/writer.h	/^    bool WriteNull()  {$/;"	f	class:Writer
WriteNumber	include/rapidjson/schema.h	/^    bool WriteNumber(const Number& n) { return WriteBuffer(kNumberType, &n, sizeof(n)); }$/;"	f	class:internal::Hasher
WriteRawValue	include/rapidjson/writer.h	/^    bool WriteRawValue(const Ch* json, size_t length) {$/;"	f	class:Writer
WriteStartArray	include/rapidjson/writer.h	/^    bool WriteStartArray()  { os_->Put('['); return true; }$/;"	f	class:Writer
WriteStartObject	include/rapidjson/writer.h	/^    bool WriteStartObject() { os_->Put('{'); return true; }$/;"	f	class:Writer
WriteString	include/rapidjson/writer.h	/^    bool WriteString(const Ch* str, SizeType length)  {$/;"	f	class:Writer
WriteType	include/rapidjson/schema.h	/^    bool WriteType(Type type) { return WriteBuffer(type, 0, 0); }$/;"	f	class:internal::Hasher
WriteUint	include/rapidjson/writer.h	/^    bool WriteUint(unsigned u) {$/;"	f	class:Writer
WriteUint	include/rapidjson/writer.h	/^inline bool Writer<StringBuffer>::WriteUint(unsigned u) {$/;"	f	class:Writer
WriteUint64	include/rapidjson/writer.h	/^    bool WriteUint64(uint64_t u64) {$/;"	f	class:Writer
WriteUint64	include/rapidjson/writer.h	/^inline bool Writer<StringBuffer>::WriteUint64(uint64_t u) {$/;"	f	class:Writer
Writer	include/rapidjson/writer.h	/^    Writer(OutputStream& os, StackAllocator* stackAllocator = 0, size_t levelDepth = kDefaultLevelDepth) : $/;"	f	class:Writer
Writer	include/rapidjson/writer.h	/^    Writer(StackAllocator* allocator = 0, size_t levelDepth = kDefaultLevelDepth) :$/;"	f	class:Writer
Writer	include/rapidjson/writer.h	/^    Writer(Writer&& rhs) :$/;"	f	class:Writer
Writer	include/rapidjson/writer.h	/^class Writer {$/;"	c
YELLOW	Utilities/logging.h	/^    YELLOW, BLUE, MAGENTA,$/;"	e	enum:COLOR
Yes	include/rapidjson/internal/meta.h	/^    typedef char (&Yes)[1];$/;"	t	struct:internal::IsBaseOfImpl
Z16	include/rapidjson/reader.h	1000;"	d
Z16	include/rapidjson/reader.h	992;"	d
Z16	include/rapidjson/writer.h	381;"	d
Z16	include/rapidjson/writer.h	389;"	d
_CRT_SECURE_NO_DEPRECATE	include/cuda-common/helper_string.h	23;"	d
_ConvertSMVer2Cores	include/cuda-common/helper_cuda.h	/^inline int _ConvertSMVer2Cores(int major, int minor)$/;"	f
_EXCEPTION_H_	include/cuda-common/exception.h	14;"	d
_Float32	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef float _Float32; $/;"	t	file:
_Float32x	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef double _Float32x; $/;"	t	file:
_Float64	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef double _Float64; $/;"	t	file:
_Float64x	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef long double _Float64x; $/;"	t	file:
_MAX_GRID_SIZE_	include/server/brain_defs.h	12;"	d
_MAX_THREADS_PER_BLOCK_	include/server/brain_defs.h	10;"	d
_MSC_INTTYPES_H_	include/rapidjson/msinttypes/inttypes.h	42;"	d
_MSC_STDINT_H_	include/rapidjson/msinttypes/stdint.h	42;"	d
_NV_ANON_NAMESPACE	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	16400;"	d	file:
_NV_ANON_NAMESPACE	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	16404;"	d	file:
_W64	include/rapidjson/msinttypes/stdint.h	106;"	d
_W64	include/rapidjson/msinttypes/stdint.h	108;"	d
__ARGPARSER_H__	dosecalc-preprocess/argparser.h	2;"	d
__BEAM_H__	DoseCalcIO/beam.h	2;"	d
__BINARY_IO_H__	DoseCalcIO/binary_io.h	2;"	d
__BRAIN_DEFS_H__	include/server/brain_defs.h	2;"	d
__CALC_HEADER_H__	DoseCalcIO/calc_header.h	2;"	d
__CONFIGPARSER_H__	Utilities/configparser.h	2;"	d
__CTLUT_H__	DoseCalcIO/ctlut.h	2;"	d
__CUDAFATBINDATASECTION	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.fatbin.c	5;"	d	file:
__CUDAFATBINDATASECTION	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/a_dlink.fatbin.c	5;"	d	file:
__CUDAFATBINSECTION	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.fatbin.c	4;"	d	file:
__CUDAFATBINSECTION	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/a_dlink.fatbin.c	4;"	d	file:
__CUDAMEMFUNCTIONS_H__	dosecalc-preprocess/cudaMemFunctions.cuh	2;"	d	file:
__CUDASIDDON_CUH__	DoseCalcAlgo/cudaSiddon.cuh	2;"	d	file:
__CUDA_INCLUDE_COMPILER_INTERNAL_HEADERS__	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	760;"	d	file:
__CUDA_INCLUDE_COMPILER_INTERNAL_HEADERS__	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.stub.c	6;"	d	file:
__CUDA_TIMING_H__	CudaUtilities/cuda_timing.cuh	2;"	d	file:
__CUDA_UTILITES_DEV_INTRINSICS_H__	CudaUtilities/dev_intrinsics.cuh	2;"	d	file:
__CUDA_UTILITIES_ARRAY_SUM_CUH__	CudaUtilities/array_sum.cuh	2;"	d	file:
__CUDA_UTILITIES_MACROS_H__	CudaUtilities/macros.h	2;"	d
__DEBUG_H__	include/debug.h	2;"	d
__DOSECALCIO_H__	DoseCalcIO/dosecalcio.h	2;"	d
__DOSECALCIO_MACROS_H__	DoseCalcIO/macros.h	2;"	d
__DOSECALC_DEFS_H__	include/dosecalc_defs.h	2;"	d
__DUMMY_DEFS_H__	include/client/dummy_defs.h	2;"	d
__FLUENCE_H__	DoseCalcIO/fluence.h	2;"	d
__FMAPPROCESSING_H__	dosecalc-preprocess/fmapProcessing.hpp	2;"	d
__FMAPS_IO_H__	DoseCalcIO/fmaps_io.h	2;"	d
__GEOMETRY_H__	CudaUtilities/geometry.cuh	2;"	d	file:
__IO_DATA_STRUCT_H__	DoseCalcIO/io_data_structs.h	2;"	d
__IO_HELPERS_H__	DoseCalcIO/io_helpers.h	2;"	d
__JSON_H__	DoseCalcIO/json.h	2;"	d
__KERNEL_H__	DoseCalcIO/kernel.h	2;"	d
__LOGCONFIG_H__	RTClasses/logconfig.h	2;"	d
__LOGGING_H__	Utilities/logging.h	2;"	d
__MAKE_TEX_SURF_CUH__	CudaUtilities/make_tex_surf.cuh	2;"	d	file:
__MANAGE_GPU_H__	CudaUtilities/manage_gpu.cuh	3;"	d	file:
__MATH_H__	Utilities/math.h	2;"	d
__MEMORY_MANAGER_CUH__	CudaUtilities/memory_manager.cuh	2;"	d	file:
__NVBBRAYCONVOLVE_DEVICE_CUH__	dosecalc-beam/nvbbRayConvolve_device.cuh	2;"	d	file:
__NVBBRAYCONVOLVE_DEVICE_CUH__	dosecalc-beamlet/nvbbRayConvolve_device.cuh	2;"	d	file:
__NV_CUBIN_HANDLE_STORAGE__	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.stub.c	4;"	d	file:
__PATHS_H__	DoseCalcIO/paths.h	2;"	d
__PRECOMP_DEBUG_H__	dosecalc-preprocess/debug.h	2;"	d
__PROFILE_H__	include/profile.h	2;"	d
__READ_SPECFILE_H__	DoseCalcIO/spectra.h	2;"	d
__ROI_H__	DoseCalcIO/roi.h	2;"	d
__RTIMAGE_H__	RTClasses/rtimages.h	2;"	d
__RTSTRUCT_H__	RTClasses/rtstruct.h	2;"	d
__SPARSE_IO_H__	DoseCalcIO/sparse_io.h	2;"	d
__SPARSIFY_MANAGER_H__	dosecalc-beamlet/sparsify_manager.h	2;"	d
__SPARSIFY_WORKER_H__	dosecalc-beamlet/sparsify_worker.h	2;"	d
__THREAD_WRAPPER_H__	Utilities/thread.h	2;"	d
__TIMING_H__	Utilities/timing.h	2;"	d
__VECTOR_OPS_H__	CudaUtilities/vector_ops.h	2;"	d
__VERSION_H__	include/version.h	2;"	d
__VOLUME_H__	DoseCalcIO/volume.h	2;"	d
__WQUEUE_H__	Utilities/wqueue.h	2;"	d
__a	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__extension__ unsigned long long __a; $/;"	m	struct:drand48_data	file:
__activemask	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned __activemask() {int volatile ___ = 1;::exit(___);}$/;"	f	file:
__align	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__extension__ long long __align; $/;"	m	union:__anon32	file:
__align	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^int __align; $/;"	m	union:__anon29	file:
__align	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^int __align; $/;"	m	union:__anon30	file:
__align	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^int __align; $/;"	m	union:__anon36	file:
__align	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^long __align; $/;"	m	union:__anon31	file:
__align	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^long __align; $/;"	m	union:__anon33	file:
__align	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^long __align; $/;"	m	union:__anon34	file:
__align	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^long __align; $/;"	m	union:__anon35	file:
__align	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^long __align; $/;"	m	union:pthread_attr_t	file:
__all_sync	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline int __all_sync(unsigned mask, int pred) {int volatile ___ = 1;(void)mask;(void)pred;::exit(___);}$/;"	f	file:
__any_sync	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline int __any_sync(unsigned mask, int pred) {int volatile ___ = 1;(void)mask;(void)pred;::exit(___);}$/;"	f	file:
__ballot_sync	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned __ballot_sync(unsigned mask, int pred) {int volatile ___ = 1;(void)mask;(void)pred;::exit(___);}$/;"	f	file:
__barrier_sync	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline void __barrier_sync(unsigned id) {int volatile ___ = 1;(void)id;::exit(___);}$/;"	f	file:
__barrier_sync_count	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline void __barrier_sync_count(unsigned id, unsigned cnt) {int volatile ___ = 1;(void)id;(void)cnt;::exit(___);}$/;"	f	file:
__blkcnt64_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef long __blkcnt64_t; $/;"	t	file:
__blkcnt_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef long __blkcnt_t; $/;"	t	file:
__blksize_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef long __blksize_t; $/;"	t	file:
__bswap_32	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline unsigned __bswap_32(unsigned __bsx) $/;"	f	file:
__bswap_64	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline __uint64_t __bswap_64(__uint64_t __bsx) $/;"	f	file:
__c	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^unsigned short __c; $/;"	m	struct:drand48_data	file:
__caddr_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef char *__caddr_t; $/;"	t	file:
__call	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static int __call(double __x, double __y) throw() $/;"	f	struct:__iseqsig_type
__call	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static int __call(float __x, float __y) throw() $/;"	f	struct:__iseqsig_type
__clock_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef long __clock_t; $/;"	t	file:
__clockid_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef int __clockid_t; $/;"	t	file:
__compar_d_fn_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef int (*__compar_d_fn_t)(const void *, const void *, void *); $/;"	t	file:
__compar_fn_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef int (*__compar_fn_t)(const void *, const void *); $/;"	t	file:
__count	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^unsigned __count; $/;"	m	struct:__pthread_mutex_s	file:
__ctype_b	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^const unsigned short *__ctype_b; $/;"	m	struct:__locale_struct	file:
__ctype_tolower	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^const int *__ctype_tolower; $/;"	m	struct:__locale_struct	file:
__ctype_toupper	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^const int *__ctype_toupper; $/;"	m	struct:__locale_struct	file:
__cudaOccupancyB2DHelper	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^class __cudaOccupancyB2DHelper { $/;"	c	file:
__cudaOccupancyB2DHelper	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^public: __cudaOccupancyB2DHelper(size_t n_) : n(n_) { } $/;"	f	class:__cudaOccupancyB2DHelper
__cur_writer	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^int __cur_writer; $/;"	m	struct:__pthread_rwlock_arch_t	file:
__cxx11	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^inline namespace __cxx11 __attribute((__abi_tag__("cxx11"))) { }$/;"	f	namespace:__gnu_cxx
__cxx11	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^inline namespace __cxx11 __attribute((__abi_tag__("cxx11"))) { }$/;"	f	namespace:std
__daddr_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef int __daddr_t; $/;"	t	file:
__data	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__pthread_cond_s __data; $/;"	m	union:__anon32	file:
__data	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__pthread_mutex_s __data; $/;"	m	union:__anon31	file:
__data	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__pthread_rwlock_arch_t __data; $/;"	m	union:__anon33	file:
__dev_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef unsigned long __dev_t; $/;"	t	file:
__dp2a_hi	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline int __dp2a_hi(int srcA, int srcB, int c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}$/;"	f	file:
__dp2a_hi	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline int __dp2a_hi(short2 srcA, char4 srcB, int c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}$/;"	f	file:
__dp2a_hi	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned __dp2a_hi(unsigned srcA, unsigned srcB, unsigned c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}$/;"	f	file:
__dp2a_hi	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned __dp2a_hi(ushort2 srcA, uchar4 srcB, unsigned c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}$/;"	f	file:
__dp2a_lo	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline int __dp2a_lo(int srcA, int srcB, int c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}$/;"	f	file:
__dp2a_lo	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline int __dp2a_lo(short2 srcA, char4 srcB, int c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}$/;"	f	file:
__dp2a_lo	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned __dp2a_lo(unsigned srcA, unsigned srcB, unsigned c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}$/;"	f	file:
__dp2a_lo	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned __dp2a_lo(ushort2 srcA, uchar4 srcB, unsigned c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}$/;"	f	file:
__dp4a	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline int __dp4a(char4 srcA, char4 srcB, int c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}$/;"	f	file:
__dp4a	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline int __dp4a(int srcA, int srcB, int c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}$/;"	f	file:
__dp4a	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned __dp4a(uchar4 srcA, uchar4 srcB, unsigned c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}$/;"	f	file:
__dp4a	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned __dp4a(unsigned srcA, unsigned srcB, unsigned c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}$/;"	f	file:
__elision	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^short __spins; short __elision; $/;"	m	struct:__pthread_mutex_s	file:
__fadd_rn	CudaUtilities/dev_intrinsics.cuh	/^inline __device__ float3 __fadd_rn(const float3& a, const float3& b) {$/;"	f
__fatDeviceText	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.fatbin.c	/^static const __fatBinC_Wrapper_t __fatDeviceText __attribute__ ((aligned (8))) __attribute__ ((section (__CUDAFATBINSECTION)))= $/;"	v	file:
__fatDeviceText	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/a_dlink.fatbin.c	/^static const __fatBinC_Wrapper_t __fatDeviceText __attribute__ ((aligned (8))) __attribute__ ((section (__CUDAFATBINSECTION)))= $/;"	v	file:
__fd_mask	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef long __fd_mask; $/;"	t	file:
__fdiv_rn	CudaUtilities/dev_intrinsics.cuh	/^inline __device__ float3 __fdiv_rn(const float3& a, const float3& b) {$/;"	f
__flags	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^unsigned __flags; $/;"	m	struct:__pthread_rwlock_arch_t	file:
__fmaf_rn	CudaUtilities/dev_intrinsics.cuh	/^inline __device__ float3 __fmaf_rn(const float& a, const float3& b, const float3& c) {$/;"	f
__fmaf_rn	CudaUtilities/dev_intrinsics.cuh	/^inline __device__ float3 __fmaf_rn(const float3& a, const float& b, const float3& c) {$/;"	f
__fmaf_rn	CudaUtilities/dev_intrinsics.cuh	/^inline __device__ float3 __fmaf_rn(const float3& a, const float3& b, const float& c) {$/;"	f
__fmaf_rn	CudaUtilities/dev_intrinsics.cuh	/^inline __device__ float3 __fmaf_rn(const float3& a, const float3& b, const float3& c) {$/;"	f
__fmul_rn	CudaUtilities/dev_intrinsics.cuh	/^inline __device__ float2 __fmul_rn(const float2& a, const float2& b) {$/;"	f
__fmul_rn	CudaUtilities/dev_intrinsics.cuh	/^inline __device__ float3 __fmul_rn(const float3& a, const float& b) {$/;"	f
__fmul_rn	CudaUtilities/dev_intrinsics.cuh	/^inline __device__ float3 __fmul_rn(const float3& a, const float3& b) {$/;"	f
__fns	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned __fns(unsigned mask, unsigned base, int offset) {int volatile ___ = 1;(void)mask;(void)base;(void)offset;::exit(___);}$/;"	f	file:
__frcp_rn	CudaUtilities/dev_intrinsics.cuh	/^inline __device__ float3 __frcp_rn(const float3& a) {$/;"	f
__fsblkcnt64_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef unsigned long __fsblkcnt64_t; $/;"	t	file:
__fsblkcnt_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef unsigned long __fsblkcnt_t; $/;"	t	file:
__fsfilcnt64_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef unsigned long __fsfilcnt64_t; $/;"	t	file:
__fsfilcnt_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef unsigned long __fsfilcnt_t; $/;"	t	file:
__fsid_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef struct { int __val[2]; } __fsid_t; $/;"	t	typeref:struct:__anon16	file:
__fsub_rn	CudaUtilities/dev_intrinsics.cuh	/^inline __device__ float3 __fsub_rn(const float3& a, const float3& b) {$/;"	f
__fsword_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef long __fsword_t; $/;"	t	file:
__funnelshift_l	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned __funnelshift_l(unsigned lo, unsigned hi, unsigned shift) {int volatile ___ = 1;(void)lo;(void)hi;(void)shift;::exit(___);}$/;"	f	file:
__funnelshift_lc	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned __funnelshift_lc(unsigned lo, unsigned hi, unsigned shift) {int volatile ___ = 1;(void)lo;(void)hi;(void)shift;::exit(___);}$/;"	f	file:
__funnelshift_r	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned __funnelshift_r(unsigned lo, unsigned hi, unsigned shift) {int volatile ___ = 1;(void)lo;(void)hi;(void)shift;::exit(___);}$/;"	f	file:
__funnelshift_rc	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned __funnelshift_rc(unsigned lo, unsigned hi, unsigned shift) {int volatile ___ = 1;(void)lo;(void)hi;(void)shift;::exit(___);}$/;"	f	file:
__g1_orig_size	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^unsigned __g1_orig_size; $/;"	m	struct:__pthread_cond_s	file:
__g1_start	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__extension__ unsigned long long __g1_start; $/;"	m	union:__pthread_cond_s::__anon27	file:
__g1_start32	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^} __g1_start32; $/;"	m	union:__pthread_cond_s::__anon27	typeref:struct:__pthread_cond_s::__anon27::__anon28	file:
__g_refs	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^unsigned __g_refs[2]; $/;"	m	struct:__pthread_cond_s	file:
__g_signals	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^unsigned __g_signals[2]; $/;"	m	struct:__pthread_cond_s	file:
__g_size	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^unsigned __g_size[2]; $/;"	m	struct:__pthread_cond_s	file:
__getLastCudaError	include/cuda-common/helper_cuda.h	/^inline void __getLastCudaError(const char *errorMessage, const char *file, const int line)$/;"	f
__gid_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef unsigned __gid_t; $/;"	t	file:
__gnu_cxx	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^namespace __gnu_cxx __attribute((__visibility__("default"))) { $/;"	f
__gnu_cxx	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^namespace __gnu_cxx { $/;"	n	file:
__high	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^unsigned __high; $/;"	m	struct:__pthread_cond_s::__anon25::__anon26	file:
__high	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^unsigned __high; $/;"	m	struct:__pthread_cond_s::__anon27::__anon28	file:
__id_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef unsigned __id_t; $/;"	t	file:
__init	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^unsigned short __init; $/;"	m	struct:drand48_data	file:
__init__	extern/python/fmaps.py	/^    def __init__(self):$/;"	m	class:Fmaps
__init__	extern/python/fmaps.py	/^    def __init__(self, wts, gantry=0, couch=0, coll=0, iso=(0,0,0), sad=100, beamlet_size=(0.5, 0.5), gantry_deg=None, couch_deg=None, coll_deg=None):$/;"	m	class:Beam
__init__	extern/python/materials.py	/^    def __init__(self, label='', density=0.0, matid=0):$/;"	m	class:G4Material
__init__	extern/python/volume.py	/^    def __init__(self, arr, start=(0,0,0), voxelsize=(0.1, 0.1, 0.1)):$/;"	m	class:Volume
__ino64_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef unsigned long __ino64_t; $/;"	t	file:
__ino_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef unsigned long __ino_t; $/;"	t	file:
__int16_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef signed short __int16_t; $/;"	t	file:
__int32_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef signed int __int32_t; $/;"	t	file:
__int64_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef signed long __int64_t; $/;"	t	file:
__int8_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef signed char __int8_t; $/;"	t	file:
__intmax_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef long __intmax_t; $/;"	t	file:
__intptr_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef long __intptr_t; $/;"	t	file:
__isGlobal	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned __isGlobal(const void *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__iseqsig_type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __iseqsig_type< double>  { $/;"	s	file:
__iseqsig_type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __iseqsig_type< float>  { $/;"	s	file:
__iseqsig_type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __iseqsig_type< long double>  { $/;"	s	file:
__key_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef int __key_t; $/;"	t	file:
__kind	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^int __kind; $/;"	m	struct:__pthread_mutex_s	file:
__ldca	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline char __ldca(const char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldca	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline char2 __ldca(const char2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldca	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline char4 __ldca(const char4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldca	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline double __ldca(const double *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldca	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline double2 __ldca(const double2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldca	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline float __ldca(const float *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldca	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline float2 __ldca(const float2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldca	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline float4 __ldca(const float4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldca	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline int __ldca(const int *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldca	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline int2 __ldca(const int2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldca	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline int4 __ldca(const int4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldca	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline long __ldca(const long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldca	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline long long __ldca(const long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldca	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline longlong2 __ldca(const longlong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldca	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline short __ldca(const short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldca	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline short2 __ldca(const short2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldca	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline short4 __ldca(const short4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldca	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline signed char __ldca(const signed char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldca	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline uchar2 __ldca(const uchar2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldca	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline uchar4 __ldca(const uchar4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldca	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline uint2 __ldca(const uint2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldca	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline uint4 __ldca(const uint4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldca	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline ulonglong2 __ldca(const ulonglong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldca	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned __ldca(const unsigned *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldca	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned char __ldca(const unsigned char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldca	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned long __ldca(const unsigned long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldca	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned long long __ldca(const unsigned long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldca	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned short __ldca(const unsigned short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldca	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline ushort2 __ldca(const ushort2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldca	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline ushort4 __ldca(const ushort4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldcg	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline char __ldcg(const char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldcg	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline char2 __ldcg(const char2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldcg	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline char4 __ldcg(const char4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldcg	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline double __ldcg(const double *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldcg	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline double2 __ldcg(const double2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldcg	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline float __ldcg(const float *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldcg	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline float2 __ldcg(const float2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldcg	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline float4 __ldcg(const float4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldcg	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline int __ldcg(const int *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldcg	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline int2 __ldcg(const int2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldcg	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline int4 __ldcg(const int4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldcg	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline long __ldcg(const long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldcg	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline long long __ldcg(const long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldcg	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline longlong2 __ldcg(const longlong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldcg	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline short __ldcg(const short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldcg	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline short2 __ldcg(const short2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldcg	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline short4 __ldcg(const short4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldcg	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline signed char __ldcg(const signed char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldcg	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline uchar2 __ldcg(const uchar2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldcg	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline uchar4 __ldcg(const uchar4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldcg	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline uint2 __ldcg(const uint2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldcg	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline uint4 __ldcg(const uint4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldcg	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline ulonglong2 __ldcg(const ulonglong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldcg	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned __ldcg(const unsigned *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldcg	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned char __ldcg(const unsigned char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldcg	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned long __ldcg(const unsigned long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldcg	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned long long __ldcg(const unsigned long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldcg	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned short __ldcg(const unsigned short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldcg	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline ushort2 __ldcg(const ushort2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldcg	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline ushort4 __ldcg(const ushort4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldcs	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline char __ldcs(const char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldcs	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline char2 __ldcs(const char2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldcs	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline char4 __ldcs(const char4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldcs	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline double __ldcs(const double *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldcs	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline double2 __ldcs(const double2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldcs	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline float __ldcs(const float *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldcs	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline float2 __ldcs(const float2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldcs	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline float4 __ldcs(const float4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldcs	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline int __ldcs(const int *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldcs	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline int2 __ldcs(const int2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldcs	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline int4 __ldcs(const int4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldcs	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline long __ldcs(const long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldcs	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline long long __ldcs(const long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldcs	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline longlong2 __ldcs(const longlong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldcs	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline short __ldcs(const short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldcs	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline short2 __ldcs(const short2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldcs	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline short4 __ldcs(const short4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldcs	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline signed char __ldcs(const signed char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldcs	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline uchar2 __ldcs(const uchar2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldcs	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline uchar4 __ldcs(const uchar4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldcs	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline uint2 __ldcs(const uint2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldcs	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline uint4 __ldcs(const uint4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldcs	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline ulonglong2 __ldcs(const ulonglong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldcs	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned __ldcs(const unsigned *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldcs	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned char __ldcs(const unsigned char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldcs	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned long __ldcs(const unsigned long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldcs	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned long long __ldcs(const unsigned long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldcs	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned short __ldcs(const unsigned short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldcs	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline ushort2 __ldcs(const ushort2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldcs	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline ushort4 __ldcs(const ushort4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldg	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline char __ldg(const char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldg	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline char2 __ldg(const char2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldg	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline char4 __ldg(const char4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldg	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline double __ldg(const double *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldg	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline double2 __ldg(const double2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldg	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline float __ldg(const float *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldg	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline float2 __ldg(const float2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldg	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline float4 __ldg(const float4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldg	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline int __ldg(const int *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldg	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline int2 __ldg(const int2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldg	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline int4 __ldg(const int4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldg	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline long __ldg(const long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldg	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline long long __ldg(const long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldg	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline longlong2 __ldg(const longlong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldg	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline short __ldg(const short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldg	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline short2 __ldg(const short2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldg	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline short4 __ldg(const short4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldg	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline signed char __ldg(const signed char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldg	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline uchar2 __ldg(const uchar2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldg	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline uchar4 __ldg(const uchar4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldg	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline uint2 __ldg(const uint2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldg	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline uint4 __ldg(const uint4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldg	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline ulonglong2 __ldg(const ulonglong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldg	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned __ldg(const unsigned *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldg	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned char __ldg(const unsigned char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldg	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned long __ldg(const unsigned long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldg	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned long long __ldg(const unsigned long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldg	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned short __ldg(const unsigned short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldg	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline ushort2 __ldg(const ushort2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__ldg	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline ushort4 __ldg(const ushort4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}$/;"	f	file:
__list	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__pthread_list_t __list; $/;"	m	struct:__pthread_mutex_s	file:
__locale_struct	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^struct __locale_struct { $/;"	s	file:
__locale_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef __locale_struct *__locale_t; $/;"	t	file:
__locales	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^struct __locale_data *__locales[13]; $/;"	m	struct:__locale_struct	typeref:struct:__locale_struct::__locale_data	file:
__lock	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^int __lock; $/;"	m	struct:__pthread_mutex_s	file:
__loff_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef __off64_t __loff_t; $/;"	t	file:
__low	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^unsigned __low; $/;"	m	struct:__pthread_cond_s::__anon25::__anon26	file:
__low	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^unsigned __low; $/;"	m	struct:__pthread_cond_s::__anon27::__anon28	file:
__match_all_sync	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned __match_all_sync(unsigned mask, double value, int *pred) {int volatile ___ = 1;(void)mask;(void)value;(void)pred;::exit(___);}$/;"	f	file:
__match_all_sync	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned __match_all_sync(unsigned mask, float value, int *pred) {int volatile ___ = 1;(void)mask;(void)value;(void)pred;::exit(___);}$/;"	f	file:
__match_all_sync	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned __match_all_sync(unsigned mask, int value, int *pred) {int volatile ___ = 1;(void)mask;(void)value;(void)pred;::exit(___);}$/;"	f	file:
__match_all_sync	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned __match_all_sync(unsigned mask, long long value, int *pred) {int volatile ___ = 1;(void)mask;(void)value;(void)pred;::exit(___);}$/;"	f	file:
__match_all_sync	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned __match_all_sync(unsigned mask, long value, int *pred) {int volatile ___ = 1;(void)mask;(void)value;(void)pred;::exit(___);}$/;"	f	file:
__match_all_sync	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned __match_all_sync(unsigned mask, unsigned long long value, int *pred) {int volatile ___ = 1;(void)mask;(void)value;(void)pred;::exit(___);}$/;"	f	file:
__match_all_sync	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned __match_all_sync(unsigned mask, unsigned long value, int *pred) {int volatile ___ = 1;(void)mask;(void)value;(void)pred;::exit(___);}$/;"	f	file:
__match_all_sync	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned __match_all_sync(unsigned mask, unsigned value, int *pred) {int volatile ___ = 1;(void)mask;(void)value;(void)pred;::exit(___);}$/;"	f	file:
__match_any_sync	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned __match_any_sync(unsigned mask, double value) {int volatile ___ = 1;(void)mask;(void)value;::exit(___);}$/;"	f	file:
__match_any_sync	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned __match_any_sync(unsigned mask, float value) {int volatile ___ = 1;(void)mask;(void)value;::exit(___);}$/;"	f	file:
__match_any_sync	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned __match_any_sync(unsigned mask, int value) {int volatile ___ = 1;(void)mask;(void)value;::exit(___);}$/;"	f	file:
__match_any_sync	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned __match_any_sync(unsigned mask, long long value) {int volatile ___ = 1;(void)mask;(void)value;::exit(___);}$/;"	f	file:
__match_any_sync	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned __match_any_sync(unsigned mask, long value) {int volatile ___ = 1;(void)mask;(void)value;::exit(___);}$/;"	f	file:
__match_any_sync	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned __match_any_sync(unsigned mask, unsigned long long value) {int volatile ___ = 1;(void)mask;(void)value;::exit(___);}$/;"	f	file:
__match_any_sync	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned __match_any_sync(unsigned mask, unsigned long value) {int volatile ___ = 1;(void)mask;(void)value;::exit(___);}$/;"	f	file:
__match_any_sync	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned __match_any_sync(unsigned mask, unsigned value) {int volatile ___ = 1;(void)mask;(void)value;::exit(___);}$/;"	f	file:
__mode_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef unsigned __mode_t; $/;"	t	file:
__names	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^const char *__names[13]; $/;"	m	struct:__locale_struct	file:
__nanosleep	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline void __nanosleep(unsigned ns) {int volatile ___ = 1;(void)ns;::exit(___);}$/;"	f	file:
__next	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__pthread_internal_list *__next; $/;"	m	struct:__pthread_internal_list	file:
__nlink_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef unsigned long __nlink_t; $/;"	t	file:
__nusers	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^unsigned __nusers; $/;"	m	struct:__pthread_mutex_s	file:
__nv_cudaEntityRegisterCallback	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.stub.c	/^static void __nv_cudaEntityRegisterCallback(void **__T0){__nv_dummy_param_ref(__T0);__nv_save_fatbinhandle_for_managed_rt(__T0);}$/;"	f	file:
__nv_fatbinhandle_for_managed_rt	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static char __nv_inited_managed_rt = 0; static void **__nv_fatbinhandle_for_managed_rt; static void __nv_save_fatbinhandle_for_managed_rt(void **in){__nv_fatbinhandle_for_managed_rt = in;} static char __nv_init_managed_rt_with_module(void **); static inline void __nv_init_managed_rt(void) { __nv_inited_managed_rt = (__nv_inited_managed_rt ? __nv_inited_managed_rt                 : __nv_init_managed_rt_with_module(__nv_fatbinhandle_for_managed_rt));}$/;"	v	file:
__nv_init_managed_rt	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static char __nv_inited_managed_rt = 0; static void **__nv_fatbinhandle_for_managed_rt; static void __nv_save_fatbinhandle_for_managed_rt(void **in){__nv_fatbinhandle_for_managed_rt = in;} static char __nv_init_managed_rt_with_module(void **); static inline void __nv_init_managed_rt(void) { __nv_inited_managed_rt = (__nv_inited_managed_rt ? __nv_inited_managed_rt                 : __nv_init_managed_rt_with_module(__nv_fatbinhandle_for_managed_rt));}$/;"	f	file:
__nv_inited_managed_rt	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static char __nv_inited_managed_rt = 0; static void **__nv_fatbinhandle_for_managed_rt; static void __nv_save_fatbinhandle_for_managed_rt(void **in){__nv_fatbinhandle_for_managed_rt = in;} static char __nv_init_managed_rt_with_module(void **); static inline void __nv_init_managed_rt(void) { __nv_inited_managed_rt = (__nv_inited_managed_rt ? __nv_inited_managed_rt                 : __nv_init_managed_rt_with_module(__nv_fatbinhandle_for_managed_rt));}$/;"	v	file:
__nv_is_extended_device_lambda_closure_type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	17;"	d	file:
__nv_is_extended_host_device_lambda_closure_type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	18;"	d	file:
__nv_isurf_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template< class T> struct __nv_isurf_trait { }; $/;"	s	file:
__nv_isurf_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< char1>  { typedef void type; }; $/;"	s	file:
__nv_isurf_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< char2>  { typedef void type; }; $/;"	s	file:
__nv_isurf_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< char4>  { typedef void type; }; $/;"	s	file:
__nv_isurf_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< char>  { typedef void type; }; $/;"	s	file:
__nv_isurf_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< float1>  { typedef void type; }; $/;"	s	file:
__nv_isurf_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< float2>  { typedef void type; }; $/;"	s	file:
__nv_isurf_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< float4>  { typedef void type; }; $/;"	s	file:
__nv_isurf_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< float>  { typedef void type; }; $/;"	s	file:
__nv_isurf_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< int1>  { typedef void type; }; $/;"	s	file:
__nv_isurf_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< int2>  { typedef void type; }; $/;"	s	file:
__nv_isurf_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< int4>  { typedef void type; }; $/;"	s	file:
__nv_isurf_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< int>  { typedef void type; }; $/;"	s	file:
__nv_isurf_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< long long>  { typedef void type; }; $/;"	s	file:
__nv_isurf_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< longlong1>  { typedef void type; }; $/;"	s	file:
__nv_isurf_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< longlong2>  { typedef void type; }; $/;"	s	file:
__nv_isurf_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< short1>  { typedef void type; }; $/;"	s	file:
__nv_isurf_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< short2>  { typedef void type; }; $/;"	s	file:
__nv_isurf_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< short4>  { typedef void type; }; $/;"	s	file:
__nv_isurf_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< short>  { typedef void type; }; $/;"	s	file:
__nv_isurf_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< signed char>  { typedef void type; }; $/;"	s	file:
__nv_isurf_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< uchar1>  { typedef void type; }; $/;"	s	file:
__nv_isurf_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< uchar2>  { typedef void type; }; $/;"	s	file:
__nv_isurf_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< uchar4>  { typedef void type; }; $/;"	s	file:
__nv_isurf_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< uint1>  { typedef void type; }; $/;"	s	file:
__nv_isurf_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< uint2>  { typedef void type; }; $/;"	s	file:
__nv_isurf_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< uint4>  { typedef void type; }; $/;"	s	file:
__nv_isurf_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< ulonglong1>  { typedef void type; }; $/;"	s	file:
__nv_isurf_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< ulonglong2>  { typedef void type; }; $/;"	s	file:
__nv_isurf_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< unsigned char>  { typedef void type; }; $/;"	s	file:
__nv_isurf_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< unsigned long long>  { typedef void type; }; $/;"	s	file:
__nv_isurf_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< unsigned short>  { typedef void type; }; $/;"	s	file:
__nv_isurf_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< unsigned>  { typedef void type; }; $/;"	s	file:
__nv_isurf_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< ushort1>  { typedef void type; }; $/;"	s	file:
__nv_isurf_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< ushort2>  { typedef void type; }; $/;"	s	file:
__nv_isurf_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< ushort4>  { typedef void type; }; $/;"	s	file:
__nv_itex_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template< class T> struct __nv_itex_trait { }; $/;"	s	file:
__nv_itex_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_itex_trait< char1>  { typedef void type; }; $/;"	s	file:
__nv_itex_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_itex_trait< char2>  { typedef void type; }; $/;"	s	file:
__nv_itex_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_itex_trait< char4>  { typedef void type; }; $/;"	s	file:
__nv_itex_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_itex_trait< char>  { typedef void type; }; $/;"	s	file:
__nv_itex_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_itex_trait< float1>  { typedef void type; }; $/;"	s	file:
__nv_itex_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_itex_trait< float2>  { typedef void type; }; $/;"	s	file:
__nv_itex_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_itex_trait< float4>  { typedef void type; }; $/;"	s	file:
__nv_itex_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_itex_trait< float>  { typedef void type; }; $/;"	s	file:
__nv_itex_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_itex_trait< int1>  { typedef void type; }; $/;"	s	file:
__nv_itex_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_itex_trait< int2>  { typedef void type; }; $/;"	s	file:
__nv_itex_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_itex_trait< int4>  { typedef void type; }; $/;"	s	file:
__nv_itex_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_itex_trait< int>  { typedef void type; }; $/;"	s	file:
__nv_itex_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_itex_trait< short1>  { typedef void type; }; $/;"	s	file:
__nv_itex_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_itex_trait< short2>  { typedef void type; }; $/;"	s	file:
__nv_itex_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_itex_trait< short4>  { typedef void type; }; $/;"	s	file:
__nv_itex_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_itex_trait< short>  { typedef void type; }; $/;"	s	file:
__nv_itex_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_itex_trait< signed char>  { typedef void type; }; $/;"	s	file:
__nv_itex_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_itex_trait< uchar1>  { typedef void type; }; $/;"	s	file:
__nv_itex_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_itex_trait< uchar2>  { typedef void type; }; $/;"	s	file:
__nv_itex_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_itex_trait< uchar4>  { typedef void type; }; $/;"	s	file:
__nv_itex_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_itex_trait< uint1>  { typedef void type; }; $/;"	s	file:
__nv_itex_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_itex_trait< uint2>  { typedef void type; }; $/;"	s	file:
__nv_itex_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_itex_trait< uint4>  { typedef void type; }; $/;"	s	file:
__nv_itex_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_itex_trait< unsigned char>  { typedef void type; }; $/;"	s	file:
__nv_itex_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_itex_trait< unsigned short>  { typedef void type; }; $/;"	s	file:
__nv_itex_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_itex_trait< unsigned>  { typedef void type; }; $/;"	s	file:
__nv_itex_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_itex_trait< ushort1>  { typedef void type; }; $/;"	s	file:
__nv_itex_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_itex_trait< ushort2>  { typedef void type; }; $/;"	s	file:
__nv_itex_trait	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_itex_trait< ushort4>  { typedef void type; }; $/;"	s	file:
__nv_save_fatbinhandle_for_managed_rt	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static char __nv_inited_managed_rt = 0; static void **__nv_fatbinhandle_for_managed_rt; static void __nv_save_fatbinhandle_for_managed_rt(void **in){__nv_fatbinhandle_for_managed_rt = in;} static char __nv_init_managed_rt_with_module(void **); static inline void __nv_init_managed_rt(void) { __nv_inited_managed_rt = (__nv_inited_managed_rt ? __nv_inited_managed_rt                 : __nv_init_managed_rt_with_module(__nv_fatbinhandle_for_managed_rt));}$/;"	f	file:
__nv_tex2dgather_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^struct __nv_tex2dgather_ret { }; $/;"	s	file:
__nv_tex2dgather_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< char1>  { typedef char4 type; }; $/;"	s	file:
__nv_tex2dgather_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< char2>  { typedef char4 type; }; $/;"	s	file:
__nv_tex2dgather_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< char3>  { typedef char4 type; }; $/;"	s	file:
__nv_tex2dgather_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< char4>  { typedef char4 type; }; $/;"	s	file:
__nv_tex2dgather_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< char>  { typedef char4 type; }; $/;"	s	file:
__nv_tex2dgather_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< float1>  { typedef float4 type; }; $/;"	s	file:
__nv_tex2dgather_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< float2>  { typedef float4 type; }; $/;"	s	file:
__nv_tex2dgather_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< float3>  { typedef float4 type; }; $/;"	s	file:
__nv_tex2dgather_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< float4>  { typedef float4 type; }; $/;"	s	file:
__nv_tex2dgather_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< float>  { typedef float4 type; }; $/;"	s	file:
__nv_tex2dgather_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< int1>  { typedef int4 type; }; $/;"	s	file:
__nv_tex2dgather_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< int2>  { typedef int4 type; }; $/;"	s	file:
__nv_tex2dgather_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< int3>  { typedef int4 type; }; $/;"	s	file:
__nv_tex2dgather_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< int4>  { typedef int4 type; }; $/;"	s	file:
__nv_tex2dgather_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< int>  { typedef int4 type; }; $/;"	s	file:
__nv_tex2dgather_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< short1>  { typedef short4 type; }; $/;"	s	file:
__nv_tex2dgather_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< short2>  { typedef short4 type; }; $/;"	s	file:
__nv_tex2dgather_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< short3>  { typedef short4 type; }; $/;"	s	file:
__nv_tex2dgather_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< short4>  { typedef short4 type; }; $/;"	s	file:
__nv_tex2dgather_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< short>  { typedef short4 type; }; $/;"	s	file:
__nv_tex2dgather_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< signed char>  { typedef char4 type; }; $/;"	s	file:
__nv_tex2dgather_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< uchar1>  { typedef uchar4 type; }; $/;"	s	file:
__nv_tex2dgather_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< uchar2>  { typedef uchar4 type; }; $/;"	s	file:
__nv_tex2dgather_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< uchar3>  { typedef uchar4 type; }; $/;"	s	file:
__nv_tex2dgather_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< uchar4>  { typedef uchar4 type; }; $/;"	s	file:
__nv_tex2dgather_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< uint1>  { typedef uint4 type; }; $/;"	s	file:
__nv_tex2dgather_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< uint2>  { typedef uint4 type; }; $/;"	s	file:
__nv_tex2dgather_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< uint3>  { typedef uint4 type; }; $/;"	s	file:
__nv_tex2dgather_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< uint4>  { typedef uint4 type; }; $/;"	s	file:
__nv_tex2dgather_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< unsigned char>  { typedef uchar4 type; }; $/;"	s	file:
__nv_tex2dgather_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< unsigned short>  { typedef ushort4 type; }; $/;"	s	file:
__nv_tex2dgather_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< unsigned>  { typedef uint4 type; }; $/;"	s	file:
__nv_tex2dgather_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< ushort1>  { typedef ushort4 type; }; $/;"	s	file:
__nv_tex2dgather_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< ushort2>  { typedef ushort4 type; }; $/;"	s	file:
__nv_tex2dgather_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< ushort3>  { typedef ushort4 type; }; $/;"	s	file:
__nv_tex2dgather_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< ushort4>  { typedef ushort4 type; }; $/;"	s	file:
__nv_tex2dgather_rmnf_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template< class T> struct __nv_tex2dgather_rmnf_ret { }; $/;"	s	file:
__nv_tex2dgather_rmnf_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_rmnf_ret< char1>  { typedef float4 type; }; $/;"	s	file:
__nv_tex2dgather_rmnf_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_rmnf_ret< char2>  { typedef float4 type; }; $/;"	s	file:
__nv_tex2dgather_rmnf_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_rmnf_ret< char3>  { typedef float4 type; }; $/;"	s	file:
__nv_tex2dgather_rmnf_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_rmnf_ret< char4>  { typedef float4 type; }; $/;"	s	file:
__nv_tex2dgather_rmnf_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_rmnf_ret< char>  { typedef float4 type; }; $/;"	s	file:
__nv_tex2dgather_rmnf_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_rmnf_ret< short1>  { typedef float4 type; }; $/;"	s	file:
__nv_tex2dgather_rmnf_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_rmnf_ret< short2>  { typedef float4 type; }; $/;"	s	file:
__nv_tex2dgather_rmnf_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_rmnf_ret< short3>  { typedef float4 type; }; $/;"	s	file:
__nv_tex2dgather_rmnf_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_rmnf_ret< short4>  { typedef float4 type; }; $/;"	s	file:
__nv_tex2dgather_rmnf_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_rmnf_ret< signed char>  { typedef float4 type; }; $/;"	s	file:
__nv_tex2dgather_rmnf_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_rmnf_ret< signed short>  { typedef float4 type; }; $/;"	s	file:
__nv_tex2dgather_rmnf_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_rmnf_ret< uchar1>  { typedef float4 type; }; $/;"	s	file:
__nv_tex2dgather_rmnf_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_rmnf_ret< uchar2>  { typedef float4 type; }; $/;"	s	file:
__nv_tex2dgather_rmnf_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_rmnf_ret< uchar3>  { typedef float4 type; }; $/;"	s	file:
__nv_tex2dgather_rmnf_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_rmnf_ret< uchar4>  { typedef float4 type; }; $/;"	s	file:
__nv_tex2dgather_rmnf_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_rmnf_ret< unsigned char>  { typedef float4 type; }; $/;"	s	file:
__nv_tex2dgather_rmnf_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_rmnf_ret< unsigned short>  { typedef float4 type; }; $/;"	s	file:
__nv_tex2dgather_rmnf_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_rmnf_ret< ushort1>  { typedef float4 type; }; $/;"	s	file:
__nv_tex2dgather_rmnf_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_rmnf_ret< ushort2>  { typedef float4 type; }; $/;"	s	file:
__nv_tex2dgather_rmnf_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_rmnf_ret< ushort3>  { typedef float4 type; }; $/;"	s	file:
__nv_tex2dgather_rmnf_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_rmnf_ret< ushort4>  { typedef float4 type; }; $/;"	s	file:
__nv_tex_rmet_cast	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template< class T> struct __nv_tex_rmet_cast { typedef T *type; }; $/;"	s	file:
__nv_tex_rmet_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^struct __nv_tex_rmet_ret { }; $/;"	s	file:
__nv_tex_rmet_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmet_ret< char1>  { typedef char1 type; }; $/;"	s	file:
__nv_tex_rmet_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmet_ret< char2>  { typedef char2 type; }; $/;"	s	file:
__nv_tex_rmet_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmet_ret< char4>  { typedef char4 type; }; $/;"	s	file:
__nv_tex_rmet_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmet_ret< char>  { typedef char type; }; $/;"	s	file:
__nv_tex_rmet_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmet_ret< float1>  { typedef float1 type; }; $/;"	s	file:
__nv_tex_rmet_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmet_ret< float2>  { typedef float2 type; }; $/;"	s	file:
__nv_tex_rmet_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmet_ret< float4>  { typedef float4 type; }; $/;"	s	file:
__nv_tex_rmet_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmet_ret< float>  { typedef float type; }; $/;"	s	file:
__nv_tex_rmet_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmet_ret< int1>  { typedef int1 type; }; $/;"	s	file:
__nv_tex_rmet_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmet_ret< int2>  { typedef int2 type; }; $/;"	s	file:
__nv_tex_rmet_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmet_ret< int4>  { typedef int4 type; }; $/;"	s	file:
__nv_tex_rmet_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmet_ret< int>  { typedef int type; }; $/;"	s	file:
__nv_tex_rmet_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmet_ret< short1>  { typedef short1 type; }; $/;"	s	file:
__nv_tex_rmet_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmet_ret< short2>  { typedef short2 type; }; $/;"	s	file:
__nv_tex_rmet_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmet_ret< short4>  { typedef short4 type; }; $/;"	s	file:
__nv_tex_rmet_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmet_ret< short>  { typedef short type; }; $/;"	s	file:
__nv_tex_rmet_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmet_ret< signed char>  { typedef signed char type; }; $/;"	s	file:
__nv_tex_rmet_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmet_ret< uchar1>  { typedef uchar1 type; }; $/;"	s	file:
__nv_tex_rmet_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmet_ret< uchar2>  { typedef uchar2 type; }; $/;"	s	file:
__nv_tex_rmet_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmet_ret< uchar4>  { typedef uchar4 type; }; $/;"	s	file:
__nv_tex_rmet_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmet_ret< uint1>  { typedef uint1 type; }; $/;"	s	file:
__nv_tex_rmet_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmet_ret< uint2>  { typedef uint2 type; }; $/;"	s	file:
__nv_tex_rmet_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmet_ret< uint4>  { typedef uint4 type; }; $/;"	s	file:
__nv_tex_rmet_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmet_ret< unsigned char>  { typedef unsigned char type; }; $/;"	s	file:
__nv_tex_rmet_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmet_ret< unsigned short>  { typedef unsigned short type; }; $/;"	s	file:
__nv_tex_rmet_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmet_ret< unsigned>  { typedef unsigned type; }; $/;"	s	file:
__nv_tex_rmet_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmet_ret< ushort1>  { typedef ushort1 type; }; $/;"	s	file:
__nv_tex_rmet_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmet_ret< ushort2>  { typedef ushort2 type; }; $/;"	s	file:
__nv_tex_rmet_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmet_ret< ushort4>  { typedef ushort4 type; }; $/;"	s	file:
__nv_tex_rmnf_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^struct __nv_tex_rmnf_ret { }; $/;"	s	file:
__nv_tex_rmnf_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmnf_ret< char1>  { typedef float1 type; }; $/;"	s	file:
__nv_tex_rmnf_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmnf_ret< char2>  { typedef float2 type; }; $/;"	s	file:
__nv_tex_rmnf_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmnf_ret< char4>  { typedef float4 type; }; $/;"	s	file:
__nv_tex_rmnf_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmnf_ret< char>  { typedef float type; }; $/;"	s	file:
__nv_tex_rmnf_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmnf_ret< short1>  { typedef float1 type; }; $/;"	s	file:
__nv_tex_rmnf_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmnf_ret< short2>  { typedef float2 type; }; $/;"	s	file:
__nv_tex_rmnf_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmnf_ret< short4>  { typedef float4 type; }; $/;"	s	file:
__nv_tex_rmnf_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmnf_ret< short>  { typedef float type; }; $/;"	s	file:
__nv_tex_rmnf_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmnf_ret< signed char>  { typedef float type; }; $/;"	s	file:
__nv_tex_rmnf_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmnf_ret< uchar1>  { typedef float1 type; }; $/;"	s	file:
__nv_tex_rmnf_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmnf_ret< uchar2>  { typedef float2 type; }; $/;"	s	file:
__nv_tex_rmnf_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmnf_ret< uchar4>  { typedef float4 type; }; $/;"	s	file:
__nv_tex_rmnf_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmnf_ret< unsigned char>  { typedef float type; }; $/;"	s	file:
__nv_tex_rmnf_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmnf_ret< unsigned short>  { typedef float type; }; $/;"	s	file:
__nv_tex_rmnf_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmnf_ret< ushort1>  { typedef float1 type; }; $/;"	s	file:
__nv_tex_rmnf_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmnf_ret< ushort2>  { typedef float2 type; }; $/;"	s	file:
__nv_tex_rmnf_ret	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmnf_ret< ushort4>  { typedef float4 type; }; $/;"	s	file:
__off64_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef long __off64_t; $/;"	t	file:
__off_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef long __off_t; $/;"	t	file:
__old_x	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^unsigned short __old_x[3]; $/;"	m	struct:drand48_data	file:
__owner	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^int __owner; $/;"	m	struct:__pthread_mutex_s	file:
__pad1	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^unsigned char __pad1[7]; $/;"	m	struct:__pthread_rwlock_arch_t	file:
__pad2	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^unsigned long __pad2; $/;"	m	struct:__pthread_rwlock_arch_t	file:
__pad3	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^unsigned __pad3; $/;"	m	struct:__pthread_rwlock_arch_t	file:
__pad4	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^unsigned __pad4; $/;"	m	struct:__pthread_rwlock_arch_t	file:
__pid_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef int __pid_t; $/;"	t	file:
__prev	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__pthread_internal_list *__prev; $/;"	m	struct:__pthread_internal_list	file:
__pthread_cond_s	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^struct __pthread_cond_s { $/;"	s	file:
__pthread_internal_list	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^struct __pthread_internal_list { $/;"	s	file:
__pthread_list_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^} __pthread_list_t; $/;"	t	typeref:struct:__pthread_internal_list	file:
__pthread_mutex_s	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^struct __pthread_mutex_s { $/;"	s	file:
__pthread_rwlock_arch_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^struct __pthread_rwlock_arch_t { $/;"	s	file:
__quad_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef long __quad_t; $/;"	t	file:
__readers	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^unsigned __readers; $/;"	m	struct:__pthread_rwlock_arch_t	file:
__repr__	extern/python/materials.py	/^    def __repr__(self):$/;"	m	class:G4Material	file:
__rlim64_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef unsigned long __rlim64_t; $/;"	t	file:
__rlim_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef unsigned long __rlim_t; $/;"	t	file:
__rwelision	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^signed char __rwelision; $/;"	m	struct:__pthread_rwlock_arch_t	file:
__shared	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^int __shared; $/;"	m	struct:__pthread_rwlock_arch_t	file:
__shfl	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((deprecated("__shfl() is deprecated in favor of __shfl_sync() and may be removed in a future release (Use -Wno-deprecated-declarations to sup" "press this warning)."))) __attribute__((unused)) static inline double __shfl(double var, int srcLane, int width = 32) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;::exit(___);}$/;"	f	file:
__shfl	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((deprecated("__shfl() is deprecated in favor of __shfl_sync() and may be removed in a future release (Use -Wno-deprecated-declarations to sup" "press this warning)."))) __attribute__((unused)) static inline float __shfl(float var, int srcLane, int width = 32) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;::exit(___);}$/;"	f	file:
__shfl	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((deprecated("__shfl() is deprecated in favor of __shfl_sync() and may be removed in a future release (Use -Wno-deprecated-declarations to sup" "press this warning)."))) __attribute__((unused)) static inline int __shfl(int var, int srcLane, int width = 32) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;::exit(___);}$/;"	f	file:
__shfl	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((deprecated("__shfl() is deprecated in favor of __shfl_sync() and may be removed in a future release (Use -Wno-deprecated-declarations to sup" "press this warning)."))) __attribute__((unused)) static inline long __shfl(long var, int srcLane, int width = 32) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;::exit(___);}$/;"	f	file:
__shfl	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((deprecated("__shfl() is deprecated in favor of __shfl_sync() and may be removed in a future release (Use -Wno-deprecated-declarations to sup" "press this warning)."))) __attribute__((unused)) static inline long long __shfl(long long var, int srcLane, int width = 32) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;::exit(___);}$/;"	f	file:
__shfl	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((deprecated("__shfl() is deprecated in favor of __shfl_sync() and may be removed in a future release (Use -Wno-deprecated-declarations to sup" "press this warning)."))) __attribute__((unused)) static inline unsigned __shfl(unsigned var, int srcLane, int width = 32) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;::exit(___);}$/;"	f	file:
__shfl	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((deprecated("__shfl() is deprecated in favor of __shfl_sync() and may be removed in a future release (Use -Wno-deprecated-declarations to sup" "press this warning)."))) __attribute__((unused)) static inline unsigned long __shfl(unsigned long var, int srcLane, int width = 32) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;::exit(___);}$/;"	f	file:
__shfl	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((deprecated("__shfl() is deprecated in favor of __shfl_sync() and may be removed in a future release (Use -Wno-deprecated-declarations to sup" "press this warning)."))) __attribute__((unused)) static inline unsigned long long __shfl(unsigned long long var, int srcLane, int width = 32) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;::exit(___);}$/;"	f	file:
__shfl_down	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((deprecated("__shfl_down() is deprecated in favor of __shfl_down_sync() and may be removed in a future release (Use -Wno-deprecated-declarati" "ons to suppress this warning)."))) __attribute__((unused)) static inline double __shfl_down(double var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}$/;"	f	file:
__shfl_down	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((deprecated("__shfl_down() is deprecated in favor of __shfl_down_sync() and may be removed in a future release (Use -Wno-deprecated-declarati" "ons to suppress this warning)."))) __attribute__((unused)) static inline float __shfl_down(float var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}$/;"	f	file:
__shfl_down	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((deprecated("__shfl_down() is deprecated in favor of __shfl_down_sync() and may be removed in a future release (Use -Wno-deprecated-declarati" "ons to suppress this warning)."))) __attribute__((unused)) static inline int __shfl_down(int var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}$/;"	f	file:
__shfl_down	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((deprecated("__shfl_down() is deprecated in favor of __shfl_down_sync() and may be removed in a future release (Use -Wno-deprecated-declarati" "ons to suppress this warning)."))) __attribute__((unused)) static inline long __shfl_down(long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}$/;"	f	file:
__shfl_down	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((deprecated("__shfl_down() is deprecated in favor of __shfl_down_sync() and may be removed in a future release (Use -Wno-deprecated-declarati" "ons to suppress this warning)."))) __attribute__((unused)) static inline long long __shfl_down(long long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}$/;"	f	file:
__shfl_down	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((deprecated("__shfl_down() is deprecated in favor of __shfl_down_sync() and may be removed in a future release (Use -Wno-deprecated-declarati" "ons to suppress this warning)."))) __attribute__((unused)) static inline unsigned __shfl_down(unsigned var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}$/;"	f	file:
__shfl_down	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((deprecated("__shfl_down() is deprecated in favor of __shfl_down_sync() and may be removed in a future release (Use -Wno-deprecated-declarati" "ons to suppress this warning)."))) __attribute__((unused)) static inline unsigned long __shfl_down(unsigned long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}$/;"	f	file:
__shfl_down	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((deprecated("__shfl_down() is deprecated in favor of __shfl_down_sync() and may be removed in a future release (Use -Wno-deprecated-declarati" "ons to suppress this warning)."))) __attribute__((unused)) static inline unsigned long long __shfl_down(unsigned long long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}$/;"	f	file:
__shfl_down_sync	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline double __shfl_down_sync(unsigned mask, double var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)delta;(void)width;::exit(___);}$/;"	f	file:
__shfl_down_sync	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline float __shfl_down_sync(unsigned mask, float var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)delta;(void)width;::exit(___);}$/;"	f	file:
__shfl_down_sync	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline int __shfl_down_sync(unsigned mask, int var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)delta;(void)width;::exit(___);}$/;"	f	file:
__shfl_down_sync	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline long __shfl_down_sync(unsigned mask, long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)delta;(void)width;::exit(___);}$/;"	f	file:
__shfl_down_sync	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline long long __shfl_down_sync(unsigned mask, long long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)delta;(void)width;::exit(___);}$/;"	f	file:
__shfl_down_sync	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned __shfl_down_sync(unsigned mask, unsigned var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)delta;(void)width;::exit(___);}$/;"	f	file:
__shfl_down_sync	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned long __shfl_down_sync(unsigned mask, unsigned long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)delta;(void)width;::exit(___);}$/;"	f	file:
__shfl_down_sync	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned long long __shfl_down_sync(unsigned mask, unsigned long long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)delta;(void)width;::exit(___);}$/;"	f	file:
__shfl_sync	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline double __shfl_sync(unsigned mask, double var, int srcLane, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)srcLane;(void)width;::exit(___);}$/;"	f	file:
__shfl_sync	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline float __shfl_sync(unsigned mask, float var, int srcLane, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)srcLane;(void)width;::exit(___);}$/;"	f	file:
__shfl_sync	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline int __shfl_sync(unsigned mask, int var, int srcLane, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)srcLane;(void)width;::exit(___);}$/;"	f	file:
__shfl_sync	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline long __shfl_sync(unsigned mask, long var, int srcLane, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)srcLane;(void)width;::exit(___);}$/;"	f	file:
__shfl_sync	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline long long __shfl_sync(unsigned mask, long long var, int srcLane, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)srcLane;(void)width;::exit(___);}$/;"	f	file:
__shfl_sync	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned __shfl_sync(unsigned mask, unsigned var, int srcLane, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)srcLane;(void)width;::exit(___);}$/;"	f	file:
__shfl_sync	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned long __shfl_sync(unsigned mask, unsigned long var, int srcLane, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)srcLane;(void)width;::exit(___);}$/;"	f	file:
__shfl_sync	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned long long __shfl_sync(unsigned mask, unsigned long long var, int srcLane, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)srcLane;(void)width;::exit(___);}$/;"	f	file:
__shfl_up	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((deprecated("__shfl_up() is deprecated in favor of __shfl_up_sync() and may be removed in a future release (Use -Wno-deprecated-declarations " "to suppress this warning)."))) __attribute__((unused)) static inline double __shfl_up(double var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}$/;"	f	file:
__shfl_up	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((deprecated("__shfl_up() is deprecated in favor of __shfl_up_sync() and may be removed in a future release (Use -Wno-deprecated-declarations " "to suppress this warning)."))) __attribute__((unused)) static inline float __shfl_up(float var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}$/;"	f	file:
__shfl_up	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((deprecated("__shfl_up() is deprecated in favor of __shfl_up_sync() and may be removed in a future release (Use -Wno-deprecated-declarations " "to suppress this warning)."))) __attribute__((unused)) static inline int __shfl_up(int var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}$/;"	f	file:
__shfl_up	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((deprecated("__shfl_up() is deprecated in favor of __shfl_up_sync() and may be removed in a future release (Use -Wno-deprecated-declarations " "to suppress this warning)."))) __attribute__((unused)) static inline long __shfl_up(long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}$/;"	f	file:
__shfl_up	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((deprecated("__shfl_up() is deprecated in favor of __shfl_up_sync() and may be removed in a future release (Use -Wno-deprecated-declarations " "to suppress this warning)."))) __attribute__((unused)) static inline long long __shfl_up(long long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}$/;"	f	file:
__shfl_up	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((deprecated("__shfl_up() is deprecated in favor of __shfl_up_sync() and may be removed in a future release (Use -Wno-deprecated-declarations " "to suppress this warning)."))) __attribute__((unused)) static inline unsigned __shfl_up(unsigned var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}$/;"	f	file:
__shfl_up	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((deprecated("__shfl_up() is deprecated in favor of __shfl_up_sync() and may be removed in a future release (Use -Wno-deprecated-declarations " "to suppress this warning)."))) __attribute__((unused)) static inline unsigned long __shfl_up(unsigned long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}$/;"	f	file:
__shfl_up	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((deprecated("__shfl_up() is deprecated in favor of __shfl_up_sync() and may be removed in a future release (Use -Wno-deprecated-declarations " "to suppress this warning)."))) __attribute__((unused)) static inline unsigned long long __shfl_up(unsigned long long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}$/;"	f	file:
__shfl_up_sync	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline double __shfl_up_sync(unsigned mask, double var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)delta;(void)width;::exit(___);}$/;"	f	file:
__shfl_up_sync	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline float __shfl_up_sync(unsigned mask, float var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)delta;(void)width;::exit(___);}$/;"	f	file:
__shfl_up_sync	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline int __shfl_up_sync(unsigned mask, int var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)delta;(void)width;::exit(___);}$/;"	f	file:
__shfl_up_sync	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline long __shfl_up_sync(unsigned mask, long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)delta;(void)width;::exit(___);}$/;"	f	file:
__shfl_up_sync	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline long long __shfl_up_sync(unsigned mask, long long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)delta;(void)width;::exit(___);}$/;"	f	file:
__shfl_up_sync	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned __shfl_up_sync(unsigned mask, unsigned var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)delta;(void)width;::exit(___);}$/;"	f	file:
__shfl_up_sync	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned long __shfl_up_sync(unsigned mask, unsigned long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)delta;(void)width;::exit(___);}$/;"	f	file:
__shfl_up_sync	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned long long __shfl_up_sync(unsigned mask, unsigned long long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)delta;(void)width;::exit(___);}$/;"	f	file:
__shfl_xor	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((deprecated("__shfl_xor() is deprecated in favor of __shfl_xor_sync() and may be removed in a future release (Use -Wno-deprecated-declaration" "s to suppress this warning)."))) __attribute__((unused)) static inline double __shfl_xor(double var, int laneMask, int width = 32) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;::exit(___);}$/;"	f	file:
__shfl_xor	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((deprecated("__shfl_xor() is deprecated in favor of __shfl_xor_sync() and may be removed in a future release (Use -Wno-deprecated-declaration" "s to suppress this warning)."))) __attribute__((unused)) static inline float __shfl_xor(float var, int laneMask, int width = 32) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;::exit(___);}$/;"	f	file:
__shfl_xor	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((deprecated("__shfl_xor() is deprecated in favor of __shfl_xor_sync() and may be removed in a future release (Use -Wno-deprecated-declaration" "s to suppress this warning)."))) __attribute__((unused)) static inline int __shfl_xor(int var, int laneMask, int width = 32) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;::exit(___);}$/;"	f	file:
__shfl_xor	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((deprecated("__shfl_xor() is deprecated in favor of __shfl_xor_sync() and may be removed in a future release (Use -Wno-deprecated-declaration" "s to suppress this warning)."))) __attribute__((unused)) static inline long __shfl_xor(long var, int laneMask, int width = 32) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;::exit(___);}$/;"	f	file:
__shfl_xor	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((deprecated("__shfl_xor() is deprecated in favor of __shfl_xor_sync() and may be removed in a future release (Use -Wno-deprecated-declaration" "s to suppress this warning)."))) __attribute__((unused)) static inline long long __shfl_xor(long long var, int laneMask, int width = 32) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;::exit(___);}$/;"	f	file:
__shfl_xor	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((deprecated("__shfl_xor() is deprecated in favor of __shfl_xor_sync() and may be removed in a future release (Use -Wno-deprecated-declaration" "s to suppress this warning)."))) __attribute__((unused)) static inline unsigned __shfl_xor(unsigned var, int laneMask, int width = 32) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;::exit(___);}$/;"	f	file:
__shfl_xor	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((deprecated("__shfl_xor() is deprecated in favor of __shfl_xor_sync() and may be removed in a future release (Use -Wno-deprecated-declaration" "s to suppress this warning)."))) __attribute__((unused)) static inline unsigned long __shfl_xor(unsigned long var, int laneMask, int width = 32) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;::exit(___);}$/;"	f	file:
__shfl_xor	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((deprecated("__shfl_xor() is deprecated in favor of __shfl_xor_sync() and may be removed in a future release (Use -Wno-deprecated-declaration" "s to suppress this warning)."))) __attribute__((unused)) static inline unsigned long long __shfl_xor(unsigned long long var, int laneMask, int width = 32) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;::exit(___);}$/;"	f	file:
__shfl_xor_sync	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline double __shfl_xor_sync(unsigned mask, double var, int laneMask, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)laneMask;(void)width;::exit(___);}$/;"	f	file:
__shfl_xor_sync	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline float __shfl_xor_sync(unsigned mask, float var, int laneMask, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)laneMask;(void)width;::exit(___);}$/;"	f	file:
__shfl_xor_sync	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline int __shfl_xor_sync(unsigned mask, int var, int laneMask, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)laneMask;(void)width;::exit(___);}$/;"	f	file:
__shfl_xor_sync	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline long __shfl_xor_sync(unsigned mask, long var, int laneMask, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)laneMask;(void)width;::exit(___);}$/;"	f	file:
__shfl_xor_sync	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline long long __shfl_xor_sync(unsigned mask, long long var, int laneMask, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)laneMask;(void)width;::exit(___);}$/;"	f	file:
__shfl_xor_sync	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned __shfl_xor_sync(unsigned mask, unsigned var, int laneMask, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)laneMask;(void)width;::exit(___);}$/;"	f	file:
__shfl_xor_sync	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned long __shfl_xor_sync(unsigned mask, unsigned long var, int laneMask, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)laneMask;(void)width;::exit(___);}$/;"	f	file:
__shfl_xor_sync	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned long long __shfl_xor_sync(unsigned mask, unsigned long long var, int laneMask, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)laneMask;(void)width;::exit(___);}$/;"	f	file:
__sig_atomic_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef int __sig_atomic_t; $/;"	t	file:
__sigset_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^} __sigset_t; $/;"	t	typeref:struct:__anon23	file:
__size	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^char __size[32]; $/;"	m	union:__anon35	file:
__size	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^char __size[40]; $/;"	m	union:__anon31	file:
__size	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^char __size[48]; $/;"	m	union:__anon32	file:
__size	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^char __size[4]; $/;"	m	union:__anon29	file:
__size	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^char __size[4]; $/;"	m	union:__anon30	file:
__size	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^char __size[4]; $/;"	m	union:__anon36	file:
__size	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^char __size[56]; $/;"	m	union:__anon33	file:
__size	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^char __size[56]; $/;"	m	union:pthread_attr_t	file:
__size	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^char __size[8]; $/;"	m	union:__anon34	file:
__socklen_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef unsigned __socklen_t; $/;"	t	file:
__spins	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^short __spins; short __elision; $/;"	m	struct:__pthread_mutex_s	file:
__ssize_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef long __ssize_t; $/;"	t	file:
__sti____cudaRegisterAll	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.stub.c	/^static void __sti____cudaRegisterAll(void){__cudaRegisterBinary(__nv_cudaEntityRegisterCallback);}$/;"	f	file:
__str__	extern/python/fmaps.py	/^    def __str__(self):$/;"	m	class:Beam	file:
__str__	extern/python/fmaps.py	/^    def __str__(self):$/;"	m	class:Fmaps	file:
__str__	extern/python/volume.py	/^    def __str__(self):$/;"	m	class:Volume	file:
__suseconds_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef long __suseconds_t; $/;"	t	file:
__syncwarp	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline void __syncwarp(unsigned mask = 4294967295U) {int volatile ___ = 1;(void)mask;::exit(___);}$/;"	f	file:
__syscall_slong_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef long __syscall_slong_t; $/;"	t	file:
__syscall_ulong_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef unsigned long __syscall_ulong_t; $/;"	t	file:
__time_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef long __time_t; $/;"	t	file:
__timer_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef void *__timer_t; $/;"	t	file:
__u_char	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef unsigned char __u_char; $/;"	t	file:
__u_int	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef unsigned __u_int; $/;"	t	file:
__u_long	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef unsigned long __u_long; $/;"	t	file:
__u_quad_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef unsigned long __u_quad_t; $/;"	t	file:
__u_short	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef unsigned short __u_short; $/;"	t	file:
__uid_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef unsigned __uid_t; $/;"	t	file:
__uint16_identity	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline __uint16_t __uint16_identity(__uint16_t __x) $/;"	f	file:
__uint16_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef unsigned short __uint16_t; $/;"	t	file:
__uint32_identity	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline __uint32_t __uint32_identity(__uint32_t __x) $/;"	f	file:
__uint32_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef unsigned __uint32_t; $/;"	t	file:
__uint64_identity	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline __uint64_t __uint64_identity(__uint64_t __x) $/;"	f	file:
__uint64_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef unsigned long __uint64_t; $/;"	t	file:
__uint8_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef unsigned char __uint8_t; $/;"	t	file:
__uintmax_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef unsigned long __uintmax_t; $/;"	t	file:
__uni_sync	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline int __uni_sync(unsigned mask, int pred) {int volatile ___ = 1;(void)mask;(void)pred;::exit(___);}$/;"	f	file:
__useconds_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef unsigned __useconds_t; $/;"	t	file:
__val	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef struct { int __val[2]; } __fsid_t; $/;"	m	struct:__anon16	file:
__val	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^unsigned long __val[(1024) \/ ((8) * sizeof(unsigned long))]; $/;"	m	struct:__anon23	file:
__wrefs	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^unsigned __wrefs; $/;"	m	struct:__pthread_cond_s	file:
__writers	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^unsigned __writers; $/;"	m	struct:__pthread_rwlock_arch_t	file:
__writers_futex	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^unsigned __writers_futex; $/;"	m	struct:__pthread_rwlock_arch_t	file:
__wrphase_futex	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^unsigned __wrphase_futex; $/;"	m	struct:__pthread_rwlock_arch_t	file:
__wseq	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__extension__ unsigned long long __wseq; $/;"	m	union:__pthread_cond_s::__anon25	file:
__wseq32	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^} __wseq32; $/;"	m	union:__pthread_cond_s::__anon25	typeref:struct:__pthread_cond_s::__anon25::__anon26	file:
__x	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^unsigned short __x[3]; $/;"	m	struct:drand48_data	file:
_assign_workerid	dosecalc-beamlet/sparsify_manager.h	/^        void _assign_workerid() { m_workerid = s_workerid++;}$/;"	f	class:BaseW2FWorker
_assign_workerid	dosecalc-beamlet/sparsify_manager.h	/^        void _assign_workerid() { m_workerid = s_workerid++;}$/;"	f	class:SRWorker
_assign_workerid	dosecalc-beamlet/sparsify_worker.h	/^        void _assign_workerid() { m_workerid = s_workerid++;}$/;"	f	class:SparsifyWorkerBase
_coll	DoseCalcIO/roi.h	/^        std::vector<std::shared_ptr<DenseROIMask> > _coll;$/;"	m	class:ROIMaskList
_createTypedH5Dataset	DoseCalcIO/volume.cpp	/^H5::DataSet Volume<char>::_createTypedH5Dataset(H5::Group& h5group, const char* data, const FrameOfReference& frame, const std::string& dset_name) {$/;"	f	class:Volume
_createTypedH5Dataset	DoseCalcIO/volume.cpp	/^H5::DataSet Volume<float>::_createTypedH5Dataset(H5::Group& h5group, const float* data, const FrameOfReference& frame, const std::string& dset_name) {$/;"	f	class:Volume
_createTypedH5Dataset	DoseCalcIO/volume.cpp	/^H5::DataSet Volume<short>::_createTypedH5Dataset(H5::Group& h5group, const short* data, const FrameOfReference& frame, const std::string& dset_name) {$/;"	f	class:Volume
_createTypedH5Dataset	DoseCalcIO/volume.cpp	/^H5::DataSet Volume<uint8_t>::_createTypedH5Dataset(H5::Group& h5group, const uint8_t* data, const FrameOfReference& frame, const std::string& dset_name) {$/;"	f	class:Volume
_cudaGetErrorEnum	include/cuda-common/helper_cuda.h	/^static const char *_cudaGetErrorEnum(CUresult error)$/;"	f
_cudaGetErrorEnum	include/cuda-common/helper_cuda.h	/^static const char *_cudaGetErrorEnum(NppStatus error)$/;"	f
_cudaGetErrorEnum	include/cuda-common/helper_cuda.h	/^static const char *_cudaGetErrorEnum(cublasStatus_t error)$/;"	f
_cudaGetErrorEnum	include/cuda-common/helper_cuda.h	/^static const char *_cudaGetErrorEnum(cudaError_t error)$/;"	f
_cudaGetErrorEnum	include/cuda-common/helper_cuda.h	/^static const char *_cudaGetErrorEnum(cufftResult error)$/;"	f
_cudaGetErrorEnum	include/cuda-common/helper_cuda.h	/^static const char *_cudaGetErrorEnum(curandStatus_t error)$/;"	f
_cudaGetErrorEnum	include/cuda-common/helper_cuda.h	/^static const char *_cudaGetErrorEnum(cusolverStatus_t error)$/;"	f
_cudaGetErrorEnum	include/cuda-common/helper_cuda.h	/^static const char *_cudaGetErrorEnum(cusparseStatus_t error)$/;"	f
_default_chunksize	DoseCalcIO/sparse_io.h	/^const int _default_chunksize = 50;$/;"	v
_default_compress_lvl	DoseCalcIO/sparse_io.h	/^const int _default_compress_lvl = -1;$/;"	v
_default_sparsity_threshold	DoseCalcIO/sparse_io.h	/^const float _default_sparsity_threshold = 1e-12;$/;"	v
_default_write_strategy	dosecalc-beamlet/sparsify_manager.h	/^const WRITE_STRATEGY _default_write_strategy = WRITE_STRATEGY::CENTRAL;$/;"	v
_difftime_ms	CudaUtilities/cuda_timing.cu	/^float CudaTimer::_difftime_ms(cudaEvent_t start, cudaEvent_t stop) {$/;"	f	class:CudaTimer
_difftime_ms	Utilities/timing.cpp	/^double Timer::_difftime_ms(timepoint_t start, timepoint_t stop) {$/;"	f	class:Timer
_init_events	CudaUtilities/cuda_timing.cu	/^void CudaTimer::_init_events() {$/;"	f	class:CudaTimer
_load_conv_angles	DoseCalcIO/kernel.cpp	/^int _load_conv_angles(float **ptr, unsigned int size, char* fname ) {$/;"	f
_make_cudaResourceDesc	CudaUtilities/make_tex_surf.cuh	/^cudaResourceDesc _make_cudaResourceDesc(T *res, cudaResourceType restype=cudaResourceType::cudaResourceTypeLinear) {$/;"	f
_make_cudaResourceDesc	CudaUtilities/make_tex_surf.cuh	/^template<> cudaResourceDesc _make_cudaResourceDesc<cudaArray>(cudaArray *res, cudaResourceType restype) {$/;"	f
_make_cudaResourceDesc	CudaUtilities/make_tex_surf.cuh	/^template<> cudaResourceDesc _make_cudaResourceDesc<float>(float *res, cudaResourceType restype) {$/;"	f
_nones_cached	DoseCalcIO/roi.h	/^        uint _nones_cached = 0;$/;"	m	class:DenseROIMask
_readFromHDF5	DoseCalcIO/beam.cpp	/^int BEAM::_readFromHDF5(BEAM& beam, H5::Group& h5group) {$/;"	f	class:BEAM
_readFromHDF5	DoseCalcIO/io_data_structs.h	/^    static int _readFromHDF5(ArrayProps& props, H5::Group& h5group) {$/;"	f	struct:ArrayProps
_readFromHDF5	DoseCalcIO/kernel.cpp	/^int KERNEL::_readFromHDF5(KERNEL& kern, H5::Group& h5group) {$/;"	f	class:KERNEL
_readFromHDF5	DoseCalcIO/roi.cpp	/^int DenseROIMask::_readFromHDF5(DenseROIMask& mask, H5::Group& h5group) {$/;"	f	class:DenseROIMask
_readFromHDF5	DoseCalcIO/roi.cpp	/^int ROIMaskList::_readFromHDF5(ROIMaskList& masklist, H5::Group& h5group, bool verbose) {$/;"	f	class:ROIMaskList
_readFromHDF5	DoseCalcIO/volume.h	/^        static int _readFromHDF5(Volume<T>& vol, H5::Group& h5group, const std::string& dset_name="data") {$/;"	f	class:Volume
_readTypedH5Dataset	DoseCalcIO/volume.cpp	/^void Volume<char>::_readTypedH5Dataset(std::vector<char>& vol, uint3& size, H5::DataSet& h5dset) {$/;"	f	class:Volume
_readTypedH5Dataset	DoseCalcIO/volume.cpp	/^void Volume<float>::_readTypedH5Dataset(std::vector<float>& vol, uint3& size, H5::DataSet& h5dset) {$/;"	f	class:Volume
_readTypedH5Dataset	DoseCalcIO/volume.cpp	/^void Volume<short>::_readTypedH5Dataset(std::vector<short>& vol, uint3& size, H5::DataSet& h5dset) {$/;"	f	class:Volume
_readTypedH5Dataset	DoseCalcIO/volume.cpp	/^void Volume<uint8_t>::_readTypedH5Dataset(std::vector<uint8_t>& vol, uint3& size, H5::DataSet& h5dset) {$/;"	f	class:Volume
_read_beams	DoseCalcIO/fmaps_io.cpp	/^int _read_beams(H5::Group& h5group, std::vector<HEADER_BEAM>& beam_headers) {$/;"	f
_read_patient_metadata	DoseCalcIO/fmaps_io.cpp	/^int _read_patient_metadata(H5::Group& h5group, HEADER_PATIENT& patient_header) {$/;"	f
_reduce_by_roi	DoseCalcIO/sparse_io.cpp	/^void _reduce_by_roi(SparseData& reduceddata, SparseData& sparsedata, ROIMaskList& roi_list, ArrayProps& props) {$/;"	f
_sparsify	DoseCalcIO/sparse_io.cpp	/^void _sparsify(SparseData& sparsedata, const float* array, ArrayProps& props, float thresh) {$/;"	f
_sparsify_and_reduce	DoseCalcIO/sparse_io.cpp	/^void _sparsify_and_reduce(SparseData& data, const float* array, ArrayProps& props, ROIMaskList* roi_list, float thresh) {$/;"	f
_vect	DoseCalcIO/volume.h	/^        std::vector<T> _vect;        \/\/ linear array flattened in C-Major order (Depth->Row->Column)$/;"	m	class:Volume
_writeToHDF5	DoseCalcIO/beam.cpp	/^int BEAM::_writeToHDF5(H5::Group& h5group) const { \/\/ Write beam data to hdf5 group as attributes$/;"	f	class:BEAM
_writeToHDF5	DoseCalcIO/io_data_structs.h	/^    int _writeToHDF5(H5::Group& h5group) const {$/;"	f	struct:ArrayProps
_writeToHDF5	DoseCalcIO/kernel.cpp	/^int KERNEL::_writeToHDF5(H5::Group& h5group) const {$/;"	f	class:KERNEL
_writeToHDF5	DoseCalcIO/roi.cpp	/^int DenseROIMask::_writeToHDF5(H5::Group& h5group) {$/;"	f	class:DenseROIMask
_writeToHDF5	DoseCalcIO/roi.cpp	/^int ROIMaskList::_writeToHDF5(H5::Group& h5group) {$/;"	f	class:ROIMaskList
_writeToHDF5	DoseCalcIO/volume.h	/^        static int _writeToHDF5(H5::Group& h5group, const T* data, const FrameOfReference& frame, const std::string& dset_name) {$/;"	f	class:Volume
_write_beam_metadata	DoseCalcIO/sparse_io.cpp	/^int _write_beam_metadata(H5::Group& h5group, const HEADER_BEAM& beam_header) {$/;"	f
_write_beamlet_metadata	DoseCalcIO/sparse_io.cpp	/^int _write_beamlet_metadata(H5::Group& h5group, const HEADER_BEAMLET& beamlet_header, const SparseData& data) {$/;"	f
_write_beamlet_to_hdf5	DoseCalcIO/sparse_io.cpp	/^int _write_beamlet_to_hdf5(H5::Group& h5group, const SparseData& data, HEADER_BEAMLET& beamlet_header, int compress_lvl, uint64_t chunksize) {$/;"	f
_write_file_version	DoseCalcIO/fmaps_io.cpp	/^int _write_file_version(H5::Group& h5group, uint ftmagic, uint ftversionmajor, uint ftversionminor) {$/;"	f
_write_patient_metadata	DoseCalcIO/sparse_io.cpp	/^int _write_patient_metadata(H5::Group& h5group, const HEADER_PATIENT& patient_header) {$/;"	f
a	include/rapidjson/document.h	/^        ArrayData a;$/;"	m	union:GenericValue::Data
abs	include/cuda-common/helper_math.h	/^inline __host__ __device__ int2 abs(int2 v)$/;"	f
abs	include/cuda-common/helper_math.h	/^inline __host__ __device__ int3 abs(int3 v)$/;"	f
abs	include/cuda-common/helper_math.h	/^inline __host__ __device__ int4 abs(int4 v)$/;"	f
activate	dosecalc-beamlet/sparsify_manager.cpp	/^void SparsifyManager::activate() {$/;"	f	class:SparsifyManager
addBeam	extern/python/fmaps.py	/^    def addBeam(self, beam):$/;"	m	class:Fmaps
additionalItemsSchema_	include/rapidjson/schema.h	/^    const SchemaType* additionalItemsSchema_;$/;"	m	class:internal::Schema
additionalItems_	include/rapidjson/schema.h	/^    bool additionalItems_;$/;"	m	class:internal::Schema
additionalPropertiesSchema_	include/rapidjson/schema.h	/^    const SchemaType* additionalPropertiesSchema_;$/;"	m	class:internal::Schema
additionalProperties_	include/rapidjson/schema.h	/^    bool additionalProperties_;$/;"	m	class:internal::Schema
all	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((deprecated("__all() is deprecated in favor of __all_sync() and may be removed in a future release (Use -Wno-deprecated-declarations to suppr" "ess this warning)."))) __attribute__((unused)) static inline bool all(bool cond) {int volatile ___ = 1;(void)cond;::exit(___);}$/;"	f	file:
allOf_	include/rapidjson/schema.h	/^    SchemaArray allOf_;$/;"	m	class:internal::Schema
all_beamlets	dosecalc-preprocess/argparser.h	/^    bool         all_beamlets        = false;         \/\/ activate all beamlets in field rather than just those touching target$/;"	m	struct:CLIArgs
alloc_table	CudaUtilities/memory_manager.cuh	/^        std::unordered_map<void*, int64_t> alloc_table;$/;"	m	class:MemoryManager	file:
allocate_batch_sizes	dosecalc-beamlet/nvbbRayConvolve_host.cu	/^static std::vector<int> allocate_batch_sizes(int numbeamlets, int numbatches) {$/;"	f	file:
allocator_	include/rapidjson/document.h	/^    Allocator* allocator_;$/;"	m	class:GenericDocument
allocator_	include/rapidjson/internal/regex.h	/^    Allocator* allocator_;$/;"	m	class:internal::GenericRegexSearch
allocator_	include/rapidjson/internal/stack.h	/^    Allocator* allocator_;$/;"	m	class:internal::Stack
allocator_	include/rapidjson/pointer.h	/^    Allocator* allocator_;                  \/\/!< The current allocator. It is either user-supplied or equal to ownAllocator_.$/;"	m	class:GenericPointer
allocator_	include/rapidjson/schema.h	/^    Allocator *allocator_;$/;"	m	class:GenericSchemaDocument
allocator_	include/rapidjson/schema.h	/^    AllocatorType* allocator_;$/;"	m	class:internal::Schema
anchorBegin_	include/rapidjson/internal/regex.h	/^    bool anchorBegin_;$/;"	m	class:internal::GenericRegex
anchorEnd_	include/rapidjson/internal/regex.h	/^    bool anchorEnd_;$/;"	m	class:internal::GenericRegex
angular_boundary	DoseCalcIO/kernel.h	/^        float angular_boundary[N_KERNEL_ANGLES+1];$/;"	m	class:KERNEL
anonymize	RTClasses/rtimages.cpp	/^void RTImage::anonymize(DcmDataset *dataset) {$/;"	f	class:RTImage
anonymize	RTClasses/rtstruct.cpp	/^RTStruct::anonymize( DcmDataset *dataset )$/;"	f	class:RTStruct
any	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((deprecated("__any() is deprecated in favor of __any_sync() and may be removed in a future release (Use -Wno-deprecated-declarations to suppr" "ess this warning)."))) __attribute__((unused)) static inline bool any(bool cond) {int volatile ___ = 1;(void)cond;::exit(___);}$/;"	f	file:
anyOf_	include/rapidjson/schema.h	/^    SchemaArray anyOf_;$/;"	m	class:internal::Schema
apertureready	dosecalc-preprocess/argparser.h	/^    bool         apertureready       = false;         \/\/ perform aperture-ready post-processing on automatically defined fluence maps$/;"	m	struct:CLIArgs
args	extern/python/utils/convert_beamlist.py	/^    args = parser.parse_args()$/;"	v
args	extern/python/utils/sumMcols.py	/^    args = parser.parse_args()$/;"	v
args	tests/utils/generate_beamlist.py	/^    args = parser.parse_args()$/;"	v
arrayElementHashCodes	include/rapidjson/schema.h	/^    void* arrayElementHashCodes; \/\/ Only validator access this$/;"	m	struct:internal::SchemaValidationContext
arrayElementIndex	include/rapidjson/schema.h	/^    SizeType arrayElementIndex;$/;"	m	struct:internal::SchemaValidationContext
arrayUniqueness	include/rapidjson/schema.h	/^    bool arrayUniqueness;$/;"	m	struct:internal::SchemaValidationContext
at	DoseCalcIO/volume.h	/^        T& at(int3 coords) { return at(coords.x, coords.y, coords.z); }$/;"	f	class:Volume
at	DoseCalcIO/volume.h	/^        T& at(uint idx) { return _vect.at(idx); }$/;"	f	class:Volume
at	DoseCalcIO/volume.h	/^        T& at(uint x, uint y, uint z) { return _vect.at(x + size.x*(y + size.y*z)); }$/;"	f	class:Volume
at	DoseCalcIO/volume.h	/^        T& at(uint3 coords) { return at(coords.x, coords.y, coords.z); }$/;"	f	class:Volume
at	DoseCalcIO/volume.h	/^        const T& at(int3 coords) const { return at(coords.x, coords.y, coords.z); }$/;"	f	class:Volume
at	DoseCalcIO/volume.h	/^        const T& at(uint idx) const { return _vect.at(idx); }$/;"	f	class:Volume
at	DoseCalcIO/volume.h	/^        const T& at(uint x, uint y, uint z) const { return _vect.at(x + size.x*(y + size.y*z)); }$/;"	f	class:Volume
at	DoseCalcIO/volume.h	/^        const T& at(uint3 coords) const { return at(coords.x, coords.y, coords.z); }$/;"	f	class:Volume
atomicAdd	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline double atomicAdd(double *address, double val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicAdd	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline float atomicAdd(float *address, float val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicAdd	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline int atomicAdd(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicAdd	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned atomicAdd(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicAdd	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned long long atomicAdd(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicAdd_block	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline double atomicAdd_block(double *address, double val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicAdd_block	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline float atomicAdd_block(float *address, float val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicAdd_block	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline int atomicAdd_block(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicAdd_block	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned atomicAdd_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicAdd_block	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned long long atomicAdd_block(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicAdd_system	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline double atomicAdd_system(double *address, double val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicAdd_system	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline float atomicAdd_system(float *address, float val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicAdd_system	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline int atomicAdd_system(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicAdd_system	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned atomicAdd_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicAdd_system	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned long long atomicAdd_system(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicAnd	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline int atomicAnd(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicAnd	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline long long atomicAnd(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicAnd	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned atomicAnd(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicAnd	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned long long atomicAnd(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicAnd_block	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline int atomicAnd_block(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicAnd_block	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline long long atomicAnd_block(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicAnd_block	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned atomicAnd_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicAnd_block	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned long long atomicAnd_block(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicAnd_system	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline int atomicAnd_system(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicAnd_system	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline long long atomicAnd_system(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicAnd_system	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned atomicAnd_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicAnd_system	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned long long atomicAnd_system(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicCAS	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline int atomicCAS(int *address, int compare, int val) {int volatile ___ = 1;(void)address;(void)compare;(void)val;::exit(___);}$/;"	f	file:
atomicCAS	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned atomicCAS(unsigned *address, unsigned compare, unsigned val) {int volatile ___ = 1;(void)address;(void)compare;(void)val;::exit(___);}$/;"	f	file:
atomicCAS	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned long long atomicCAS(unsigned long long *address, unsigned long long compare, unsigned long long val) {int volatile ___ = 1;(void)address;(void)compare;(void)val;::exit(___);}$/;"	f	file:
atomicCAS_block	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline int atomicCAS_block(int *address, int compare, int val) {int volatile ___ = 1;(void)address;(void)compare;(void)val;::exit(___);}$/;"	f	file:
atomicCAS_block	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned atomicCAS_block(unsigned *address, unsigned compare, unsigned $/;"	f	file:
atomicCAS_block	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned long long atomicCAS_block(unsigned long long *address, unsigned long long $/;"	f	file:
atomicCAS_system	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline int atomicCAS_system(int *address, int compare, int val) {int volatile ___ = 1;(void)address;(void)compare;(void)val;::exit(___);}$/;"	f	file:
atomicCAS_system	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned atomicCAS_system(unsigned *address, unsigned compare, unsigned $/;"	f	file:
atomicCAS_system	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned long long atomicCAS_system(unsigned long long *address, unsigned long long $/;"	f	file:
atomicDec	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned atomicDec(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicDec_block	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned atomicDec_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicDec_system	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned atomicDec_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicExch	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline float atomicExch(float *address, float val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicExch	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline int atomicExch(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicExch	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned atomicExch(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicExch	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned long long atomicExch(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicExch_block	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline float atomicExch_block(float *address, float val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicExch_block	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline int atomicExch_block(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicExch_block	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned atomicExch_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicExch_block	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned long long atomicExch_block(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicExch_system	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline float atomicExch_system(float *address, float val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicExch_system	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline int atomicExch_system(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicExch_system	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned atomicExch_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicExch_system	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned long long atomicExch_system(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicInc	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned atomicInc(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicInc_block	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned atomicInc_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicInc_system	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned atomicInc_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicMax	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline int atomicMax(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicMax	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline long long atomicMax(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicMax	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned atomicMax(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicMax	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned long long atomicMax(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicMax_block	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline int atomicMax_block(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicMax_block	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline long long atomicMax_block(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicMax_block	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned atomicMax_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicMax_block	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned long long atomicMax_block(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicMax_system	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline int atomicMax_system(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicMax_system	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline long long atomicMax_system(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicMax_system	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned atomicMax_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicMax_system	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned long long atomicMax_system(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicMin	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline int atomicMin(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicMin	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline long long atomicMin(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicMin	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned atomicMin(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicMin	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned long long atomicMin(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicMin_block	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline int atomicMin_block(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicMin_block	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline long long atomicMin_block(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicMin_block	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned atomicMin_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicMin_block	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned long long atomicMin_block(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicMin_system	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline int atomicMin_system(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicMin_system	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline long long atomicMin_system(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicMin_system	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned atomicMin_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicMin_system	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned long long atomicMin_system(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicOr	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline int atomicOr(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicOr	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline long long atomicOr(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicOr	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned atomicOr(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicOr	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned long long atomicOr(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicOr_block	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline int atomicOr_block(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicOr_block	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline long long atomicOr_block(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicOr_block	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned atomicOr_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicOr_block	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned long long atomicOr_block(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicOr_system	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline int atomicOr_system(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicOr_system	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline long long atomicOr_system(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicOr_system	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned atomicOr_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicOr_system	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned long long atomicOr_system(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicSub	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline int atomicSub(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicSub	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned atomicSub(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicSub_block	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline int atomicSub_block(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicSub_block	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned atomicSub_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicSub_system	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline int atomicSub_system(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicSub_system	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned atomicSub_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicXor	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline int atomicXor(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicXor	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline long long atomicXor(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicXor	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned atomicXor(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicXor	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned long long atomicXor(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicXor_block	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline int atomicXor_block(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicXor_block	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline long long atomicXor_block(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicXor_block	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned atomicXor_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicXor_block	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned long long atomicXor_block(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicXor_system	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline int atomicXor_system(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicXor_system	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline long long atomicXor_system(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicXor_system	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned atomicXor_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
atomicXor_system	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned long long atomicXor_system(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}$/;"	f	file:
ax	extern/python/utils/show_fmap.py	/^    ax = fig.add_subplot(dim1d, dimlong, ii+1)$/;"	v
azimuth	DoseCalcIO/beam.h	/^        float  azimuth;         \/\/ Gantry Angle     [rad]$/;"	m	class:BEAM
ballot	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((deprecated("__ballot() is deprecated in favor of __ballot_sync() and may be removed in a future release (Use -Wno-deprecated-declarations to" " suppress this warning)."))) __attribute__((unused)) static inline unsigned ballot(bool pred) {int volatile ___ = 1;(void)pred;::exit(___);}$/;"	f	file:
baseAllocator_	include/rapidjson/allocators.h	/^    BaseAllocator* baseAllocator_;  \/\/!< base allocator for allocating memory chunks.$/;"	m	class:MemoryPoolAllocator
bbox_nvoxels	include/server/brain_defs.h	/^    CUDEV_FXN inline int bbox_nvoxels() const { return calc_bbox_size.x*calc_bbox_size.y*calc_bbox_size.z; }$/;"	f	struct:CONSTANTS
bbox_roi_name	dosecalc-preprocess/argparser.h	/^    std::string  bbox_roi_name;$/;"	m	struct:CLIArgs
bbox_size	DoseCalcIO/io_data_structs.h	/^    uint3       bbox_size;            \/\/ size of dose calc_bbox$/;"	m	struct:HEADER_PATIENT
bbox_start	DoseCalcIO/io_data_structs.h	/^    uint3       bbox_start;           \/\/ indices of start of dose calc_bbox$/;"	m	struct:HEADER_PATIENT
bbox_start_to_coords	include/server/brain_defs.h	/^    CUDEV_FXN inline float3 bbox_start_to_coords() const {$/;"	f	struct:CONSTANTS
beam	extern/python/generate_phantom.py	/^    beam = Beam(fmap_wts, iso=iso, sad=sad, beamlet_size=blt_size)$/;"	v
beam	include/client/dummy_defs.h	/^    BEAM beam;$/;"	m	class:MGCS_PARAMS
beam	include/server/brain_defs.h	/^    BEAM beam;                 \/\/ 3D coordinates of beam origin, size of beam in cm$/;"	m	struct:CONSTANTS
beam_count	include/server/brain_defs.h	/^    unsigned int beam_count;$/;"	m	struct:CONSTANTS
beam_file	dosecalc-preprocess/argparser.h	/^    std::string  beam_file;                           \/\/ path to beam_list.txt file describing beams to calculate$/;"	m	struct:CLIArgs
beam_header	dosecalc-beamlet/sparsify_manager.h	/^            HEADER_BEAM            beam_header;$/;"	m	struct:SRWorker::SRData
beam_header	dosecalc-beamlet/sparsify_manager.h	/^            HEADER_BEAM    beam_header;$/;"	m	struct:BaseW2FWorker::W2FData
beam_header	dosecalc-beamlet/sparsify_worker.h	/^    HEADER_BEAM    beam_header;$/;"	m	struct:SparsifyData
beam_indices	extern/python/utils/show_fmap.py	/^beam_indices = []$/;"	v
beam_spec	dosecalc-preprocess/argparser.h	/^    std::string  beam_spec           = "spec_6mv";$/;"	m	struct:CLIArgs
beam_spec	include/server/brain_defs.h	/^    char beam_spec[300];        \/\/ beam spectrum filename (no extension)$/;"	m	struct:CONSTANTS
beam_specs	DoseCalcIO/io_data_structs.h	/^    BEAM        beam_specs;       \/\/ parameters specifying beam (angles, source location, ...)$/;"	m	struct:HEADER_BEAM
beam_spectrum	DoseCalcIO/io_data_structs.h	/^    std::string beam_spectrum;        \/\/ name of beam spectrum file (describes beam energy)$/;"	m	struct:HEADER_PATIENT
beam_uid	DoseCalcIO/io_data_structs.h	/^    ushort      beam_uid;         \/\/ UID for beam (index into patient_header.beam_list)$/;"	m	struct:HEADER_BEAM
beamhard_correct	include/server/brain_defs.h	/^    float beamhard_correct; \/\/ beam hardening correction used in terma calculation$/;"	m	struct:CONSTANTS
beamletAngles	DoseCalcIO/io_data_structs.h	/^    float2* beamletAngles;       \/\/ sum of beam angle and beamlet divergence angle (.x: azimuth; .y: zenith)$/;"	m	struct:PILLAR_GRID
beamletIdx	DoseCalcIO/io_data_structs.h	/^    int* beamletIdx;             \/\/ indices of actual beamlets$/;"	m	struct:PILLAR_GRID
beamletIsocenters	DoseCalcIO/io_data_structs.h	/^    float3* beamletIsocenters;   \/\/ RCS coords of each beamlet isocenter (intersect of beamlet central axis and fluence map plane)$/;"	m	struct:PILLAR_GRID
beamletRotationAnchors	DoseCalcIO/io_data_structs.h	/^    float3* beamletRotationAnchors; \/\/ RCS-aligned offset from pillarStartCoords that defines the beamletRotation anchor point$/;"	m	struct:PILLAR_GRID
beamlet_header	dosecalc-beamlet/sparsify_manager.h	/^            HEADER_BEAMLET         beamlet_header;$/;"	m	struct:SRWorker::SRData
beamlet_header	dosecalc-beamlet/sparsify_manager.h	/^            HEADER_BEAMLET beamlet_header;$/;"	m	struct:BaseW2FWorker::W2FData
beamlet_header	dosecalc-beamlet/sparsify_worker.h	/^    HEADER_BEAMLET beamlet_header;$/;"	m	struct:SparsifyData
beamlet_size	DoseCalcIO/beam.h	/^            float       beamlet_size[2];  \/\/ beamlet size [cm]$/;"	m	struct:BEAM::COMP_BEAM_T
beamlet_size	DoseCalcIO/beam.h	/^        float2 beamlet_size;    \/\/ beamlet size [cm]$/;"	m	class:BEAM
beamlet_size	dosecalc-preprocess/argparser.h	/^    float2       beamlet_size        = {0.5f, 0.5f};  \/\/ bi-directional size of beamlet [unit: cm]$/;"	m	struct:CLIArgs
beamlet_uid	DoseCalcIO/io_data_structs.h	/^    ushort      beamlet_uid;      \/\/ UID for beamlet (linearized index into 2D fluence map)$/;"	m	struct:HEADER_BEAMLET
beams_data_group	dosecalc-beamlet/sparsify_manager.h	/^        static std::string beams_data_group() { return beams_group() + "\/data"; }$/;"	f	class:SparsifyManager
beams_group	dosecalc-beamlet/sparsify_manager.h	/^        static std::string beams_group() { return "\/beams"; }$/;"	f	class:SparsifyManager
beams_meta_group	dosecalc-beamlet/sparsify_manager.h	/^        static std::string beams_meta_group() { return beams_group() + "\/metadata"; }$/;"	f	class:SparsifyManager
begin	include/rapidjson/document.h	/^    MemberIterator begin() const { return value_.MemberBegin(); }$/;"	f	class:GenericObject
begin	include/rapidjson/document.h	/^    ValueIterator begin() const { return value_.Begin(); }$/;"	f	class:GenericArray
begin	include/rapidjson/schema.h	/^        SizeType begin; \/\/ begin index of context.validators$/;"	m	struct:internal::Schema::SchemaArray
begin_	include/rapidjson/memorystream.h	/^    const Ch* begin_;   \/\/!< Original head of the string.$/;"	m	struct:MemoryStream
bevDens	dosecalc-beam/nvbbRayConvolve_host.cu	/^    float *bevDens;$/;"	m	struct:DEVICE_CONV_DATA	file:
bevDens	dosecalc-beamlet/nvbbRayConvolve_host.cu	/^    float *bevDens;$/;"	m	struct:DEVICE_CONV_DATA	file:
bevTerma	dosecalc-beam/nvbbRayConvolve_host.cu	/^    float *bevTerma;$/;"	m	struct:DEVICE_CONV_DATA	file:
bevTerma	dosecalc-beamlet/nvbbRayConvolve_host.cu	/^    float *bevTerma;$/;"	m	struct:DEVICE_CONV_DATA	file:
blkcnt64_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef __blkcnt64_t blkcnt64_t; $/;"	t	file:
blkcnt_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef __blkcnt_t blkcnt_t; $/;"	t	file:
blksize_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef __blksize_t blksize_t; $/;"	t	file:
blt_size	extern/python/generate_phantom.py	/^    blt_size  = (10, 10)        # beamlet size (X, Z)          [unit: cm]$/;"	v
bufferEnd_	include/rapidjson/filewritestream.h	/^    char *bufferEnd_;$/;"	m	class:FileWriteStream
bufferLast_	include/rapidjson/filereadstream.h	/^    Ch *bufferLast_;$/;"	m	class:FileReadStream
bufferSize_	include/rapidjson/filereadstream.h	/^    size_t bufferSize_;$/;"	m	class:FileReadStream
buffer_	include/rapidjson/filereadstream.h	/^    Ch *buffer_;$/;"	m	class:FileReadStream
buffer_	include/rapidjson/filewritestream.h	/^    char *buffer_;$/;"	m	class:FileWriteStream
cIterativeParsingStateCount	include/rapidjson/reader.h	/^        cIterativeParsingStateCount$/;"	e	enum:GenericReader::IterativeParsingState
caddr_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef __caddr_t caddr_t; $/;"	t	file:
calcBeamletAnchors	dosecalc-beamlet/nvbbRayConvolve_host.cu	/^static void calcBeamletAnchors($/;"	f	file:
calc_angles_from_dir	DoseCalcIO/beam.cpp	/^CUDEV_FXN float2 BEAM::calc_angles_from_dir()    const {$/;"	f	class:BEAM
calc_angles_from_dir	DoseCalcIO/beam.cpp	/^CUDEV_FXN float2 BEAM::calc_angles_from_dir(float3 dir, float3 iso, float sad) {$/;"	f	class:BEAM
calc_bbox_precomp_2d_size	include/server/brain_defs.h	/^    int calc_bbox_precomp_2d_size;$/;"	m	struct:CONSTANTS
calc_bbox_size	include/server/brain_defs.h	/^    uint3 calc_bbox_size;$/;"	m	struct:CONSTANTS
calc_bbox_start	include/server/brain_defs.h	/^    uint3 calc_bbox_start; \/\/ # of voxels from dicom origin to bounding box$/;"	m	struct:CONSTANTS
calc_dir_from_source	DoseCalcIO/beam.cpp	/^CUDEV_FXN float3 BEAM::calc_dir_from_source()    const {$/;"	f	class:BEAM
calc_dir_from_source	DoseCalcIO/beam.cpp	/^CUDEV_FXN float3 BEAM::calc_dir_from_source(float3 iso, float3 source) {$/;"	f	class:BEAM
calc_source_from_angles	DoseCalcIO/beam.cpp	/^CUDEV_FXN float3 BEAM::calc_source_from_angles() const {$/;"	f	class:BEAM
calc_source_from_angles	DoseCalcIO/beam.cpp	/^CUDEV_FXN float3 BEAM::calc_source_from_angles(float gantry_rot_rad, float couch_rot_rad, float3 iso, float sad) {$/;"	f	class:BEAM
calc_source_from_dir	DoseCalcIO/beam.cpp	/^CUDEV_FXN float3 BEAM::calc_source_from_dir()    const {$/;"	f	class:BEAM
calc_source_from_dir	DoseCalcIO/beam.cpp	/^CUDEV_FXN float3 BEAM::calc_source_from_dir(float3 dir, float3 iso, float sad) {$/;"	f	class:BEAM
calcnt	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__syscall_slong_t calcnt; $/;"	m	struct:timex	file:
calculate_branches	include/client/dummy_defs.h	/^    void calculate_branches()$/;"	f	class:MGCS_PARAMS
calculate_servers	include/client/dummy_defs.h	/^    void calculate_servers()$/;"	f	class:MGCS_PARAMS
capacity	include/rapidjson/allocators.h	/^        size_t capacity;    \/\/!< Capacity of the chunk in bytes (excluding the header itself).$/;"	m	struct:MemoryPoolAllocator::ChunkHeader
capacity	include/rapidjson/document.h	/^        SizeType capacity;$/;"	m	struct:GenericValue::ArrayData
capacity	include/rapidjson/document.h	/^        SizeType capacity;$/;"	m	struct:GenericValue::ObjectData
cend	tests/utils/generate_beamlist.py	/^    cend   =  90$/;"	v
check	include/cuda-common/helper_cuda.h	/^void check(T result, char const *const func, const char *const file, int const line)$/;"	f
checkCmdLineFlag	include/cuda-common/helper_string.h	/^inline bool checkCmdLineFlag(const int argc, const char **argv, const char *string_ref)$/;"	f
checkCudaCapabilities	include/cuda-common/helper_cuda.h	/^inline bool checkCudaCapabilities(int major_version, int minor_version)$/;"	f
checkCudaErrors	include/cuda-common/helper_cuda.h	999;"	d
check_bounds	DoseCalcIO/volume.h	/^        bool check_bounds(int3 coords) { return (coords.x>=0 && coords.y>=0 && coords.z>=0 &&$/;"	f	class:Volume
check_bounds	DoseCalcIO/volume.h	/^        bool check_bounds(uint idx) { return (idx < nvoxels()); }$/;"	f	class:Volume
check_bounds	DoseCalcIO/volume.h	/^        bool check_bounds(uint x, uint y, uint z) { return (x < size.x && y < size.y && z < size.z); }$/;"	f	class:Volume
check_bounds	DoseCalcIO/volume.h	/^        bool check_bounds(uint3 coords) { return (coords.x < size.x && coords.y < size.y && coords.z < size.z); }$/;"	f	class:Volume
check_file	extern/python/utils/fmo_io.py	/^def check_file(f):$/;"	f
chooseContours	RTClasses/rtstruct.cpp	/^RTStruct::chooseContours()$/;"	f	class:RTStruct
chunkHead_	include/rapidjson/allocators.h	/^    ChunkHeader *chunkHead_;    \/\/!< Head of the chunk linked-list. Only the head chunk serves allocation.$/;"	m	class:MemoryPoolAllocator
chunk_capacity_	include/rapidjson/allocators.h	/^    size_t chunk_capacity_;     \/\/!< The minimum capacity of chunk when they are allocated.$/;"	m	class:MemoryPoolAllocator
clamp	include/cuda-common/helper_math.h	/^inline __device__ __host__ float clamp(float f, float a, float b)$/;"	f
clamp	include/cuda-common/helper_math.h	/^inline __device__ __host__ float2 clamp(float2 v, float a, float b)$/;"	f
clamp	include/cuda-common/helper_math.h	/^inline __device__ __host__ float2 clamp(float2 v, float2 a, float2 b)$/;"	f
clamp	include/cuda-common/helper_math.h	/^inline __device__ __host__ float3 clamp(float3 v, float a, float b)$/;"	f
clamp	include/cuda-common/helper_math.h	/^inline __device__ __host__ float3 clamp(float3 v, float3 a, float3 b)$/;"	f
clamp	include/cuda-common/helper_math.h	/^inline __device__ __host__ float4 clamp(float4 v, float a, float b)$/;"	f
clamp	include/cuda-common/helper_math.h	/^inline __device__ __host__ float4 clamp(float4 v, float4 a, float4 b)$/;"	f
clamp	include/cuda-common/helper_math.h	/^inline __device__ __host__ int clamp(int f, int a, int b)$/;"	f
clamp	include/cuda-common/helper_math.h	/^inline __device__ __host__ int2 clamp(int2 v, int a, int b)$/;"	f
clamp	include/cuda-common/helper_math.h	/^inline __device__ __host__ int2 clamp(int2 v, int2 a, int2 b)$/;"	f
clamp	include/cuda-common/helper_math.h	/^inline __device__ __host__ int3 clamp(int3 v, int a, int b)$/;"	f
clamp	include/cuda-common/helper_math.h	/^inline __device__ __host__ int3 clamp(int3 v, int3 a, int3 b)$/;"	f
clamp	include/cuda-common/helper_math.h	/^inline __device__ __host__ int4 clamp(int4 v, int a, int b)$/;"	f
clamp	include/cuda-common/helper_math.h	/^inline __device__ __host__ int4 clamp(int4 v, int4 a, int4 b)$/;"	f
clamp	include/cuda-common/helper_math.h	/^inline __device__ __host__ uint clamp(uint f, uint a, uint b)$/;"	f
clamp	include/cuda-common/helper_math.h	/^inline __device__ __host__ uint2 clamp(uint2 v, uint a, uint b)$/;"	f
clamp	include/cuda-common/helper_math.h	/^inline __device__ __host__ uint2 clamp(uint2 v, uint2 a, uint2 b)$/;"	f
clamp	include/cuda-common/helper_math.h	/^inline __device__ __host__ uint3 clamp(uint3 v, uint a, uint b)$/;"	f
clamp	include/cuda-common/helper_math.h	/^inline __device__ __host__ uint3 clamp(uint3 v, uint3 a, uint3 b)$/;"	f
clamp	include/cuda-common/helper_math.h	/^inline __device__ __host__ uint4 clamp(uint4 v, uint a, uint b)$/;"	f
clamp	include/cuda-common/helper_math.h	/^inline __device__ __host__ uint4 clamp(uint4 v, uint4 a, uint4 b)$/;"	f
clear_temp_files	dosecalc-preprocess/main.cu	/^void clear_temp_files() {$/;"	f
clock_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef __clock_t clock_t; $/;"	t	file:
clockid_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef __clockid_t clockid_t; $/;"	t	file:
closeto	Utilities/math.cpp	/^bool closeto(float a, float b, float tolerance) {$/;"	f
code_	include/rapidjson/error/error.h	/^    ParseErrorCode code_;$/;"	m	struct:ParseResult
codepoint	include/rapidjson/internal/regex.h	/^        unsigned codepoint;$/;"	m	struct:internal::GenericRegex::State
codepoint_	include/rapidjson/internal/regex.h	/^    unsigned codepoint_;$/;"	m	class:internal::DecodedStream
coll	DoseCalcIO/beam.h	/^        float  coll;            \/\/ Collimator Angle [rad]$/;"	m	class:BEAM
coll_rot_rad	DoseCalcIO/beam.h	/^            float       coll_rot_rad;     \/\/ Collimator Angle [rad]$/;"	m	struct:BEAM::COMP_BEAM_T
colors	include/profile.h	/^const uint32_t colors[] = { 0xff00ff00, 0xff0000ff, 0xffffff00, 0xffff00ff, 0xff00ffff, 0xffff0000, 0xffffffff };$/;"	v
comparison_fn_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef __compar_fn_t comparison_fn_t; $/;"	t	file:
config_file	dosecalc-preprocess/argparser.h	/^    std::string  config_file;$/;"	m	struct:CLIArgs
configure_beamlet_grid	dosecalc-beamlet/nvbbRayConvolve_host.cu	/^PILLAR_GRID configure_beamlet_grid($/;"	f
const	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	10;"	d	file:
constant	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__syscall_slong_t constant; $/;"	m	struct:timex	file:
constants	dosecalc-beam/main.cu	/^CONSTANTS*   constants;$/;"	v
constants	dosecalc-beamlet/main.cu	/^CONSTANTS*   constants;$/;"	v
conv_phi_deg	include/server/brain_defs.h	/^    float* conv_phi_deg;    \/\/ array of convolution phi   angles indexed by "ray_index"$/;"	m	struct:CONSTANTS
conv_phi_file	DoseCalcIO/paths.h	/^        std::string conv_phi_file() { return "convolution_phi_angles"; }$/;"	f	class:Paths
conv_tX	dosecalc-beam/nvbbRayConvolve_device.cu	84;"	d	file:
conv_tY	dosecalc-beam/nvbbRayConvolve_device.cu	85;"	d	file:
conv_tZ	dosecalc-beam/nvbbRayConvolve_device.cu	86;"	d	file:
conv_theta_deg	include/server/brain_defs.h	/^    float* conv_theta_deg;  \/\/ array of convolution theta angles indexed by "ray_index"$/;"	m	struct:CONSTANTS
conv_theta_file	DoseCalcIO/paths.h	/^        std::string conv_theta_file() { return "convolution_theta_angles"; }$/;"	f	class:Paths
copyOptimization	include/rapidjson/stream.h	/^    enum { copyOptimization = 0 };$/;"	e	enum:StreamTraits::__anon12
copyOptimization	include/rapidjson/stream.h	/^    enum { copyOptimization = 1 };$/;"	e	enum:StreamTraits::__anon13
copyOptimization	include/rapidjson/stream.h	/^    enum { copyOptimization = 1 };$/;"	e	enum:StreamTraits::__anon14
copyROI	RTClasses/rtstruct.cpp	/^RTStruct::copyROI( int r, ROI_DATA *roi_copy, int c )$/;"	f	class:RTStruct
copy_file	DoseCalcIO/io_helpers.cpp	/^    int copy_file(const std::string& oldpath, const std::string& newpath) {$/;"	f	namespace:dcio
copysign	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline double copysign(double a, float b) $/;"	f	file:
copysign	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline double copysign(float a, double b) $/;"	f	file:
cospi	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline float cospi(float a) $/;"	f	file:
couch_gantry	extern/python/utils/show_fmap.py	/^couch_gantry = []$/;"	v
couch_rot_rad	DoseCalcIO/beam.h	/^            float       couch_rot_rad;    \/\/ Couch Angle      [rad]$/;"	m	struct:BEAM::COMP_BEAM_T
count	include/rapidjson/schema.h	/^        SizeType count;$/;"	m	struct:internal::Schema::SchemaArray
count_	include/rapidjson/filereadstream.h	/^    size_t count_;  \/\/!< Number of characters read$/;"	m	class:FileReadStream
count_	include/rapidjson/internal/biginteger.h	/^    size_t count_;$/;"	m	class:internal::BigInteger
count_	include/rapidjson/istreamwrapper.h	/^    size_t count_;  \/\/!< Number of characters read. Note:$/;"	m	class:BasicIStreamWrapper
counter	Utilities/timing.h	/^        double counter = 0.0;$/;"	m	class:Timer
create_directory	DoseCalcIO/io_helpers.cpp	/^    int create_directory(const std::string& dir, const bool exist_ok, const mode_t perms) {$/;"	f	namespace:dcio
create_fluence_map	extern/python/utils/fmo_io.py	/^def create_fluence_map(wts, beamlet_idx, fmap_shape):$/;"	f
create_options_string	include/client/dummy_defs.h	/^    void create_options_string( char * options )$/;"	f	class:MGCS_PARAMS
crop_end	DoseCalcIO/io_data_structs.h	/^    CUDEV_FXN uint3 crop_end() { return crop_start + crop_size; }$/;"	f	struct:ArrayProps
crop_size	DoseCalcIO/io_data_structs.h	/^    uint3 crop_size;              \/\/ size of calc_bbox$/;"	m	struct:ArrayProps
crop_start	DoseCalcIO/io_data_structs.h	/^    uint3 crop_start;             \/\/ start indices of calc_bbox relative to original dicom volume size$/;"	m	struct:ArrayProps
cross	include/cuda-common/helper_math.h	/^inline __host__ __device__ float3 cross(float3 a, float3 b)$/;"	f
cspace	tests/utils/generate_beamlist.py	/^    cspace = args.spacing_couch$/;"	v
cstart	tests/utils/generate_beamlist.py	/^    cstart = -90$/;"	v
ctlut_file	dosecalc-preprocess/argparser.h	/^    std::string  ctlut_file;                          \/\/ path to file defining CT number to mass density conversion$/;"	m	struct:CLIArgs
cudaArray_const_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef const cudaArray *cudaArray_const_t; $/;"	t	file:
cudaArray_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef struct cudaArray *cudaArray_t; $/;"	t	typeref:struct:cudaArray	file:
cudaBeamletRaytrace	dosecalc-beamlet/nvbbRayConvolve_device.cu	/^cudaBeamletRaytrace($/;"	f
cudaBindSurfaceToArray	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^cudaBindSurfaceToArray(const surface< T, dim>  &$/;"	f	file:
cudaBindTexture	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^cudaBindTexture(size_t *$/;"	f	file:
cudaBindTexture2D	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^cudaBindTexture2D(size_t *$/;"	f	file:
cudaBindTextureToArray	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^cudaBindTextureToArray(const texture< T, dim, readMode>  &$/;"	f	file:
cudaBindTextureToMipmappedArray	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^cudaBindTextureToMipmappedArray(const texture< T, dim, readMode>  &$/;"	f	file:
cudaCreateChannelDesc	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template< class T> inline cudaChannelFormatDesc cudaCreateChannelDesc() $/;"	f
cudaCreateChannelDesc	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char1> () $/;"	f
cudaCreateChannelDesc	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char2> () $/;"	f
cudaCreateChannelDesc	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char4> () $/;"	f
cudaCreateChannelDesc	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char> () $/;"	f
cudaCreateChannelDesc	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float1> () $/;"	f
cudaCreateChannelDesc	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float2> () $/;"	f
cudaCreateChannelDesc	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float4> () $/;"	f
cudaCreateChannelDesc	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float> () $/;"	f
cudaCreateChannelDesc	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int1> () $/;"	f
cudaCreateChannelDesc	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int2> () $/;"	f
cudaCreateChannelDesc	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int4> () $/;"	f
cudaCreateChannelDesc	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int> () $/;"	f
cudaCreateChannelDesc	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short1> () $/;"	f
cudaCreateChannelDesc	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short2> () $/;"	f
cudaCreateChannelDesc	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short4> () $/;"	f
cudaCreateChannelDesc	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short> () $/;"	f
cudaCreateChannelDesc	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< signed char> () $/;"	f
cudaCreateChannelDesc	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar1> () $/;"	f
cudaCreateChannelDesc	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar2> () $/;"	f
cudaCreateChannelDesc	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar4> () $/;"	f
cudaCreateChannelDesc	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uint1> () $/;"	f
cudaCreateChannelDesc	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uint2> () $/;"	f
cudaCreateChannelDesc	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uint4> () $/;"	f
cudaCreateChannelDesc	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned char> () $/;"	f
cudaCreateChannelDesc	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned short> () $/;"	f
cudaCreateChannelDesc	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned> () $/;"	f
cudaCreateChannelDesc	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort1> () $/;"	f
cudaCreateChannelDesc	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort2> () $/;"	f
cudaCreateChannelDesc	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort4> () $/;"	f
cudaCreateChannelDescHalf	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline cudaChannelFormatDesc cudaCreateChannelDescHalf() $/;"	f	file:
cudaCreateChannelDescHalf1	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline cudaChannelFormatDesc cudaCreateChannelDescHalf1() $/;"	f	file:
cudaCreateChannelDescHalf2	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline cudaChannelFormatDesc cudaCreateChannelDescHalf2() $/;"	f	file:
cudaCreateChannelDescHalf4	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline cudaChannelFormatDesc cudaCreateChannelDescHalf4() $/;"	f	file:
cudaCreateTexIso	dosecalc-preprocess/cudaMemFunctions.cu	/^void cudaCreateTexIso( FloatVolume& dens, FloatVolume& data, float iso_voxel, CTLUT* ctlut, bool hu2dens)$/;"	f
cudaDataType	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^} cudaDataType; $/;"	t	typeref:enum:cudaDataType_t	file:
cudaDataType_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^enum cudaDataType_t { $/;"	g	file:
cudaEventCreate	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline cudaError_t cudaEventCreate(cudaEvent_t *$/;"	f	file:
cudaFree	CudaUtilities/memory_manager.cu	/^void MemoryManager::cudaFree(void *devPtr) {$/;"	f	class:MemoryManager
cudaFreeArray	CudaUtilities/memory_manager.cu	/^void MemoryManager::cudaFreeArray(struct cudaArray *array) {$/;"	f	class:MemoryManager
cudaFuncGetAttributes	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^cudaFuncGetAttributes(cudaFuncAttributes *$/;"	f
cudaFuncSetAttribute	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^cudaFuncSetAttribute(T *$/;"	f	file:
cudaFuncSetCacheConfig	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^cudaFuncSetCacheConfig(T *$/;"	f	file:
cudaFuncSetSharedMemConfig	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^cudaFuncSetSharedMemConfig(T *$/;"	f	file:
cudaGetSymbolAddress	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^cudaGetSymbolAddress(void **$/;"	f	file:
cudaGetSymbolSize	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^cudaGetSymbolSize(size_t *$/;"	f	file:
cudaGetTextureAlignmentOffset	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^cudaGetTextureAlignmentOffset(size_t *$/;"	f	file:
cudaGraphExec_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef struct CUgraphExec_st *cudaGraphExec_t; $/;"	t	typeref:struct:CUgraphExec_st	file:
cudaHU2dens	dosecalc-preprocess/cudaMemFunctions.cu	/^void cudaHU2dens( FloatVolume& dens, FloatVolume& origCT, int gS, bool verbose )$/;"	f
cudaHostAlloc	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^cudaHostAlloc(T **$/;"	f	file:
cudaHostFn_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef void (*cudaHostFn_t)(void * userData); $/;"	t	file:
cudaHostGetDevicePointer	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^cudaHostGetDevicePointer(T **$/;"	f	file:
cudaLaunch	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^cudaLaunch(T *$/;"	f	file:
cudaLaunchCooperativeKernel	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^cudaLaunchCooperativeKernel(const T *$/;"	f	file:
cudaLaunchKernel	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^cudaLaunchKernel(const T *$/;"	f	file:
cudaMakeIsotropic	dosecalc-preprocess/kernels.cuh	/^cudaMakeIsotropic( float *iso, float3 voxelSize, float iso_voxel, uint3 iso_size )$/;"	f
cudaMakeIsotropicWithLUT	dosecalc-preprocess/kernels.cuh	/^cudaMakeIsotropicWithLUT( float *iso, float3 voxelSize, float iso_voxel, uint3 iso_size, float* lut_hunits, float* lut_massdens, int nlut)$/;"	f
cudaMalloc	CudaUtilities/memory_manager.cuh	/^        void cudaMalloc(T **devPtr, size_t size) {$/;"	f	class:MemoryManager
cudaMalloc	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^cudaMalloc(T **$/;"	f
cudaMalloc3D	CudaUtilities/memory_manager.cu	/^void MemoryManager::cudaMalloc3D(struct cudaPitchedPtr *pitchedDevPtr, struct cudaExtent extent) {$/;"	f	class:MemoryManager
cudaMalloc3DArray	CudaUtilities/memory_manager.cu	/^void MemoryManager::cudaMalloc3DArray(struct cudaArray **array, const struct cudaChannelFormatDesc *desc, struct cudaExtent extent, unsigned int flags) {$/;"	f	class:MemoryManager
cudaMallocArray	CudaUtilities/memory_manager.cu	/^void MemoryManager::cudaMallocArray(struct cudaArray **array, const struct cudaChannelFormatDesc *desc, size_t width, size_t height, unsigned int flags) {$/;"	f	class:MemoryManager
cudaMallocHost	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^cudaMallocHost(T **$/;"	f	file:
cudaMallocHost	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline cudaError_t cudaMallocHost(void **$/;"	f	file:
cudaMallocManaged	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^cudaMallocManaged(T **$/;"	f	file:
cudaMallocPitch	CudaUtilities/memory_manager.cu	/^void MemoryManager::cudaMallocPitch(void **devPtr, size_t *pitch, size_t width, size_t height) {$/;"	f	class:MemoryManager
cudaMallocPitch	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^cudaMallocPitch(T **$/;"	f	file:
cudaMemInfo	CudaUtilities/manage_gpu.cuh	/^class cudaMemInfo {$/;"	c	file:
cudaMemcpyFromSymbol	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^cudaMemcpyFromSymbol(void *$/;"	f	file:
cudaMemcpyFromSymbolAsync	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^cudaMemcpyFromSymbolAsync(void *$/;"	f	file:
cudaMemcpyToSymbol	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^cudaMemcpyToSymbol(const T &$/;"	f	file:
cudaMemcpyToSymbolAsync	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^cudaMemcpyToSymbolAsync(const T &$/;"	f	file:
cudaMipmappedArray_const_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef const cudaMipmappedArray *cudaMipmappedArray_const_t; $/;"	t	file:
cudaMipmappedArray_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef struct cudaMipmappedArray *cudaMipmappedArray_t; $/;"	t	typeref:struct:cudaMipmappedArray	file:
cudaOccupancyMaxActiveBlocksPerMultiprocessor	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^cudaOccupancyMaxActiveBlocksPerMultiprocessor(int *$/;"	f
cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(int *$/;"	f
cudaOccupancyMaxPotentialBlockSize	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^cudaOccupancyMaxPotentialBlockSize(int *$/;"	f	file:
cudaOccupancyMaxPotentialBlockSizeVariableSMem	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^cudaOccupancyMaxPotentialBlockSizeVariableSMem(int *$/;"	f	file:
cudaOccupancyMaxPotentialBlockSizeVariableSMemWithFlags	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^cudaOccupancyMaxPotentialBlockSizeVariableSMemWithFlags(int *$/;"	f	file:
cudaOccupancyMaxPotentialBlockSizeWithFlags	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^cudaOccupancyMaxPotentialBlockSizeWithFlags(int *$/;"	f	file:
cudaRaycast	dosecalc-preprocess/kernels.cuh	/^cudaRaycast($/;"	f
cudaRaytrace	dosecalc-beam/nvbbRayConvolve_device.cu	/^cudaRaytrace($/;"	f
cudaRaytrace_device	DoseCalcAlgo/cudaSiddon.cu	/^__device__ float cudaRaytrace_device($/;"	f
cudaResample	CudaUtilities/array_sum.cuh	/^__global__ void cudaResample($/;"	f
cudaSetupArgument	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^cudaSetupArgument(T $/;"	f	file:
cudaSiddon	DoseCalcAlgo/cudaSiddon.cu	/^void cudaSiddon($/;"	f
cudaSiddon_device	DoseCalcAlgo/cudaSiddon.cu	/^float cudaSiddon_device($/;"	f
cudaStreamAttachMemAsync	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^cudaStreamAttachMemAsync(cudaStream_t $/;"	f	file:
cudaStreamCallback_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef void (*cudaStreamCallback_t)(cudaStream_t stream, cudaError_t status, void * userData); $/;"	t	file:
cudaSum	CudaUtilities/array_sum.cu	/^__global__ void cudaSum( float *sum, float *single, uint64_t size ) {$/;"	f
cudaSumSubArray	CudaUtilities/array_sum.cu	/^__global__ void cudaSumSubArray ( float *sum, float *single, uint3 smin, uint3 single_size, uint3 sum_size )$/;"	f
cudaThreshold	CudaUtilities/array_sum.cuh	/^__global__ void cudaThreshold($/;"	f
cudaUnbindTexture	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^cudaUnbindTexture(const texture< T, dim, readMode>  &$/;"	f	file:
cuda_sum_device_float_dose	dosecalc-beam/nvbbRayConvolve_host.cu	/^cuda_sum_device_float_dose($/;"	f
cum_kernel_file	DoseCalcIO/paths.h	/^        std::string cum_kernel_file() { return temp_dir() + "\/cumulative_kernel.h5"; }$/;"	f	class:Paths
current_	include/rapidjson/encodedstream.h	/^    Ch current_;$/;"	m	class:AutoUTFInputStream
current_	include/rapidjson/encodedstream.h	/^    Ch current_;$/;"	m	class:EncodedInputStream
current_	include/rapidjson/filereadstream.h	/^    Ch *current_;$/;"	m	class:FileReadStream
current_	include/rapidjson/filewritestream.h	/^    char *current_;$/;"	m	class:FileWriteStream
cutDestroyThread	Utilities/multithreading.cpp	/^void cutDestroyThread(CUTThread thread)$/;"	f
cutEndThread	Utilities/multithreading.cpp	/^void cutEndThread(CUTThread thread)$/;"	f
cutStartThread	Utilities/multithreading.cpp	/^CUTThread cutStartThread(CUT_THREADROUTINE func, void *data)$/;"	f
cutWaitForThreads	Utilities/multithreading.cpp	/^void cutWaitForThreads(const CUTThread *threads, int num)$/;"	f
cyl_bessel_i0	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline float cyl_bessel_i0(float a) $/;"	f	file:
cyl_bessel_i1	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline float cyl_bessel_i1(float a) $/;"	f	file:
d	extern/python/utils/sumMcols.py	/^        d = f.create_dataset('dose', data=np.asarray(fulldose).reshape(doseshape), dtype=np.dtype('<f4'))$/;"	v
d	include/rapidjson/document.h	/^        double d;$/;"	m	union:GenericValue::Number
d	include/rapidjson/schema.h	/^        double d;$/;"	m	struct:internal::Hasher::Number
d_	include/rapidjson/document.h	/^        GenericDocument& d_;$/;"	m	struct:GenericDocument::ClearStackOnExit
d_	include/rapidjson/internal/ieee754.h	/^        double d_;$/;"	m	union:internal::Double::__anon1
d_dens_array	dosecalc-beam/nvbbRayConvolve_host.cu	/^cudaArray* d_dens_array     [ MAXIMUM_DEVICE_COUNT ] = {nullptr};$/;"	v
d_dens_array	dosecalc-beamlet/nvbbRayConvolve_host.cu	/^cudaArray* d_dens_array     [ MAXIMUM_DEVICE_COUNT ] = {nullptr};$/;"	v
d_kern_array	dosecalc-beam/nvbbRayConvolve_host.cu	/^cudaArray* d_kern_array     [ MAXIMUM_DEVICE_COUNT ] = {nullptr};$/;"	v
d_kern_array	dosecalc-beamlet/nvbbRayConvolve_host.cu	/^cudaArray* d_kern_array     [ MAXIMUM_DEVICE_COUNT ] = {nullptr};$/;"	v
d_spectrum_array	dosecalc-beam/nvbbRayConvolve_host.cu	/^cudaArray* d_spectrum_array [ MAXIMUM_DEVICE_COUNT ] = {nullptr};$/;"	v
d_spectrum_array	dosecalc-beamlet/nvbbRayConvolve_host.cu	/^cudaArray* d_spectrum_array [ MAXIMUM_DEVICE_COUNT ] = {nullptr};$/;"	v
dadd	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline double dadd(double a, double b, cudaRoundMode mode) $/;"	f	file:
daddr_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef __daddr_t daddr_t; $/;"	t	file:
data	DoseCalcIO/volume.h	/^        T* data()  {return _vect.data();};$/;"	f	class:Volume
data	DoseCalcIO/volume.h	/^        const T* data() const {return _vect.data();};$/;"	f	class:Volume
data_	include/rapidjson/document.h	/^        : data_() {$/;"	f	class:GenericValue
data_	include/rapidjson/document.h	/^    Data data_;$/;"	m	class:GenericValue
data_	include/rapidjson/document.h	/^    GenericValue() RAPIDJSON_NOEXCEPT : data_() { data_.f.flags = kNullFlag; }$/;"	f	class:GenericValue
data_	include/rapidjson/document.h	/^    GenericValue(Array a) RAPIDJSON_NOEXCEPT : data_(a.value_.data_) {$/;"	f	class:GenericValue
data_	include/rapidjson/document.h	/^    GenericValue(GenericValue&& rhs) RAPIDJSON_NOEXCEPT : data_(rhs.data_) {$/;"	f	class:GenericValue
data_	include/rapidjson/document.h	/^    GenericValue(Object o) RAPIDJSON_NOEXCEPT : data_(o.value_.data_) {$/;"	f	class:GenericValue
data_	include/rapidjson/document.h	/^    GenericValue(const Ch* s, SizeType length) RAPIDJSON_NOEXCEPT : data_() { SetStringRaw(StringRef(s, length)); }$/;"	f	class:GenericValue
data_	include/rapidjson/document.h	/^    explicit GenericValue(StringRefType s) RAPIDJSON_NOEXCEPT : data_() { SetStringRaw(s); }$/;"	f	class:GenericValue
data_	include/rapidjson/document.h	/^    explicit GenericValue(Type type) RAPIDJSON_NOEXCEPT : data_() {$/;"	f	class:GenericValue
data_	include/rapidjson/document.h	/^    explicit GenericValue(double d) RAPIDJSON_NOEXCEPT : data_() { data_.n.d = d; data_.f.flags = kNumberDoubleFlag; }$/;"	f	class:GenericValue
data_	include/rapidjson/document.h	/^    explicit GenericValue(float f) RAPIDJSON_NOEXCEPT : data_() { data_.n.d = static_cast<double>(f); data_.f.flags = kNumberDoubleFlag; }$/;"	f	class:GenericValue
data_	include/rapidjson/document.h	/^    explicit GenericValue(int i) RAPIDJSON_NOEXCEPT : data_() {$/;"	f	class:GenericValue
data_	include/rapidjson/document.h	/^    explicit GenericValue(int64_t i64) RAPIDJSON_NOEXCEPT : data_() {$/;"	f	class:GenericValue
data_	include/rapidjson/document.h	/^    explicit GenericValue(uint64_t u64) RAPIDJSON_NOEXCEPT : data_() {$/;"	f	class:GenericValue
data_	include/rapidjson/document.h	/^    explicit GenericValue(unsigned u) RAPIDJSON_NOEXCEPT : data_() {$/;"	f	class:GenericValue
data_array	RTClasses/rtimages.h	/^    float *data_array;$/;"	m	class:RTImage
data_dir	DoseCalcIO/paths.h	/^        std::string data_dir() { return m_data_dir; }$/;"	f	class:Paths
data_mat_parser	extern/python/read_dose_data.py	/^def data_mat_parser(input_fid, verbose=False, only_metadata=False):$/;"	f
data_max	RTClasses/rtimages.h	/^    float data_max;$/;"	m	class:RTImage
data_min	RTClasses/rtimages.h	/^    float data_min;$/;"	m	class:RTImage
data_order	RTClasses/rtimages.h	/^    DATAORDER data_order;$/;"	m	class:RTImage
data_origin	RTClasses/rtimages.h	/^    float3 data_origin;$/;"	m	class:RTImage
data_size	RTClasses/rtimages.h	/^    int3 data_size;$/;"	m	class:RTImage
dcio	DoseCalcIO/io_helpers.cpp	/^namespace dcio {$/;"	n	file:
dcio	DoseCalcIO/io_helpers.h	/^namespace dcio {$/;"	n
deactivate	Utilities/wqueue.h	/^        void deactivate() {$/;"	f	class:wqueue
deactivate	dosecalc-beamlet/sparsify_manager.cpp	/^void SparsifyManager::deactivate() {$/;"	f	class:SparsifyManager
debug	dosecalc-preprocess/argparser.h	/^    bool         debug               = false;$/;"	m	struct:CLIArgs
debugwrite	dosecalc-preprocess/main.cu	/^bool debugwrite; \/\/ write certain debug data to data\/temp\/* - set by cli arg --debug$/;"	v
debugwrite	include/server/brain_defs.h	/^    bool verbose, timing, debugwrite;$/;"	m	struct:DEVICE_THREAD_DATA
deg_azimuth	DoseCalcIO/beam.h	/^        CUDEV_FXN float deg_azimuth() const { return 180.0f * azimuth \/ CUDART_PI_F; }$/;"	f	class:BEAM
deg_coll	DoseCalcIO/beam.h	/^        CUDEV_FXN float deg_coll()    const { return 180.0f * coll \/ CUDART_PI_F; }$/;"	f	class:BEAM
deg_zenith	DoseCalcIO/beam.h	/^        CUDEV_FXN float deg_zenith()  const { return 180.0f * zenith \/ CUDART_PI_F; }$/;"	f	class:BEAM
delr	include/client/dummy_defs.h	/^    float delr;             \/\/ radial step size$/;"	m	class:MGCS_PARAMS
dens	extern/python/generate_phantom.py	/^    dens = density*np.ones((size[::-1]))$/;"	v
dense_array	dosecalc-beamlet/sparsify_manager.h	/^            std::unique_ptr<float[]> dense_array;$/;"	m	struct:SRWorker::SRData
dense_array	dosecalc-beamlet/sparsify_worker.h	/^    const float*   dense_array = nullptr;$/;"	m	struct:SparsifyData
density	extern/python/generate_phantom.py	/^    density   = 1.0             # uniform density              [unit: g\/cm^3]$/;"	v
density	include/server/brain_defs.h	/^    float *density;         \/\/ density data$/;"	m	struct:SHM_DATA
densvol	dosecalc-preprocess/argparser.h	/^    std::string  densvol;$/;"	m	struct:CLIArgs
dependencies	include/rapidjson/schema.h	/^        bool* dependencies;$/;"	m	struct:internal::Schema::Property
dependenciesSchema	include/rapidjson/schema.h	/^        const SchemaType* dependenciesSchema;$/;"	m	struct:internal::Schema::Property
dependenciesValidatorIndex	include/rapidjson/schema.h	/^        SizeType dependenciesValidatorIndex;$/;"	m	struct:internal::Schema::Property
depth_	include/rapidjson/schema.h	/^    unsigned depth_;$/;"	m	class:GenericSchemaValidator
description	tests/utils/generate_beamlist.py	/^                                     description="Generates beamlist files compatable with dosecalc_gpu at a discrete angular spacing")$/;"	v
detach	Utilities/thread.cpp	/^void Thread::detach() {$/;"	f	class:Thread
dev	dosecalc-preprocess/argparser.h	/^    unsigned int dev                 = 0;             \/\/ GPU id$/;"	m	struct:CLIArgs
dev_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef __dev_t dev_t; $/;"	t	file:
deviceHU2dens	dosecalc-preprocess/kernels.cuh	/^deviceHU2dens( float *CTunits, float *dens, uint3 count )$/;"	f
device_beam_arr	dosecalc-beam/main.cu	/^BEAM* device_beam_arr[MAXIMUM_DEVICE_COUNT];$/;"	v
device_beam_arr	dosecalc-beamlet/main.cu	/^BEAM* device_beam_arr[MAXIMUM_DEVICE_COUNT];$/;"	v
device_beam_arr	include/server/brain_defs.h	/^    BEAM* device_beam_arr;$/;"	m	struct:DEVICE_THREAD_DATA
device_data	dosecalc-beam/nvbbRayConvolve_host.cu	/^DEVICE_CONV_DATA  device_data       [ MAXIMUM_DEVICE_COUNT ] = {0};       \/\/ holds cuda execution device specific data$/;"	v
device_data	dosecalc-beamlet/nvbbRayConvolve_host.cu	/^DEVICE_CONV_DATA  device_data        [ MAXIMUM_DEVICE_COUNT ] = {};       \/\/ holds cuda execution device specific data$/;"	v
device_dose	dosecalc-beam/nvbbRayConvolve_host.cu	/^    float *device_dose;             \/\/ cleared and set for each beam calculation on each device$/;"	m	struct:DEVICE_CONV_DATA	file:
device_dose	dosecalc-beamlet/nvbbRayConvolve_host.cu	/^    float *device_dose;             \/\/ cleared and set for each beam calculation on each device$/;"	m	struct:DEVICE_CONV_DATA	file:
device_dose_accum	dosecalc-beamlet/nvbbRayConvolve_host.cu	/^float*            device_dose_accum  [ MAXIMUM_DEVICE_COUNT ] = {};       \/\/ holds accumulated dose for each device (summed in main.cu later)$/;"	v
device_nbeams	include/server/brain_defs.h	/^    int device_nbeams;$/;"	m	struct:DEVICE_THREAD_DATA
deviceid	include/server/brain_defs.h	/^    int nrays, n_unpackstreams, deviceid, gpuid;$/;"	m	struct:DEVICE_THREAD_DATA
dicom_date	RTClasses/rtimages.h	/^    std::string dicom_date;$/;"	m	class:RTImage
dicom_date	RTClasses/rtstruct.h	/^    std::string dicom_date;$/;"	m	class:RTStruct
dicom_dir	RTClasses/rtimages.h	/^    std::string dicom_dir;$/;"	m	class:RTImage
dicom_dir	RTClasses/rtstruct.h	/^    std::string dicom_dir;$/;"	m	class:RTStruct
dicom_dir	dosecalc-preprocess/argparser.h	/^    std::string  dicom_dir;$/;"	m	struct:CLIArgs
dicom_full_filename	RTClasses/rtstruct.h	/^    std::string dicom_full_filename;$/;"	m	class:RTStruct
dicom_start_cm	DoseCalcIO/io_data_structs.h	/^    float3      dicom_start_cm;       \/\/ coords of dicom start in [cm]$/;"	m	struct:HEADER_PATIENT
digits_	include/rapidjson/internal/biginteger.h	/^    Type digits_[kCapacity];$/;"	m	class:internal::BigInteger
dim1d	extern/python/utils/show_fmap.py	/^dim1d = math.ceil(nbeams\/dimlong)$/;"	v
dimlong	extern/python/utils/show_fmap.py	/^dimlong= math.ceil(math.sqrt(nbeams))$/;"	v
dir_exists	DoseCalcIO/io_helpers.cpp	/^    bool dir_exists(const std::string& dir) {$/;"	f	namespace:dcio
direction	DoseCalcIO/beam.h	/^            float       direction[3];     \/\/ norm. direction vector$/;"	m	struct:BEAM::COMP_BEAM_T
direction	DoseCalcIO/beam.h	/^        float3 direction;       \/\/ norm. direction vector$/;"	m	class:BEAM
direction	extern/python/fmaps.py	/^    def direction(self):$/;"	m	class:Beam
div_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^} div_t; $/;"	t	typeref:struct:__anon20	file:
dmul	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline double dmul(double a, double b, cudaRoundMode mode) $/;"	f	file:
documentStack_	include/rapidjson/schema.h	/^    internal::Stack<StateAllocator> documentStack_;  \/\/!< stack to store the current path of validating document (Ch)$/;"	m	class:GenericSchemaValidator
dose	dosecalc-beam/nvbbRayConvolve_host.cu	/^    float *dose;                    \/\/ storage of final dose for each beam (handled in sequence)$/;"	m	struct:DEVICE_CONV_DATA	file:
dose	dosecalc-beamlet/nvbbRayConvolve_host.cu	/^    float *dose;                    \/\/ storage of final dose for each beam$/;"	m	struct:DEVICE_CONV_DATA	file:
dose_Array	dosecalc-beam/nvbbRayConvolve_host.cu	/^    cudaArray *dose_Array;$/;"	m	struct:DEVICE_CONV_DATA	file:
dose_Array	dosecalc-beamlet/nvbbRayConvolve_host.cu	/^    cudaArray *dose_Array;$/;"	m	struct:DEVICE_CONV_DATA	file:
dose_mutex	include/server/brain_defs.h	/^    pthread_mutex_t* dose_mutex;$/;"	m	struct:DEVICE_THREAD_DATA
dosefile	extern/python/utils/sumMcols.py	/^    dosefile = args.dosefile$/;"	v
doseshape	extern/python/utils/sumMcols.py	/^    doseshape = meta_dict['calc_specs']["full_dicom_size"]$/;"	v
dot	include/cuda-common/helper_math.h	/^inline __host__ __device__ float dot(float2 a, float2 b)$/;"	f
dot	include/cuda-common/helper_math.h	/^inline __host__ __device__ float dot(float3 a, float3 b)$/;"	f
dot	include/cuda-common/helper_math.h	/^inline __host__ __device__ float dot(float4 a, float4 b)$/;"	f
dot	include/cuda-common/helper_math.h	/^inline __host__ __device__ int dot(int2 a, int2 b)$/;"	f
dot	include/cuda-common/helper_math.h	/^inline __host__ __device__ int dot(int3 a, int3 b)$/;"	f
dot	include/cuda-common/helper_math.h	/^inline __host__ __device__ int dot(int4 a, int4 b)$/;"	f
dot	include/cuda-common/helper_math.h	/^inline __host__ __device__ uint dot(uint2 a, uint2 b)$/;"	f
dot	include/cuda-common/helper_math.h	/^inline __host__ __device__ uint dot(uint3 a, uint3 b)$/;"	f
dot	include/cuda-common/helper_math.h	/^inline __host__ __device__ uint dot(uint4 a, uint4 b)$/;"	f
double2int	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline int double2int(double a, cudaRoundMode mode) $/;"	f	file:
double2ll	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline long long double2ll(double a, cudaRoundMode mode) $/;"	f	file:
double2uint	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned double2uint(double a, cudaRoundMode mode) $/;"	f	file:
double2ull	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned long long double2ull(double a, cudaRoundMode mode) $/;"	f	file:
double_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef double double_t; $/;"	t	file:
drand48_data	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^struct drand48_data { $/;"	s	file:
dst_	include/rapidjson/stream.h	/^    Ch* dst_;$/;"	m	struct:GenericInsituStringStream
dsub	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline double dsub(double a, double b, cudaRoundMode mode) $/;"	f	file:
dtoa	include/rapidjson/internal/dtoa.h	/^inline char* dtoa(double value, char* buffer, int maxDecimalPlaces = 324) {$/;"	f	namespace:internal
e	include/rapidjson/internal/diyfp.h	/^    int e;$/;"	m	struct:internal::DiyFp
elements	include/rapidjson/document.h	/^        GenericValue* elements;$/;"	m	struct:GenericValue::ArrayData
emptyString	include/rapidjson/document.h	/^    static const Ch emptyString[];$/;"	m	struct:GenericStringRef
emptyString	include/rapidjson/document.h	/^const CharType GenericStringRef<CharType>::emptyString[] = { CharType() };$/;"	m	class:GenericStringRef
end	DoseCalcIO/volume.h	/^    float3 end() const { return make_float3(start.x + spacing.x*size.x, start.y + spacing.y*size.y, start.z + spacing.z*size.z); }$/;"	f	struct:FrameOfReference
end	include/rapidjson/document.h	/^    MemberIterator end() const { return value_.MemberEnd(); }$/;"	f	class:GenericObject
end	include/rapidjson/document.h	/^    ValueIterator end() const { return value_.End(); }$/;"	f	class:GenericArray
end	include/rapidjson/internal/regex.h	/^        unsigned end;$/;"	m	struct:internal::GenericRegex::Range
end	include/server/brain_defs.h	/^    CUDEV_FXN inline float3 end() const {$/;"	f	struct:CONSTANTS
end_	include/rapidjson/memorystream.h	/^    const Ch* end_;     \/\/!< End of stream.$/;"	m	struct:MemoryStream
end_	include/rapidjson/pointer.h	/^        const Ch* end_;     \/\/!< Past-the-end position.$/;"	m	class:GenericPointer::PercentDecodeStream
end_ptr	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^int32_t *end_ptr; $/;"	m	struct:random_data	file:
energy	DoseCalcIO/kernel.h	/^    float  energy[MAX_KERNELS];$/;"	m	struct:MONO_KERNELS
enumCount_	include/rapidjson/schema.h	/^    SizeType enumCount_;$/;"	m	class:internal::Schema
enum_	include/rapidjson/schema.h	/^    uint64_t* enum_;$/;"	m	class:internal::Schema
eof_	include/rapidjson/filereadstream.h	/^    bool eof_;$/;"	m	class:FileReadStream
eps	DoseCalcIO/beam.cpp	91;"	d	file:
erfcinv	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline float erfcinv(float a) $/;"	f	file:
erfcx	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline float erfcx(float a) $/;"	f	file:
erfinv	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline float erfinv(float a) $/;"	f	file:
errcnt	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__syscall_slong_t errcnt; $/;"	m	struct:timex	file:
esterror	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__syscall_slong_t esterror; $/;"	m	struct:timex	file:
exclusiveMaximum_	include/rapidjson/schema.h	/^    bool exclusiveMaximum_;$/;"	m	class:internal::Schema
exclusiveMinimum_	include/rapidjson/schema.h	/^    bool exclusiveMinimum_;$/;"	m	class:internal::Schema
exp10	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline float exp10(float a) $/;"	f	file:
extra_debug	dosecalc-beam/main.cu	/^bool extra_debug = false;    \/\/ print between-kernel-execution data structures (dose, terma, density)$/;"	v
extra_debug	dosecalc-beamlet/main.cu	/^bool extra_debug = false;    \/\/ print between-kernel-execution data structures (dose, terma, density)$/;"	v
extra_verbose	dosecalc-beam/main.cu	/^bool extra_verbose = false; \/\/ print findBEV verbose output$/;"	v
extra_verbose	dosecalc-beamlet/main.cu	/^bool extra_verbose = false; \/\/ print findBEV verbose output$/;"	v
f	include/rapidjson/document.h	/^        Flag f;$/;"	m	union:GenericValue::Data
f	include/rapidjson/internal/diyfp.h	/^    uint64_t f;$/;"	m	struct:internal::DiyFp
fabs	include/cuda-common/helper_math.h	/^inline __host__ __device__ float2 fabs(float2 v)$/;"	f
fabs	include/cuda-common/helper_math.h	/^inline __host__ __device__ float3 fabs(float3 v)$/;"	f
fabs	include/cuda-common/helper_math.h	/^inline __host__ __device__ float4 fabs(float4 v)$/;"	f
factory	include/rapidjson/schema.h	/^    SchemaValidatorFactoryType& factory;$/;"	m	struct:internal::SchemaValidationContext
fast_cosf	CudaUtilities/dev_intrinsics.cuh	16;"	d	file:
fast_cosf	CudaUtilities/dev_intrinsics.cuh	9;"	d	file:
fast_powf	CudaUtilities/dev_intrinsics.cuh	12;"	d	file:
fast_powf	CudaUtilities/dev_intrinsics.cuh	19;"	d	file:
fast_sincosf	CudaUtilities/dev_intrinsics.cuh	11;"	d	file:
fast_sincosf	CudaUtilities/dev_intrinsics.cuh	18;"	d	file:
fast_sinf	CudaUtilities/dev_intrinsics.cuh	10;"	d	file:
fast_sinf	CudaUtilities/dev_intrinsics.cuh	17;"	d	file:
fast_sq	CudaUtilities/dev_intrinsics.cuh	13;"	d	file:
fast_sq	CudaUtilities/dev_intrinsics.cuh	20;"	d	file:
fd_mask	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef __fd_mask fd_mask; $/;"	t	file:
fd_set	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^} fd_set; $/;"	t	typeref:struct:__anon24	file:
fdividef	CudaUtilities/dev_intrinsics.cuh	/^inline __device__ float3 fdividef(const float3& a, const float3& b) {$/;"	f
fds_bits	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__fd_mask fds_bits[1024 \/ (8 * ((int)sizeof(__fd_mask)))]; $/;"	m	struct:__anon24	file:
fieldsize	extern/python/generate_phantom.py	/^    fieldsize = np.multiply(blt_size, fmap_size)$/;"	v
fig	extern/python/utils/show_fmap.py	/^fig = plt.figure()$/;"	v
file_exists	DoseCalcIO/io_helpers.cpp	/^    bool file_exists(const std::string& path) {$/;"	f	namespace:dcio
filename	RTClasses/rtimages.h	/^        std::string filename;$/;"	m	class:RTImage::SLICE_DATA
filename	dosecalc-beamlet/sparsify_worker.h	/^    std::string    filename;$/;"	m	struct:SparsifyData
filesize	DoseCalcIO/io_helpers.cpp	/^    int filesize(const std::string& filename) {$/;"	f	namespace:dcio
findCudaDevice	include/cuda-common/helper_cuda.h	/^inline int findCudaDevice(int argc, const char **argv)$/;"	f
findFluenceProjection	dosecalc-preprocess/cudaMemFunctions.cu	/^void findFluenceProjection($/;"	f
findREV	dosecalc-beam/nvbbRayConvolve_host.cu	/^static void findREV($/;"	f	file:
findREV	dosecalc-beamlet/nvbbRayConvolve_host.cu	/^static void findREV($/;"	f	file:
first	dosecalc-preprocess/fmapProcessing.cpp	/^    int first, last;$/;"	m	struct:ActiveSegment	file:
first_scatter	DoseCalcIO/kernel.h	/^    first_scatter,$/;"	m	class:KERNEL_CATEGORIES
flags	include/rapidjson/document.h	/^        uint16_t flags;$/;"	m	struct:GenericValue::Flag
float2double	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline double float2double(float a, cudaRoundMode mode) $/;"	f	file:
float2int	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline int float2int(float a, cudaRoundMode mode) $/;"	f	file:
float2int_ceil	CudaUtilities/vector_ops.h	/^CUDEV_FXN inline int3 float2int_ceil(const float3& a) {$/;"	f
float2int_floor	CudaUtilities/vector_ops.h	/^CUDEV_FXN inline int3 float2int_floor(const float3& a) {$/;"	f
float2uint	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned float2uint(float a, cudaRoundMode mode) $/;"	f	file:
float2uint_ceil	CudaUtilities/vector_ops.h	/^CUDEV_FXN inline uint3 float2uint_ceil(const float3& a) {$/;"	f
float2uint_floor	CudaUtilities/vector_ops.h	/^CUDEV_FXN inline uint3 float2uint_floor(const float3& a) {$/;"	f
float_as_int	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline int float_as_int(float a) $/;"	f	file:
float_as_uint	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned float_as_uint(float a) $/;"	f	file:
float_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef float float_t; $/;"	t	file:
floorf	include/cuda-common/helper_math.h	/^inline __host__ __device__ float2 floorf(float2 v)$/;"	f
floorf	include/cuda-common/helper_math.h	/^inline __host__ __device__ float3 floorf(float3 v)$/;"	f
floorf	include/cuda-common/helper_math.h	/^inline __host__ __device__ float4 floorf(float4 v)$/;"	f
fluence	DoseCalcIO/kernel.h	/^    float  fluence[MAX_KERNELS];$/;"	m	struct:MONO_KERNELS
fluence	extern/python/generate_phantom.py	/^    fluence   = 1.0             # uniform fluence              [unit: arb]$/;"	v
fluence_map	DoseCalcIO/beam.h	/^        std::vector<float> fluence_map; \/\/ linear-storage beamlet weights$/;"	m	class:BEAM
fma	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline double fma(double a, double b, double c, cudaRoundMode mode) $/;"	f	file:
fmap	extern/python/utils/show_fmap.py	/^        fmap = beam_meta.attrs['fmap_weights']$/;"	v
fmap_dims	DoseCalcIO/beam.h	/^            uint        fmap_dims[2];     \/\/ fluence map dims$/;"	m	struct:BEAM::COMP_BEAM_T
fmap_dims	dosecalc-preprocess/argparser.h	/^    uint2        fmap_dims           = {40,40};       \/\/ bi-directional size of fluence map$/;"	m	struct:CLIArgs
fmap_fname	DoseCalcIO/beam.h	/^        std::string fmap_fname; \/\/ optimization results \/ binary mask$/;"	m	class:BEAM
fmap_is_apertureready	dosecalc-preprocess/fmapProcessing.cpp	/^int fmap_is_apertureready(const std::vector<float>& fluence_map, uint2 fmap_size) {$/;"	f
fmap_post_apertureready	dosecalc-preprocess/fmapProcessing.cpp	/^void fmap_post_apertureready(std::vector<float>& fluence_map, uint2 fmap_size, float fill_val) {$/;"	f
fmap_size	DoseCalcIO/beam.h	/^        uint2  fmap_size;       \/\/ fluence map dims$/;"	m	class:BEAM
fmap_size	extern/python/generate_phantom.py	/^    fmap_size = (1, 1)          # fluence map dimensions (X, Z)$/;"	v
fmap_wts	extern/python/generate_phantom.py	/^    fmap_wts = fluence*np.ones(fmap_size)$/;"	v
fmaps	extern/python/fmaps.py	/^    fmaps = Fmaps()$/;"	v	class:Fmaps
fmaps	extern/python/generate_phantom.py	/^    fmaps = Fmaps()$/;"	v
fmaps	extern/python/utils/show_fmap.py	/^fmaps = []$/;"	v
fmaps_file	dosecalc-preprocess/argparser.h	/^    std::string  fmaps_file;                          \/\/ path to file containing beam metadata and manual fluence maps$/;"	m	struct:CLIArgs
fmaxf	include/cuda-common/helper_math.h	/^inline __host__ __device__ float2 fmaxf(float2 a, float2 b)$/;"	f
fmaxf	include/cuda-common/helper_math.h	/^inline __host__ __device__ float3 fmaxf(float3 a, float3 b)$/;"	f
fmaxf	include/cuda-common/helper_math.h	/^inline __host__ __device__ float4 fmaxf(float4 a, float4 b)$/;"	f
fmaxf	include/cuda-common/helper_math.h	/^inline float fmaxf(float a, float b)$/;"	f
fminf	include/cuda-common/helper_math.h	/^inline  __host__ __device__ float2 fminf(float2 a, float2 b)$/;"	f
fminf	include/cuda-common/helper_math.h	/^inline  __host__ __device__ float4 fminf(float4 a, float4 b)$/;"	f
fminf	include/cuda-common/helper_math.h	/^inline __host__ __device__ float3 fminf(float3 a, float3 b)$/;"	f
fminf	include/cuda-common/helper_math.h	/^inline float fminf(float a, float b)$/;"	f
fmodf	include/cuda-common/helper_math.h	/^inline __host__ __device__ float2 fmodf(float2 a, float2 b)$/;"	f
fmodf	include/cuda-common/helper_math.h	/^inline __host__ __device__ float3 fmodf(float3 a, float3 b)$/;"	f
fmodf	include/cuda-common/helper_math.h	/^inline __host__ __device__ float4 fmodf(float4 a, float4 b)$/;"	f
formatOptions_	include/rapidjson/prettywriter.h	/^    PrettyFormatOptions formatOptions_;$/;"	m	class:PrettyWriter
formatted_memory_print	CudaUtilities/manage_gpu.cu	/^void cudaMemInfo::formatted_memory_print(int gpuid, const char* memo, float q1, float q2, const char* unit) {$/;"	f	class:cudaMemInfo
formatter_class	extern/python/utils/sumMcols.py	/^                                     formatter_class=argparse.ArgumentDefaultsHelpFormatter)$/;"	v
fp_	include/rapidjson/filereadstream.h	/^    std::FILE* fp_;$/;"	m	class:FileReadStream
fp_	include/rapidjson/filewritestream.h	/^    std::FILE* fp_;$/;"	m	class:FileWriteStream
fptr	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^int32_t *fptr; $/;"	m	struct:random_data	file:
fracf	include/cuda-common/helper_math.h	/^inline __host__ __device__ float fracf(float v)$/;"	f
fracf	include/cuda-common/helper_math.h	/^inline __host__ __device__ float2 fracf(float2 v)$/;"	f
fracf	include/cuda-common/helper_math.h	/^inline __host__ __device__ float3 fracf(float3 v)$/;"	f
fracf	include/cuda-common/helper_math.h	/^inline __host__ __device__ float4 fracf(float4 v)$/;"	f
frange	tests/utils/generate_beamlist.py	/^def frange(x, y, jump=1.0):$/;"	f
free	CudaUtilities/manage_gpu.cuh	/^        float free;$/;"	m	class:cudaMemInfo	file:
freeCudaTexture	dosecalc-beam/nvbbRayConvolve_host.cu	/^freeCudaTexture(int ndevices, int *gpuid_arr)$/;"	f
freeCudaTexture	dosecalc-beamlet/nvbbRayConvolve_host.cu	/^freeCudaTexture(int ndevices, int *gpuid_arr, bool debugwrite)$/;"	f
freeROI	RTClasses/rtstruct.cpp	/^RTStruct::freeROI( ROI_DATA *roi_copy, int c )$/;"	f	class:RTStruct
free_data	DoseCalcIO/binary_io.cpp	/^int free_data( CONSTANTS* host, SHM_DATA *data ) {$/;"	f
freq	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__syscall_slong_t freq; $/;"	m	struct:timex	file:
fsblkcnt64_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef __fsblkcnt64_t fsblkcnt64_t; $/;"	t	file:
fsblkcnt_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef __fsblkcnt_t fsblkcnt_t; $/;"	t	file:
fsfilcnt64_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef __fsfilcnt64_t fsfilcnt64_t; $/;"	t	file:
fsfilcnt_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef __fsfilcnt_t fsfilcnt_t; $/;"	t	file:
fsid_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef __fsid_t fsid_t; $/;"	t	file:
ftoi	include/cuda-common/helper_cuda.h	/^inline int ftoi(float value)$/;"	f
full_dicom_size	DoseCalcIO/io_data_structs.h	/^    uint3       full_dicom_size;      \/\/ size of full dicom volume$/;"	m	struct:HEADER_PATIENT
fulldose	extern/python/utils/sumMcols.py	/^    fulldose = A.sum(1)$/;"	v
g	extern/python/utils/sumMcols.py	/^        g = f.create_group('filetype')$/;"	v
gantry_rot_rad	DoseCalcIO/beam.h	/^            float       gantry_rot_rad;   \/\/ Gantry Angle     [rad]$/;"	m	struct:BEAM::COMP_BEAM_T
gend	tests/utils/generate_beamlist.py	/^    gend   = 360$/;"	v
generate	extern/python/fmaps.py	/^    def generate(self, fname):$/;"	m	class:Fmaps
generate	extern/python/volume.py	/^    def generate(self, fname):$/;"	m	class:Volume
generateContourMask	dosecalc-preprocess/cudaMemFunctions.cu	/^Volume<uint8_t> generateContourMask(StructureSet& contour, FrameOfReference ctframe, FrameOfReference densframe, void* texRay ) {$/;"	f
getArrayVoxel	RTClasses/rtimages.h	/^    float        getArrayVoxel(int i, int j, int k)           { return data_array[i + data_size.x*(j + data_size.y*k)]; };$/;"	f	class:RTImage
getAttributeByName	extern/matlab/open_masks.m	/^function [ val ] = getAttributeByName(attrs, name, exact)$/;"	f
getAttributeByName	extern/matlab/read_dose_data.m	/^function val = getAttributeByName(attrs, name, exact)$/;"	f
getCmdLineArgumentFloat	include/cuda-common/helper_string.h	/^inline float getCmdLineArgumentFloat(const int argc, const char **argv, const char *string_ref)$/;"	f
getCmdLineArgumentInt	include/cuda-common/helper_string.h	/^inline int getCmdLineArgumentInt(const int argc, const char **argv, const char *string_ref)$/;"	f
getCmdLineArgumentString	include/cuda-common/helper_string.h	/^inline bool getCmdLineArgumentString(const int argc, const char **argv,$/;"	f
getCmdLineArgumentValue	include/cuda-common/helper_string.h	/^inline bool getCmdLineArgumentValue(const int argc, const char **argv, const char *string_ref, T *value)$/;"	f
getDataArray	RTClasses/rtimages.h	/^    float*       getDataArray()                               { return data_array; };$/;"	f	class:RTImage
getDataMax	RTClasses/rtimages.h	/^    float        getDataMax()                                 { return data_max; };$/;"	f	class:RTImage
getDataMin	RTClasses/rtimages.h	/^    float        getDataMin()                                 { return data_min; };$/;"	f	class:RTImage
getDataSize	RTClasses/rtimages.h	/^    int3         getDataSize()                                { return data_size; };$/;"	f	class:RTImage
getDicomDirectory	RTClasses/rtimages.h	/^    std::string  getDicomDirectory()                          { return dicom_dir; };$/;"	f	class:RTImage
getDicomDirectory	RTClasses/rtstruct.h	/^    char*  getDicomDirectory()$/;"	f	class:RTStruct
getDicomFilename	RTClasses/rtstruct.h	/^    char*  getDicomFilename()$/;"	f	class:RTStruct
getFileCompoundType	DoseCalcIO/beam.cpp	/^H5::CompType BEAM::getFileCompoundType() {$/;"	f	class:BEAM
getFileExtension	include/cuda-common/helper_string.h	/^inline int getFileExtension(char *filename, char **extension)$/;"	f
getGroupByName	extern/matlab/open_masks.m	/^function [ grp ] = getGroupByName(loc, name, exact)$/;"	f
getGroupByName	extern/matlab/read_dose_data.m	/^function grp = getGroupByName(loc, name, exact)$/;"	f
getImageCount	RTClasses/rtimages.h	/^    unsigned int getImageCount()                              { return image_count; };$/;"	f	class:RTImage
getLastCudaError	include/cuda-common/helper_cuda.h	1002;"	d
getMemCompoundType	DoseCalcIO/beam.cpp	/^H5::CompType BEAM::getMemCompoundType() {$/;"	f	class:BEAM
getNumberOfROIs	RTClasses/rtstruct.h	/^    unsigned int    getNumberOfROIs()$/;"	f	class:RTStruct
getROICapacities	DoseCalcIO/roi.cpp	/^std::vector<uint64_t> ROIMaskList::getROICapacities() {$/;"	f	class:ROIMaskList
getROICentroid	DoseCalcIO/roi.cpp	/^float3 getROICentroid(Volume<uint8_t>& mask, const FrameOfReference& frame) {$/;"	f
getROIColor	RTClasses/rtstruct.h	/^    int3    getROIColor( unsigned int r )$/;"	f	class:RTStruct
getROIExtents	DoseCalcIO/roi.cpp	/^ArrayProps getROIExtents(const StructureSet& roi, const FrameOfReference& frame, bool verbose) {$/;"	f
getROIIndex	DoseCalcIO/roi.cpp	/^int getROIIndex(RTStruct& rtstruct, const std::string& search, bool exact, bool verbose) {$/;"	f
getROILoadDataSwitch	RTClasses/rtstruct.h	/^    bool   getROILoadDataSwitch( unsigned int c )$/;"	f	class:RTStruct
getROIName	RTClasses/rtstruct.h	/^    char*  getROIName( unsigned int r )$/;"	f	class:RTStruct
getROINames	DoseCalcIO/roi.cpp	/^std::vector<std::string> ROIMaskList::getROINames() {$/;"	f	class:ROIMaskList
getROINamesFromJSON	DoseCalcIO/json.cpp	/^strvect getROINamesFromJSON(std::string json_path) {$/;"	f
getROINumber	RTClasses/rtstruct.h	/^    int    getROINumber( unsigned int r )$/;"	f	class:RTStruct
getROISubCntrCount	RTClasses/rtstruct.h	/^    unsigned int    getROISubCntrCount( unsigned int r )$/;"	f	class:RTStruct
getROISubCntrPointCount	RTClasses/rtstruct.h	/^    unsigned int    getROISubCntrPointCount( unsigned int r, unsigned int s )$/;"	f	class:RTStruct
getROISubCntrPoints	RTClasses/rtstruct.h	/^    float* getROISubCntrPoints( unsigned int r, unsigned int s )$/;"	f	class:RTStruct
getROITotalPointsCount	RTClasses/rtstruct.h	/^    unsigned int    getROITotalPointsCount( unsigned int r )$/;"	f	class:RTStruct
getRescaleIntercept	RTClasses/rtimages.h	/^    float        getRescaleIntercept()                        { return rescale_intercept; };$/;"	f	class:RTImage
getRescaleSlope	RTClasses/rtimages.h	/^    float        getRescaleSlope()                            { return rescale_slope; };$/;"	f	class:RTImage
getSOPTypeName	RTClasses/rtimages.h	/^    std::string getSOPTypeName() { return getSOPTypeName(sop_type); }$/;"	f	class:RTImage
getSOPTypeName	RTClasses/rtimages.h	/^    std::string getSOPTypeName(SOPTYPE t) {$/;"	f	class:RTImage
getSliceFilename	RTClasses/rtimages.h	/^    std::string  getSliceFilename(unsigned int i)             { return slice[i].filename; };$/;"	f	class:RTImage
getSliceImageOrientationPatient	RTClasses/rtimages.h	/^    std::array<float, 6> getSliceImageOrientationPatient(unsigned int i) { return slice[i].image_orientation_patient; }$/;"	f	class:RTImage
getSliceImagePositionPatient	RTClasses/rtimages.h	/^    float3       getSliceImagePositionPatient(unsigned int i) { return slice[i].image_position_patient; };$/;"	f	class:RTImage
getSliceInstanceNumber	RTClasses/rtimages.h	/^    int          getSliceInstanceNumber(unsigned int i)       { return slice[i].instance_number; };$/;"	f	class:RTImage
getSlicePatientPosition	RTClasses/rtimages.h	/^    std::string  getSlicePatientPosition(unsigned int i)      { return slice[i].patient_position; }$/;"	f	class:RTImage
getSliceReferenceFrameUID	RTClasses/rtimages.h	/^    std::string  getSliceReferenceFrameUID(unsigned int i)    { return slice[i].reference_frame_uid; };$/;"	f	class:RTImage
getSliceSOPInstanceUID	RTClasses/rtimages.h	/^    std::string  getSliceSOPInstanceUID(unsigned int i)       { return slice[i].sop_instance_uid; };$/;"	f	class:RTImage
getSubCntrPoint	RTClasses/rtstruct.cpp	/^RTStruct::getSubCntrPoint( unsigned int r, unsigned int s, unsigned int p )$/;"	f	class:RTStruct
getVoxelSize	RTClasses/rtimages.h	/^    float3       getVoxelSize()                               { return voxel_size; };$/;"	f	class:RTImage
getWindowCenter	RTClasses/rtimages.h	/^    float        getWindowCenter()                            { return window_center; };$/;"	f	class:RTImage
getWindowWidth	RTClasses/rtimages.h	/^    float        getWindowWidth()                             { return window_width; };$/;"	f	class:RTImage
get_active_segments	dosecalc-preprocess/fmapProcessing.cpp	/^std::vector<ActiveSegment> get_active_segments(const std::vector<float>& fluence_map, uint2 fmap_size, int yy) {$/;"	f
get_and_assign_scalar	Utilities/configparser.h	/^int static get_and_assign_scalar(T& assign, rapidjson::Document& doc, const std::string& key, int verbose=false) {$/;"	f
get_and_assign_scalar	Utilities/configparser.h	/^template <> int get_and_assign_scalar<bool>(bool& assign, rapidjson::Document& doc, const std::string& key, int verbose) {$/;"	f
get_and_assign_scalar	Utilities/configparser.h	/^template <> int get_and_assign_scalar<int>(int& assign, rapidjson::Document& doc, const std::string& key, int verbose) {$/;"	f
get_and_assign_scalar	Utilities/configparser.h	/^template <> int get_and_assign_scalar<std::string>(std::string& assign, rapidjson::Document& doc, const std::string& key, int verbose) {$/;"	f
get_and_assign_vector	Utilities/configparser.h	/^static int get_and_assign_vector(vectT& assign, rapidjson::Document& doc, const std::string& key, int verbose=false) {$/;"	f
get_and_assign_vector_string	Utilities/configparser.h	/^static int get_and_assign_vector_string(std::vector<std::string>& assign, rapidjson::Document& doc, const std::string& key, int verbose) {$/;"	f
get_basename	DoseCalcIO/io_helpers.cpp	/^    std::string get_basename(std::string path) {$/;"	f	namespace:dcio
get_beam_spec	tests/utils/generate_beamlist.py	/^def get_beam_spec(gantry, couch):$/;"	f
get_chunksize	dosecalc-beamlet/sparsify_worker.h	/^        int get_chunksize() { return m_chunksize; }$/;"	f	class:SparsifyWorkerBase
get_compress_lvl	dosecalc-beamlet/sparsify_worker.h	/^        int get_compress_lvl() { return m_compress_lvl; }$/;"	f	class:SparsifyWorkerBase
get_dirname	DoseCalcIO/io_helpers.cpp	/^    std::string get_dirname(std::string path) {$/;"	f	namespace:dcio
get_documentation	tests/utils/generate_beamlist.py	/^def get_documentation(cstart, cend, cspace, gstart, gend, gspace):$/;"	f
get_file_list	DoseCalcIO/io_helpers.cpp	/^    std::vector<std::string> get_file_list(const std::string& dir, bool verbose) {$/;"	f	namespace:dcio
get_frame	DoseCalcIO/volume.h	/^        const FrameOfReference get_frame() const {$/;"	f	class:Volume
get_id	Utilities/thread.cpp	/^std::thread::id Thread::get_id() {$/;"	f	class:Thread
get_isocenter_location	DoseCalcIO/beam.cpp	/^std::string BEAM::get_isocenter_location() const {$/;"	f	class:BEAM
get_isocenter_type	DoseCalcIO/beam.cpp	/^std::string BEAM::get_isocenter_type() const {$/;"	f	class:BEAM
get_kernel_phi_index	include/server/brain_defs.h	/^    inline int get_kernel_phi_index(int ray_index) {$/;"	f	struct:CONSTANTS
get_kernel_theta_index	include/server/brain_defs.h	/^    inline int get_kernel_theta_index(int ray_index) {$/;"	f	struct:CONSTANTS
get_line_count	DoseCalcIO/beam.cpp	/^int get_line_count(const std::string& fname) {$/;"	f
get_material_def	extern/python/materials.py	/^    def get_material_def(self):$/;"	m	class:G4Material
get_memblock	dosecalc-beamlet/sparsify_manager.h	/^        std::unique_ptr<float[]> get_memblock(bool blocking=true) {$/;"	f	class:SparsifyManager
get_num_srworkers	dosecalc-beamlet/sparsify_manager.h	/^        int get_num_srworkers() { return m_srworkers.size(); }$/;"	f	class:SparsifyManager
get_num_w2fworkers	dosecalc-beamlet/sparsify_manager.h	/^        int get_num_w2fworkers() { return m_w2fworkers.size(); }$/;"	f	class:SparsifyManager
get_orientation_type	DoseCalcIO/beam.cpp	/^std::string BEAM::get_orientation_type() const {$/;"	f	class:BEAM
get_phi_from_index	include/server/brain_defs.h	/^    inline float get_phi_from_index(int ray_index) {$/;"	f	struct:CONSTANTS
get_theta_from_index	include/server/brain_defs.h	/^    inline float get_theta_from_index(int ray_index) {$/;"	f	struct:CONSTANTS
get_username	DoseCalcIO/io_helpers.cpp	/^    std::string get_username() {$/;"	f	namespace:dcio
get_write_strategy	dosecalc-beamlet/sparsify_manager.h	/^        WRITE_STRATEGY get_write_strategy() { return m_write_strategy; }$/;"	f	class:SparsifyManager
gid_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef __gid_t gid_t; $/;"	t	file:
gpuDeviceInit	include/cuda-common/helper_cuda.h	/^inline int gpuDeviceInit(int devID)$/;"	f
gpuGetMaxGflopsDeviceId	include/cuda-common/helper_cuda.h	/^inline int gpuGetMaxGflopsDeviceId()$/;"	f
gpuid	CudaUtilities/manage_gpu.cuh	/^        int gpuid;$/;"	m	class:cudaMemInfo	file:
gpuid	include/server/brain_defs.h	/^    int nrays, n_unpackstreams, deviceid, gpuid;$/;"	m	struct:DEVICE_THREAD_DATA
gridDims	DoseCalcIO/io_data_structs.h	/^    int3 gridDims;               \/\/ precalculated numPillars * numVoxelPerPillar (total voxel dims of packed array)$/;"	m	struct:PILLAR_GRID
gridSize	DoseCalcIO/io_data_structs.h	/^    float3  gridSize;            \/\/ dimensions of grid in common coordinate unit$/;"	m	struct:PILLAR_GRID
gspace	tests/utils/generate_beamlist.py	/^    gspace = args.spacing_gantry$/;"	v
gstart	tests/utils/generate_beamlist.py	/^    gstart =   0$/;"	v
h5_outfile	extern/python/utils/sumMcols.py	/^    h5_outfile = outfile.replace('.raw', '.h5')$/;"	v
handleException	include/cuda-common/exception.h	/^handleException(const Exception_Typ &ex)$/;"	f
hasBOM_	include/rapidjson/encodedstream.h	/^    bool hasBOM_;$/;"	m	class:AutoUTFInputStream
hasDependencies_	include/rapidjson/schema.h	/^    bool hasDependencies_;$/;"	m	class:internal::Schema
hasRequired_	include/rapidjson/schema.h	/^    bool hasRequired_;$/;"	m	class:internal::Schema
hasRoot_	include/rapidjson/writer.h	/^    bool hasRoot_;$/;"	m	class:Writer
hasSchemaDependencies_	include/rapidjson/schema.h	/^    bool hasSchemaDependencies_;$/;"	m	class:internal::Schema
hashcode	include/rapidjson/document.h	/^        SizeType hashcode;  \/\/!< reserved$/;"	m	struct:GenericValue::String
hasher	include/rapidjson/schema.h	/^    void* hasher; \/\/ Only validator access$/;"	m	struct:internal::SchemaValidationContext
head_	include/rapidjson/pointer.h	/^        const Ch* head_;    \/\/!< Original head of the string.$/;"	m	class:GenericPointer::PercentDecodeStream
head_	include/rapidjson/stream.h	/^    Ch* head_;$/;"	m	struct:GenericInsituStringStream
head_	include/rapidjson/stream.h	/^    const Ch* head_;    \/\/!< Original head of the string.$/;"	m	struct:GenericStringStream
hires_clock_t	Utilities/timing.h	/^typedef std::chrono::high_resolution_clock             hires_clock_t;$/;"	t
hunits	DoseCalcIO/ctlut.h	/^    float hunits;     \/\/ [HU]$/;"	m	struct:LUTPOINT
i	include/rapidjson/document.h	/^            int i;$/;"	m	struct:GenericValue::Number::I
i	include/rapidjson/document.h	/^        }i;$/;"	m	union:GenericValue::Number	typeref:struct:GenericValue::Number::I
i	include/rapidjson/schema.h	/^            int64_t i;$/;"	m	union:internal::Hasher::Number::U
i32toa	include/rapidjson/internal/itoa.h	/^inline char* i32toa(int32_t value, char* buffer) {$/;"	f	namespace:internal
i64	include/rapidjson/document.h	/^        int64_t i64;$/;"	m	union:GenericValue::Number
i64toa	include/rapidjson/internal/itoa.h	/^inline char* i64toa(int64_t value, char* buffer) {$/;"	f	namespace:internal
id_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef __id_t id_t; $/;"	t	file:
idtype_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^} idtype_t; $/;"	t	typeref:enum:__anon19	file:
image_count	RTClasses/rtimages.h	/^    unsigned int image_count;$/;"	m	class:RTImage
image_orientation_patient	RTClasses/rtimages.h	/^        std::array<float, 6> image_orientation_patient;$/;"	m	class:RTImage::SLICE_DATA
image_position_patient	RTClasses/rtimages.h	/^        float3 image_position_patient;$/;"	m	class:RTImage::SLICE_DATA
imaxabs	include/rapidjson/msinttypes/inttypes.h	279;"	d
imaxdiv	include/rapidjson/msinttypes/inttypes.h	/^imaxdiv_t __cdecl imaxdiv(intmax_t numer, intmax_t denom)$/;"	f
imaxdiv_t	include/rapidjson/msinttypes/inttypes.h	/^} imaxdiv_t;$/;"	t	typeref:struct:__anon3
imgArray	dosecalc-preprocess/kernels.cuh	/^cudaArray *imgArray=0;$/;"	v
importImagePositionPatient	RTClasses/rtimages.cpp	/^void RTImage::importImagePositionPatient( unsigned int i )$/;"	f	class:RTImage
importInstanceNumber	RTClasses/rtimages.cpp	/^void RTImage::importInstanceNumber( unsigned int i ) {$/;"	f	class:RTImage
importPatientInfo	RTClasses/rtimages.cpp	/^void RTImage::importPatientInfo() {$/;"	f	class:RTImage
importPatientInfo	RTClasses/rtstruct.cpp	/^RTStruct::importPatientInfo()$/;"	f	class:RTStruct
importSOPClassUID	RTClasses/rtimages.cpp	/^bool RTImage::importSOPClassUID(const std::string& fname ) {$/;"	f	class:RTImage
importSOPClassUID	RTClasses/rtstruct.cpp	/^RTStruct::importSOPClassUID( char *buffer )$/;"	f	class:RTStruct
inArray	include/rapidjson/schema.h	/^    bool inArray;$/;"	m	struct:internal::SchemaValidationContext
inArray	include/rapidjson/writer.h	/^        bool inArray;       \/\/!< true if in array, otherwise in object$/;"	m	struct:Writer::Level
indentCharCount_	include/rapidjson/prettywriter.h	/^    unsigned indentCharCount_;$/;"	m	class:PrettyWriter
indentChar_	include/rapidjson/prettywriter.h	/^    Ch indentChar_;$/;"	m	class:PrettyWriter
index	include/rapidjson/pointer.h	/^        SizeType index;             \/\/!< A valid array index, if it is not equal to kPointerInvalidIndex.$/;"	m	struct:GenericPointer::Token
info_arch	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_arch	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_arch	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.c	/^const char *info_arch = ((const char *)"INFO:arch[]");$/;"	v
info_arch	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^const char *info_arch = ("INFO:arch[]"); $/;"	v
info_arch	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_compiler	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_compiler	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_compiler	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.c	/^const char *info_compiler = ((const char *)"INFO:compiler[NVIDIA]");$/;"	v
info_compiler	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^const char *info_compiler = ("INFO:compiler[NVIDIA]"); $/;"	v
info_compiler	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_cray	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v
info_cray	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v
info_language_dialect_default	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	/^const char* info_language_dialect_default =$/;"	v
info_language_dialect_default	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	/^const char* info_language_dialect_default = "INFO" ":" "dialect_default["$/;"	v
info_language_dialect_default	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.c	/^const char *info_language_dialect_default = ((const char *)"INFO:dialect_default[14]");$/;"	v
info_language_dialect_default	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^const char *info_language_dialect_default = ("INFO:dialect_default[14]"); $/;"	v
info_language_dialect_default	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^const char* info_language_dialect_default = "INFO" ":" "dialect_default["$/;"	v
info_parallel	build/CMakeFiles/hdf5/cmake_hdf5_test.c	/^const char* info_parallel = "INFO" ":" "PARALLEL";$/;"	v
info_parallel	build/CMakeFiles/hdf5/cmake_hdf5_test.cxx	/^const char* info_parallel = "INFO" ":" "PARALLEL";$/;"	v
info_platform	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_platform	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_platform	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.c	/^const char *info_platform = ((const char *)"INFO:platform[Linux]");$/;"	v
info_platform	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^const char *info_platform = ("INFO:platform[Linux]"); $/;"	v
info_platform	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_simulate	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v
info_simulate	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v
info_simulate	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v
info_simulate_version	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	/^char const info_simulate_version[] = {$/;"	v
info_simulate_version	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	/^char const info_simulate_version[] = {$/;"	v
info_simulate_version	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_simulate_version[] = {$/;"	v
info_ver	build/CMakeFiles/hdf5/cmake_hdf5_test.c	/^const char* info_ver = "INFO" ":" H5_VERSION;$/;"	v
info_ver	build/CMakeFiles/hdf5/cmake_hdf5_test.cxx	/^const char* info_ver = "INFO" ":" H5_VERSION;$/;"	v
info_version	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	/^char const info_version[] = {$/;"	v
info_version	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	/^char const info_version[] = {$/;"	v
info_version	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.c	/^static const char info_version[50] = {((char)73),((char)78),((char)70),((char)79),((char)58),((char)99),((char)111),((char)109),((char)112),((char)105),((char)108),((char)101),((char)114),((char)95),((char)118),((char)101),((char)114),((char)115),((char)105),((char)111),((char)110),((char)91),((char)48),((char)48),((char)48),((char)48),((char)48),((char)48),((char)49),((char)48),((char)46),((char)48),((char)48),((char)48),((char)48),((char)48),((char)48),((char)48),((char)48),((char)46),((char)48),((char)48),((char)48),((char)48),((char)48),((char)49),((char)51),((char)48),((char)93),((char)0)};$/;"	v	file:
info_version	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.c	/^static const char info_version[50];$/;"	v	file:
info_version	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^const char info_version[] = {'I', 'N', 'F', 'O', ':', 'c', 'o', 'm', 'p', 'i', 'l', 'e', 'r', '_', 'v', 'e', 'r', 's', 'i', 'o', 'n', '[', (('0') + ((10 \/ 10000000) % 10)), (('0') + ((10 \/ 1000000) % 10)), (('0') + ((10 \/ 100000) % 10)), (('0') + ((10 \/ 10000) % 10)), (('0') + ((10 \/ 1000) % 10)), (('0') + ((10 \/ 100) % 10)), (('0') + ((10 \/ 10) % 10)), (('0') + (10 % 10)), '.', (('0') + ((0 \/ 10000000) % 10)), (('0') + ((0 \/ 1000000) % 10)), (('0') + ((0 \/ 100000) % 10)), (('0') + ((0 \/ 10000) % 10)), (('0') + ((0 \/ 1000) % 10)), (('0') + ((0 \/ 100) % 10)), (('0') + ((0 \/ 10) % 10)), (('0') + (0 % 10)), '.', (('0') + ((130 \/ 10000000) % 10)), (('0') + ((130 \/ 1000000) % 10)), (('0') + ((130 \/ 100000) % 10)), (('0') + ((130 \/ 10000) % 10)), (('0') + ((130 \/ 1000) % 10)), (('0') + ((130 \/ 100) % 10)), (('0') + ((130 \/ 10) % 10)), (('0') + (130 % 10)), ']', '\\000'}; $/;"	v
info_version	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version[] = {$/;"	v
info_version_internal	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	/^char const info_version_internal[] = {$/;"	v
info_version_internal	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	/^char const info_version_internal[] = {$/;"	v
info_version_internal	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version_internal[] = {$/;"	v
init	dosecalc-beamlet/sparsify_manager.cpp	/^void SparsifyManager::init(const std::string& h5filename, HEADER_PATIENT& patient_header, unsigned int num_srworkers, unsigned int num_w2fworkers, float sparsity_thresh, WRITE_STRATEGY write_strategy) {$/;"	f	class:SparsifyManager
initCudaConstandTex	dosecalc-beam/nvbbRayConvolve_host.cu	/^initCudaConstandTex($/;"	f
initCudaConstandTex	dosecalc-beamlet/nvbbRayConvolve_host.cu	/^int initCudaConstandTex($/;"	f
init_devices	CudaUtilities/manage_gpu.cu	/^void init_devices(int &nDevices, int *gpuid_arr, const int maximum_device_count, const int ndev_requested, int first_device, bool verbose) {$/;"	f
init_devices_uva	CudaUtilities/manage_gpu.cu	/^void init_devices_uva(int &nDevices, int *gpuid_arr, const int maximum_device_count, const int ndev_requested, int first_device, bool verbose) {$/;"	f
initialCapacity_	include/rapidjson/internal/stack.h	/^    size_t initialCapacity_;$/;"	m	class:internal::Stack
ino64_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef __ino64_t ino64_t; $/;"	t	file:
ino_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef __ino_t ino_t; $/;"	t	file:
inputs	extern/python/utils/convert_beamlist.py	/^    inputs = []$/;"	v
instance_number	RTClasses/rtimages.h	/^        int instance_number;$/;"	m	class:RTImage::SLICE_DATA
int16_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef __int16_t int16_t; $/;"	t	file:
int16_t	include/rapidjson/msinttypes/stdint.h	/^   typedef signed __int16    int16_t;$/;"	t
int16_t	include/rapidjson/msinttypes/stdint.h	/^   typedef signed short      int16_t;$/;"	t
int2double	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline double int2double(int a, cudaRoundMode mode) $/;"	f	file:
int2float	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline float int2float(int a, cudaRoundMode mode) $/;"	f	file:
int32_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef __int32_t int32_t; $/;"	t	file:
int32_t	include/rapidjson/msinttypes/stdint.h	/^   typedef signed __int32    int32_t;$/;"	t
int32_t	include/rapidjson/msinttypes/stdint.h	/^   typedef signed int        int32_t;$/;"	t
int64_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef __int64_t int64_t; $/;"	t	file:
int64_t	include/rapidjson/msinttypes/stdint.h	/^typedef signed __int64       int64_t;$/;"	t
int8_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef __int8_t int8_t; $/;"	t	file:
int8_t	include/rapidjson/msinttypes/stdint.h	/^   typedef signed __int8     int8_t;$/;"	t
int8_t	include/rapidjson/msinttypes/stdint.h	/^   typedef signed char       int8_t;$/;"	t
int_as_float	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline float int_as_float(int a) $/;"	f	file:
int_fast16_t	include/rapidjson/msinttypes/stdint.h	/^typedef int16_t   int_fast16_t;$/;"	t
int_fast32_t	include/rapidjson/msinttypes/stdint.h	/^typedef int32_t   int_fast32_t;$/;"	t
int_fast64_t	include/rapidjson/msinttypes/stdint.h	/^typedef int64_t   int_fast64_t;$/;"	t
int_fast8_t	include/rapidjson/msinttypes/stdint.h	/^typedef int8_t    int_fast8_t;$/;"	t
int_least16_t	include/rapidjson/msinttypes/stdint.h	/^typedef int16_t   int_least16_t;$/;"	t
int_least32_t	include/rapidjson/msinttypes/stdint.h	/^typedef int32_t   int_least32_t;$/;"	t
int_least64_t	include/rapidjson/msinttypes/stdint.h	/^typedef int64_t   int_least64_t;$/;"	t
int_least8_t	include/rapidjson/msinttypes/stdint.h	/^typedef int8_t    int_least8_t;$/;"	t
internal	include/rapidjson/document.h	/^namespace internal {$/;"	n
internal	include/rapidjson/internal/biginteger.h	/^namespace internal {$/;"	n
internal	include/rapidjson/internal/diyfp.h	/^namespace internal {$/;"	n
internal	include/rapidjson/internal/dtoa.h	/^namespace internal {$/;"	n
internal	include/rapidjson/internal/ieee754.h	/^namespace internal {$/;"	n
internal	include/rapidjson/internal/itoa.h	/^namespace internal {$/;"	n
internal	include/rapidjson/internal/meta.h	/^namespace internal {$/;"	n
internal	include/rapidjson/internal/pow10.h	/^namespace internal {$/;"	n
internal	include/rapidjson/internal/regex.h	/^namespace internal {$/;"	n
internal	include/rapidjson/internal/stack.h	/^namespace internal {$/;"	n
internal	include/rapidjson/internal/strfunc.h	/^namespace internal {$/;"	n
internal	include/rapidjson/internal/strtod.h	/^namespace internal {$/;"	n
internal	include/rapidjson/internal/swap.h	/^namespace internal {$/;"	n
internal	include/rapidjson/reader.h	/^namespace internal {$/;"	n
internal	include/rapidjson/schema.h	/^namespace internal {$/;"	n
interp_style	DoseCalcIO/ctlut.h	/^    INTERPTYPE interp_style;$/;"	m	struct:CTLUT
intmax_t	include/rapidjson/msinttypes/stdint.h	/^typedef int64_t   intmax_t;$/;"	t
intptr_t	include/rapidjson/msinttypes/stdint.h	/^   typedef _W64 signed int   intptr_t;$/;"	t
intptr_t	include/rapidjson/msinttypes/stdint.h	/^   typedef signed __int64    intptr_t;$/;"	t
invalidDocumentPointer_	include/rapidjson/schema.h	/^    PointerType invalidDocumentPointer_;$/;"	m	class:SchemaValidatingReader
invalidKeyword	include/rapidjson/schema.h	/^    const Ch* invalidKeyword;$/;"	m	struct:internal::SchemaValidationContext
invalidSchemaKeyword_	include/rapidjson/schema.h	/^    const Ch* invalidSchemaKeyword_;$/;"	m	class:SchemaValidatingReader
invalidSchemaPointer_	include/rapidjson/schema.h	/^    PointerType invalidSchemaPointer_;$/;"	m	class:SchemaValidatingReader
inverseRotateBeamAtOriginRHS	CudaUtilities/geometry.cu	/^CUDEV_FXN float3 inverseRotateBeamAtOriginRHS( const float3& vec, const float& theta, const float& phi, const float& coll ) {$/;"	f
inverseRotateBeamRHS	CudaUtilities/geometry.cu	/^CUDEV_FXN float3 inverseRotateBeamRHS( const float3& vec, const float3& center, const float& theta, const float& phi, const float& coll ) {$/;"	f
inverseRotateBeamletAtOriginRHS	CudaUtilities/geometry.cu	/^CUDEV_FXN float3 inverseRotateBeamletAtOriginRHS( const float3& vec, const float& theta, const float& phi) {$/;"	f
inverseRotateBeamletRHS	CudaUtilities/geometry.cu	/^CUDEV_FXN float3 inverseRotateBeamletRHS( const float3& vec, const float3& center, const float& theta, const float& phi) {$/;"	f
inverseRotateKernelAtOriginRHS	CudaUtilities/geometry.cu	/^CUDEV_FXN float3 inverseRotateKernelAtOriginRHS( const float3& vec, const float& theta, const float& phi ) {$/;"	f
inverseRotateKernelRHS	CudaUtilities/geometry.cu	/^CUDEV_FXN float3 inverseRotateKernelRHS( const float3& vec, const float3& center, const float& theta, const float& phi ) {$/;"	f
is	include/rapidjson/reader.h	/^        InputStream& is;$/;"	m	class:GenericReader::NumberStream
isValid_	include/rapidjson/schema.h	/^    bool isValid_;$/;"	m	class:SchemaValidatingReader
is_	include/rapidjson/encodedstream.h	/^    InputByteStream& is_;$/;"	m	class:EncodedInputStream
is_	include/rapidjson/encodedstream.h	/^    InputByteStream* is_;$/;"	m	class:AutoUTFInputStream
is_	include/rapidjson/encodedstream.h	/^    MemoryStream& is_;$/;"	m	class:EncodedInputStream
is_	include/rapidjson/schema.h	/^    InputStream& is_;$/;"	m	class:SchemaValidatingReader
is_absolute	DoseCalcIO/io_helpers.cpp	/^    bool is_absolute(const std::string& path) {$/;"	f	namespace:dcio
is_comment_string	DoseCalcIO/io_helpers.cpp	/^    bool is_comment_string(const std::string& str, const char comment_char) {$/;"	f	namespace:dcio
is_directory	DoseCalcIO/io_helpers.cpp	/^    bool is_directory(const std::string& path) {$/;"	f	namespace:dcio
is_number	DoseCalcIO/io_helpers.cpp	/^    bool is_number(const std::string& test) {$/;"	f	namespace:dcio
is_regular_file	DoseCalcIO/io_helpers.cpp	/^    bool is_regular_file(const std::string& path) {$/;"	f	namespace:dcio
is_relative	DoseCalcIO/io_helpers.cpp	/^    bool is_relative(const std::string& path) {$/;"	f	namespace:dcio
is_symlink	DoseCalcIO/io_helpers.cpp	/^    bool is_symlink(const std::string& path) {$/;"	f	namespace:dcio
is_unqualified	DoseCalcIO/io_helpers.cpp	/^    bool is_unqualified(const std::string& path) { return (!is_relative(path) && !is_absolute(path)); }$/;"	f	namespace:dcio
iscanonical	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^inline int iscanonical(double __val) { return ((void)((__typeof__(__val))__val)), 1; } $/;"	f
iscanonical	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^inline int iscanonical(float __val) { return ((void)((__typeof__(__val))__val)), 1; } $/;"	f
iscanonical	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^inline int iscanonical(long double __val) { return __iscanonicall(__val); } $/;"	f
iseqsig	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^iseqsig(_T1 __x, _T2 __y) throw() $/;"	f
iso	extern/python/generate_phantom.py	/^    iso       = (0, 0, 0)       # (X,Y,Z)                      [unit: cm]$/;"	v
iso_coords_cm	DoseCalcIO/beam.h	/^            float       iso_coords_cm[3]; \/\/ isocenter coords [cm]$/;"	m	struct:BEAM::COMP_BEAM_T
iso_matrix	dosecalc-preprocess/kernels.cuh	/^float *iso_matrix;$/;"	v
isocenter	DoseCalcIO/beam.h	/^        float3 isocenter;       \/\/ isocenter coords [cm]$/;"	m	class:BEAM
isocenter_location	DoseCalcIO/beam.h	/^        ISO_LOC_T isocenter_location; \/\/ describe in or out of PTV$/;"	m	class:BEAM
isocenter_type	DoseCalcIO/beam.h	/^        ISO_T  isocenter_type;  \/\/ Method used to select isocenter$/;"	m	class:BEAM
issignaling	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^inline int issignaling(double __val) { return __issignaling(__val); } $/;"	f
issignaling	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^inline int issignaling(float __val) { return __issignalingf(__val); } $/;"	f
issignaling	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^inline int issignaling(long double __val) $/;"	f
iszero	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^iszero(__T __val) $/;"	f
it_interval	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^timespec it_interval; $/;"	m	struct:itimerspec	file:
it_value	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^timespec it_value; $/;"	m	struct:itimerspec	file:
itemsList_	include/rapidjson/schema.h	/^    const SchemaType* itemsList_;$/;"	m	class:internal::Schema
itemsTupleCount_	include/rapidjson/schema.h	/^    SizeType itemsTupleCount_;$/;"	m	class:internal::Schema
itemsTuple_	include/rapidjson/schema.h	/^    const SchemaType** itemsTuple_;$/;"	m	class:internal::Schema
itimerspec	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^struct itimerspec { $/;"	s	file:
j0	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline float j0(float a) $/;"	f	file:
j1	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline float j1(float a) $/;"	f	file:
jitcnt	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__syscall_slong_t jitcnt; $/;"	m	struct:timex	file:
jitter	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__syscall_slong_t jitter; $/;"	m	struct:timex	file:
jn	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline float jn(int n, float a) $/;"	f	file:
join	Utilities/thread.cpp	/^void Thread::join() {$/;"	f	class:Thread
join	dosecalc-beamlet/sparsify_worker.cpp	/^void SparsifyWorkerBase::join() {$/;"	f	class:SparsifyWorkerBase
kAlternation	include/rapidjson/internal/regex.h	/^        kAlternation,$/;"	e	enum:internal::GenericRegex::Operator
kAnyCharacterClass	include/rapidjson/internal/regex.h	/^    static const unsigned kAnyCharacterClass = 0xFFFFFFFF;   \/\/!< For '.'$/;"	m	class:internal::GenericRegex
kArrayFlag	include/rapidjson/document.h	/^        kArrayFlag = kArrayType,$/;"	e	enum:GenericValue::__anon4
kArraySchemaType	include/rapidjson/schema.h	/^        kArraySchemaType,$/;"	e	enum:internal::Schema::SchemaValueType
kArrayType	include/rapidjson/rapidjson.h	/^    kArrayType = 4,     \/\/!< array $/;"	e	enum:Type
kBitCount	include/rapidjson/internal/biginteger.h	/^    static const size_t kBitCount = 3328;  \/\/ 64bit * 54 > 10^1000$/;"	m	class:internal::BigInteger
kBoolFlag	include/rapidjson/document.h	/^        kBoolFlag       = 0x0008,$/;"	e	enum:GenericValue::__anon4
kBooleanSchemaType	include/rapidjson/schema.h	/^        kBooleanSchemaType,$/;"	e	enum:internal::Schema::SchemaValueType
kCapacity	include/rapidjson/internal/biginteger.h	/^    static const size_t kCapacity = kBitCount \/ sizeof(Type);$/;"	m	class:internal::BigInteger
kConcatenation	include/rapidjson/internal/regex.h	/^        kConcatenation,$/;"	e	enum:internal::GenericRegex::Operator
kConstStringFlag	include/rapidjson/document.h	/^        kConstStringFlag = kStringType | kStringFlag,$/;"	e	enum:GenericValue::__anon4
kCopyFlag	include/rapidjson/document.h	/^        kCopyFlag       = 0x0800,$/;"	e	enum:GenericValue::__anon4
kCopyStringFlag	include/rapidjson/document.h	/^        kCopyStringFlag = kStringType | kStringFlag | kCopyFlag,$/;"	e	enum:GenericValue::__anon4
kDefaultArrayCapacity	include/rapidjson/document.h	/^    static const SizeType kDefaultArrayCapacity = 16;$/;"	m	class:GenericValue
kDefaultCapacity	include/rapidjson/memorybuffer.h	/^    static const size_t kDefaultCapacity = 256;$/;"	m	struct:GenericMemoryBuffer
kDefaultCapacity	include/rapidjson/stringbuffer.h	/^    static const size_t kDefaultCapacity = 256;$/;"	m	class:GenericStringBuffer
kDefaultChunkCapacity	include/rapidjson/allocators.h	/^    static const int kDefaultChunkCapacity = 64 * 1024; \/\/!< Default chunk capacity.$/;"	m	class:MemoryPoolAllocator
kDefaultDocumentStackCapacity	include/rapidjson/schema.h	/^    static const size_t kDefaultDocumentStackCapacity = 256;$/;"	m	class:GenericSchemaValidator
kDefaultLevelDepth	include/rapidjson/writer.h	/^    static const size_t kDefaultLevelDepth = 32;$/;"	m	class:Writer
kDefaultMaxDecimalPlaces	include/rapidjson/writer.h	/^    static const int kDefaultMaxDecimalPlaces = 324;$/;"	m	class:Writer
kDefaultObjectCapacity	include/rapidjson/document.h	/^    static const SizeType kDefaultObjectCapacity = 16;$/;"	m	class:GenericValue
kDefaultSchemaStackCapacity	include/rapidjson/schema.h	/^    static const size_t kDefaultSchemaStackCapacity = 1024;$/;"	m	class:GenericSchemaValidator
kDefaultSize	include/rapidjson/schema.h	/^    static const size_t kDefaultSize = 256;$/;"	m	class:internal::Hasher
kDefaultStackCapacity	include/rapidjson/document.h	/^    static const size_t kDefaultStackCapacity = 1024;$/;"	m	class:GenericDocument
kDefaultStackCapacity	include/rapidjson/reader.h	/^    static const size_t kDefaultStackCapacity = 256;    \/\/!< Default stack capacity in bytes for storing a single decoded string.$/;"	m	class:GenericReader
kDenormalExponent	include/rapidjson/internal/ieee754.h	/^    static const int kDenormalExponent = 1 - kExponentBias;$/;"	m	class:internal::Double
kDiySignificandSize	include/rapidjson/internal/diyfp.h	/^    static const int kDiySignificandSize = 64;$/;"	m	struct:internal::DiyFp
kDoubleFlag	include/rapidjson/document.h	/^        kDoubleFlag     = 0x0200,$/;"	e	enum:GenericValue::__anon4
kDpDenormalExponent	include/rapidjson/internal/diyfp.h	/^    static const int kDpDenormalExponent = -kDpExponentBias + 1;$/;"	m	struct:internal::DiyFp
kDpExponentBias	include/rapidjson/internal/diyfp.h	/^    static const int kDpExponentBias = 0x3FF + kDpSignificandSize;$/;"	m	struct:internal::DiyFp
kDpExponentMask	include/rapidjson/internal/diyfp.h	/^    static const uint64_t kDpExponentMask = RAPIDJSON_UINT64_C2(0x7FF00000, 0x00000000);$/;"	m	struct:internal::DiyFp
kDpHiddenBit	include/rapidjson/internal/diyfp.h	/^    static const uint64_t kDpHiddenBit = RAPIDJSON_UINT64_C2(0x00100000, 0x00000000);$/;"	m	struct:internal::DiyFp
kDpMaxExponent	include/rapidjson/internal/diyfp.h	/^    static const int kDpMaxExponent = 0x7FF - kDpExponentBias;$/;"	m	struct:internal::DiyFp
kDpMinExponent	include/rapidjson/internal/diyfp.h	/^    static const int kDpMinExponent = -kDpExponentBias;$/;"	m	struct:internal::DiyFp
kDpSignificandMask	include/rapidjson/internal/diyfp.h	/^    static const uint64_t kDpSignificandMask = RAPIDJSON_UINT64_C2(0x000FFFFF, 0xFFFFFFFF);$/;"	m	struct:internal::DiyFp
kDpSignificandSize	include/rapidjson/internal/diyfp.h	/^    static const int kDpSignificandSize = 52;$/;"	m	struct:internal::DiyFp
kExponentBias	include/rapidjson/internal/ieee754.h	/^    static const int kExponentBias = 0x3FF;$/;"	m	class:internal::Double
kExponentMask	include/rapidjson/internal/ieee754.h	/^    static const uint64_t kExponentMask = RAPIDJSON_UINT64_C2(0x7FF00000, 0x00000000);$/;"	m	class:internal::Double
kFalseFlag	include/rapidjson/document.h	/^        kFalseFlag = kFalseType | kBoolFlag,$/;"	e	enum:GenericValue::__anon4
kFalseType	include/rapidjson/rapidjson.h	/^    kFalseType = 1,     \/\/!< false$/;"	e	enum:Type
kFormatDefault	include/rapidjson/prettywriter.h	/^    kFormatDefault = 0,         \/\/!< Default pretty formatting.$/;"	e	enum:PrettyFormatOptions
kFormatSingleLineArray	include/rapidjson/prettywriter.h	/^    kFormatSingleLineArray = 1  \/\/!< Format arrays on a single line.$/;"	e	enum:PrettyFormatOptions
kHiddenBit	include/rapidjson/internal/ieee754.h	/^    static const uint64_t kHiddenBit = RAPIDJSON_UINT64_C2(0x00100000, 0x00000000);$/;"	m	class:internal::Double
kInfinityQuantifier	include/rapidjson/internal/regex.h	/^    static const unsigned kInfinityQuantifier = ~0u;$/;"	m	class:internal::GenericRegex
kInitialSchemaMapSize	include/rapidjson/schema.h	/^    static const size_t kInitialSchemaMapSize = 64;$/;"	m	class:GenericSchemaDocument
kInitialSchemaRefSize	include/rapidjson/schema.h	/^    static const size_t kInitialSchemaRefSize = 64;$/;"	m	class:GenericSchemaDocument
kInlineStrFlag	include/rapidjson/document.h	/^        kInlineStrFlag  = 0x1000,$/;"	e	enum:GenericValue::__anon4
kInt64Flag	include/rapidjson/document.h	/^        kInt64Flag      = 0x0080,$/;"	e	enum:GenericValue::__anon4
kIntFlag	include/rapidjson/document.h	/^        kIntFlag        = 0x0020,$/;"	e	enum:GenericValue::__anon4
kIntegerSchemaType	include/rapidjson/schema.h	/^        kIntegerSchemaType,$/;"	e	enum:internal::Schema::SchemaValueType
kLeftParenthesis	include/rapidjson/internal/regex.h	/^        kLeftParenthesis$/;"	e	enum:internal::GenericRegex::Operator
kNeedFree	include/rapidjson/allocators.h	/^    static const bool kNeedFree = false;    \/\/!< Tell users that no need to call Free() with this allocator. (concept Allocator)$/;"	m	class:MemoryPoolAllocator
kNeedFree	include/rapidjson/allocators.h	/^    static const bool kNeedFree = true;$/;"	m	class:CrtAllocator
kNullFlag	include/rapidjson/document.h	/^        kNullFlag = kNullType,$/;"	e	enum:GenericValue::__anon4
kNullSchemaType	include/rapidjson/schema.h	/^        kNullSchemaType,$/;"	e	enum:internal::Schema::SchemaValueType
kNullType	include/rapidjson/rapidjson.h	/^    kNullType = 0,      \/\/!< null$/;"	e	enum:Type
kNumberAnyFlag	include/rapidjson/document.h	/^        kNumberAnyFlag = kNumberType | kNumberFlag | kIntFlag | kInt64Flag | kUintFlag | kUint64Flag | kDoubleFlag,$/;"	e	enum:GenericValue::__anon4
kNumberDoubleFlag	include/rapidjson/document.h	/^        kNumberDoubleFlag = kNumberType | kNumberFlag | kDoubleFlag,$/;"	e	enum:GenericValue::__anon4
kNumberFlag	include/rapidjson/document.h	/^        kNumberFlag     = 0x0010,$/;"	e	enum:GenericValue::__anon4
kNumberInt64Flag	include/rapidjson/document.h	/^        kNumberInt64Flag = kNumberType | kNumberFlag | kInt64Flag,$/;"	e	enum:GenericValue::__anon4
kNumberIntFlag	include/rapidjson/document.h	/^        kNumberIntFlag = kNumberType | kNumberFlag | kIntFlag | kInt64Flag,$/;"	e	enum:GenericValue::__anon4
kNumberSchemaType	include/rapidjson/schema.h	/^        kNumberSchemaType,$/;"	e	enum:internal::Schema::SchemaValueType
kNumberType	include/rapidjson/rapidjson.h	/^    kNumberType = 6     \/\/!< number$/;"	e	enum:Type
kNumberUint64Flag	include/rapidjson/document.h	/^        kNumberUint64Flag = kNumberType | kNumberFlag | kUint64Flag,$/;"	e	enum:GenericValue::__anon4
kNumberUintFlag	include/rapidjson/document.h	/^        kNumberUintFlag = kNumberType | kNumberFlag | kUintFlag | kUint64Flag | kInt64Flag,$/;"	e	enum:GenericValue::__anon4
kObjectFlag	include/rapidjson/document.h	/^        kObjectFlag = kObjectType,$/;"	e	enum:GenericValue::__anon4
kObjectSchemaType	include/rapidjson/schema.h	/^        kObjectSchemaType,$/;"	e	enum:internal::Schema::SchemaValueType
kObjectType	include/rapidjson/rapidjson.h	/^    kObjectType = 3,    \/\/!< object$/;"	e	enum:Type
kOneOrMore	include/rapidjson/internal/regex.h	/^        kOneOrMore,$/;"	e	enum:internal::GenericRegex::Operator
kParseCommentsFlag	include/rapidjson/reader.h	/^    kParseCommentsFlag = 32,        \/\/!< Allow one-line (\/\/) and multi-line (\/**\/) comments.$/;"	e	enum:ParseFlag
kParseDefaultFlags	include/rapidjson/reader.h	/^    kParseDefaultFlags = RAPIDJSON_PARSE_DEFAULT_FLAGS  \/\/!< Default parse flags. Can be customized by defining RAPIDJSON_PARSE_DEFAULT_FLAGS$/;"	e	enum:ParseFlag
kParseErrorArrayMissCommaOrSquareBracket	include/rapidjson/error/error.h	/^    kParseErrorArrayMissCommaOrSquareBracket,   \/\/!< Missing a comma or ']' after an array element.$/;"	e	enum:ParseErrorCode
kParseErrorDocumentEmpty	include/rapidjson/error/error.h	/^    kParseErrorDocumentEmpty,                   \/\/!< The document is empty.$/;"	e	enum:ParseErrorCode
kParseErrorDocumentRootNotSingular	include/rapidjson/error/error.h	/^    kParseErrorDocumentRootNotSingular,         \/\/!< The document root must not follow by other values.$/;"	e	enum:ParseErrorCode
kParseErrorNone	include/rapidjson/error/error.h	/^    kParseErrorNone = 0,                        \/\/!< No error.$/;"	e	enum:ParseErrorCode
kParseErrorNumberMissExponent	include/rapidjson/error/error.h	/^    kParseErrorNumberMissExponent,              \/\/!< Miss exponent in number.$/;"	e	enum:ParseErrorCode
kParseErrorNumberMissFraction	include/rapidjson/error/error.h	/^    kParseErrorNumberMissFraction,              \/\/!< Miss fraction part in number.$/;"	e	enum:ParseErrorCode
kParseErrorNumberTooBig	include/rapidjson/error/error.h	/^    kParseErrorNumberTooBig,                    \/\/!< Number too big to be stored in double.$/;"	e	enum:ParseErrorCode
kParseErrorObjectMissColon	include/rapidjson/error/error.h	/^    kParseErrorObjectMissColon,                 \/\/!< Missing a colon after a name of object member.$/;"	e	enum:ParseErrorCode
kParseErrorObjectMissCommaOrCurlyBracket	include/rapidjson/error/error.h	/^    kParseErrorObjectMissCommaOrCurlyBracket,   \/\/!< Missing a comma or '}' after an object member.$/;"	e	enum:ParseErrorCode
kParseErrorObjectMissName	include/rapidjson/error/error.h	/^    kParseErrorObjectMissName,                  \/\/!< Missing a name for object member.$/;"	e	enum:ParseErrorCode
kParseErrorStringEscapeInvalid	include/rapidjson/error/error.h	/^    kParseErrorStringEscapeInvalid,             \/\/!< Invalid escape character in string.$/;"	e	enum:ParseErrorCode
kParseErrorStringInvalidEncoding	include/rapidjson/error/error.h	/^    kParseErrorStringInvalidEncoding,           \/\/!< Invalid encoding in string.$/;"	e	enum:ParseErrorCode
kParseErrorStringMissQuotationMark	include/rapidjson/error/error.h	/^    kParseErrorStringMissQuotationMark,         \/\/!< Missing a closing quotation mark in string.$/;"	e	enum:ParseErrorCode
kParseErrorStringUnicodeEscapeInvalidHex	include/rapidjson/error/error.h	/^    kParseErrorStringUnicodeEscapeInvalidHex,   \/\/!< Incorrect hex digit after \\\\u escape in string.$/;"	e	enum:ParseErrorCode
kParseErrorStringUnicodeSurrogateInvalid	include/rapidjson/error/error.h	/^    kParseErrorStringUnicodeSurrogateInvalid,   \/\/!< The surrogate pair in string is invalid.$/;"	e	enum:ParseErrorCode
kParseErrorTermination	include/rapidjson/error/error.h	/^    kParseErrorTermination,                     \/\/!< Parsing was terminated.$/;"	e	enum:ParseErrorCode
kParseErrorUnspecificSyntaxError	include/rapidjson/error/error.h	/^    kParseErrorUnspecificSyntaxError            \/\/!< Unspecific syntax error.$/;"	e	enum:ParseErrorCode
kParseErrorValueInvalid	include/rapidjson/error/error.h	/^    kParseErrorValueInvalid,                    \/\/!< Invalid value.$/;"	e	enum:ParseErrorCode
kParseFullPrecisionFlag	include/rapidjson/reader.h	/^    kParseFullPrecisionFlag = 16,   \/\/!< Parse number in full precision (but slower).$/;"	e	enum:ParseFlag
kParseInsituFlag	include/rapidjson/reader.h	/^    kParseInsituFlag = 1,           \/\/!< In-situ(destructive) parsing.$/;"	e	enum:ParseFlag
kParseIterativeFlag	include/rapidjson/reader.h	/^    kParseIterativeFlag = 4,        \/\/!< Iterative(constant complexity in terms of function call stack size) parsing.$/;"	e	enum:ParseFlag
kParseNanAndInfFlag	include/rapidjson/reader.h	/^    kParseNanAndInfFlag = 256,      \/\/!< Allow parsing NaN, Inf, Infinity, -Inf and -Infinity as doubles.$/;"	e	enum:ParseFlag
kParseNoFlags	include/rapidjson/reader.h	/^    kParseNoFlags = 0,              \/\/!< No flags are set.$/;"	e	enum:ParseFlag
kParseNumbersAsStringsFlag	include/rapidjson/reader.h	/^    kParseNumbersAsStringsFlag = 64,    \/\/!< Parse all numbers (ints\/doubles) as strings.$/;"	e	enum:ParseFlag
kParseStopWhenDoneFlag	include/rapidjson/reader.h	/^    kParseStopWhenDoneFlag = 8,     \/\/!< After parsing a complete JSON root from stream, stop further processing the rest of stream. When this flag is used, parser will not generate kParseErrorDocumentRootNotSingular error.$/;"	e	enum:ParseFlag
kParseTrailingCommasFlag	include/rapidjson/reader.h	/^    kParseTrailingCommasFlag = 128, \/\/!< Allow trailing commas at the end of objects and arrays.$/;"	e	enum:ParseFlag
kParseValidateEncodingFlag	include/rapidjson/reader.h	/^    kParseValidateEncodingFlag = 2, \/\/!< Validate encoding of JSON strings.$/;"	e	enum:ParseFlag
kPatternValidatorOnly	include/rapidjson/schema.h	/^        kPatternValidatorOnly,$/;"	e	enum:internal::SchemaValidationContext::PatternValidatorType
kPatternValidatorWithAdditionalProperty	include/rapidjson/schema.h	/^        kPatternValidatorWithAdditionalProperty$/;"	e	enum:internal::SchemaValidationContext::PatternValidatorType
kPatternValidatorWithProperty	include/rapidjson/schema.h	/^        kPatternValidatorWithProperty,$/;"	e	enum:internal::SchemaValidationContext::PatternValidatorType
kPointerInvalidIndex	include/rapidjson/pointer.h	/^static const SizeType kPointerInvalidIndex = ~SizeType(0);  \/\/!< Represents an invalid index in GenericPointer::Token$/;"	v
kPointerParseErrorCharacterMustPercentEncode	include/rapidjson/pointer.h	/^    kPointerParseErrorCharacterMustPercentEncode    \/\/!< A character must percent encoded in URI fragment$/;"	e	enum:PointerParseErrorCode
kPointerParseErrorInvalidEscape	include/rapidjson/pointer.h	/^    kPointerParseErrorInvalidEscape,                \/\/!< Invalid escape$/;"	e	enum:PointerParseErrorCode
kPointerParseErrorInvalidPercentEncoding	include/rapidjson/pointer.h	/^    kPointerParseErrorInvalidPercentEncoding,       \/\/!< Invalid percent encoding in URI fragment$/;"	e	enum:PointerParseErrorCode
kPointerParseErrorNone	include/rapidjson/pointer.h	/^    kPointerParseErrorNone = 0,                     \/\/!< The parse is successful$/;"	e	enum:PointerParseErrorCode
kPointerParseErrorTokenMustBeginWithSolidus	include/rapidjson/pointer.h	/^    kPointerParseErrorTokenMustBeginWithSolidus,    \/\/!< A token must begin with a '\/'$/;"	e	enum:PointerParseErrorCode
kRangeCharacterClass	include/rapidjson/internal/regex.h	/^    static const unsigned kRangeCharacterClass = 0xFFFFFFFE;$/;"	m	class:internal::GenericRegex
kRangeNegationFlag	include/rapidjson/internal/regex.h	/^    static const unsigned kRangeNegationFlag = 0x80000000;$/;"	m	class:internal::GenericRegex
kRegexInvalidRange	include/rapidjson/internal/regex.h	/^static const SizeType kRegexInvalidRange = ~SizeType(0);$/;"	m	namespace:internal
kRegexInvalidState	include/rapidjson/internal/regex.h	/^static const SizeType kRegexInvalidState = ~SizeType(0);  \/\/!< Represents an invalid index in GenericRegex::State::out, out1$/;"	m	namespace:internal
kShortStringFlag	include/rapidjson/document.h	/^        kShortStringFlag = kStringType | kStringFlag | kCopyFlag | kInlineStrFlag,$/;"	e	enum:GenericValue::__anon4
kSignMask	include/rapidjson/internal/ieee754.h	/^    static const uint64_t kSignMask = RAPIDJSON_UINT64_C2(0x80000000, 0x00000000);$/;"	m	class:internal::Double
kSignificandMask	include/rapidjson/internal/ieee754.h	/^    static const uint64_t kSignificandMask = RAPIDJSON_UINT64_C2(0x000FFFFF, 0xFFFFFFFF);$/;"	m	class:internal::Double
kSignificandSize	include/rapidjson/internal/ieee754.h	/^    static const int kSignificandSize = 52;$/;"	m	class:internal::Double
kStringFlag	include/rapidjson/document.h	/^        kStringFlag     = 0x0400,$/;"	e	enum:GenericValue::__anon4
kStringSchemaType	include/rapidjson/schema.h	/^        kStringSchemaType,$/;"	e	enum:internal::Schema::SchemaValueType
kStringType	include/rapidjson/rapidjson.h	/^    kStringType = 5,    \/\/!< string$/;"	e	enum:Type
kTokenCount	include/rapidjson/reader.h	/^        kTokenCount$/;"	e	enum:GenericReader::Token
kTotalSchemaType	include/rapidjson/schema.h	/^        kTotalSchemaType$/;"	e	enum:internal::Schema::SchemaValueType
kTrueFlag	include/rapidjson/document.h	/^        kTrueFlag = kTrueType | kBoolFlag,$/;"	e	enum:GenericValue::__anon4
kTrueType	include/rapidjson/rapidjson.h	/^    kTrueType = 2,      \/\/!< true$/;"	e	enum:Type
kTypeBit	include/rapidjson/internal/biginteger.h	/^    static const size_t kTypeBit = sizeof(Type) * 8;$/;"	m	class:internal::BigInteger
kTypeMask	include/rapidjson/document.h	/^        kTypeMask = 0x07$/;"	e	enum:GenericValue::__anon4
kUTF16BE	include/rapidjson/encodings.h	/^    kUTF16BE = 2,   \/\/!< UTF-16 big endian.$/;"	e	enum:UTFType
kUTF16LE	include/rapidjson/encodings.h	/^    kUTF16LE = 1,   \/\/!< UTF-16 little endian.$/;"	e	enum:UTFType
kUTF32BE	include/rapidjson/encodings.h	/^    kUTF32BE = 4    \/\/!< UTF-32 big endian.$/;"	e	enum:UTFType
kUTF32LE	include/rapidjson/encodings.h	/^    kUTF32LE = 3,   \/\/!< UTF-32 little endian.$/;"	e	enum:UTFType
kUTF8	include/rapidjson/encodings.h	/^    kUTF8 = 0,      \/\/!< UTF-8.$/;"	e	enum:UTFType
kUint64Flag	include/rapidjson/document.h	/^        kUint64Flag     = 0x0100,$/;"	e	enum:GenericValue::__anon4
kUintFlag	include/rapidjson/document.h	/^        kUintFlag       = 0x0040,$/;"	e	enum:GenericValue::__anon4
kWriteDefaultFlags	include/rapidjson/writer.h	/^    kWriteDefaultFlags = RAPIDJSON_WRITE_DEFAULT_FLAGS  \/\/!< Default write flags. Can be customized by defining RAPIDJSON_WRITE_DEFAULT_FLAGS$/;"	e	enum:WriteFlag
kWriteNanAndInfFlag	include/rapidjson/writer.h	/^    kWriteNanAndInfFlag = 2,        \/\/!< Allow writing of Infinity, -Infinity and NaN.$/;"	e	enum:WriteFlag
kWriteNoFlags	include/rapidjson/writer.h	/^    kWriteNoFlags = 0,              \/\/!< No flags are set.$/;"	e	enum:WriteFlag
kWriteValidateEncodingFlag	include/rapidjson/writer.h	/^    kWriteValidateEncodingFlag = 1, \/\/!< Validate encoding of JSON strings.$/;"	e	enum:WriteFlag
kZeroOrMore	include/rapidjson/internal/regex.h	/^        kZeroOrMore,$/;"	e	enum:internal::GenericRegex::Operator
kZeroOrOne	include/rapidjson/internal/regex.h	/^        kZeroOrOne,$/;"	e	enum:internal::GenericRegex::Operator
kernel	DoseCalcIO/kernel.h	/^    KERNEL kernel[MAX_KERNELS];$/;"	m	struct:MONO_KERNELS
kernel_array	include/server/brain_defs.h	/^    float *kernel_array;    \/\/ dose deposition kernel$/;"	m	struct:SHM_DATA
kernel_dir	DoseCalcIO/paths.h	/^        std::string kernel_dir() { return data_dir() + "\/dsa"; }$/;"	f	class:Paths
kernel_extent	dosecalc-preprocess/argparser.h	/^    float        kernel_extent       = 2.f;           \/\/ dose kernel radius truncation parameter [unit: cm]$/;"	m	struct:CLIArgs
kernel_extent	include/server/brain_defs.h	/^    float kernel_extent;    \/\/ dose kernel radius truncation distance [unit: cm]$/;"	m	struct:CONSTANTS
kernel_extent_cm	DoseCalcIO/io_data_structs.h	/^    float       kernel_extent_cm;     \/\/ maximum radial distance used in CCCS [cm]$/;"	m	struct:HEADER_PATIENT
kernel_file	DoseCalcIO/kernel.h	/^        std::string kernel_file;$/;"	m	class:KERNEL
key_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef __key_t key_t; $/;"	t	file:
keys	DoseCalcIO/io_data_structs.h	/^    std::vector<uint64_t>  keys;  \/\/ linearized index into full dicom volume$/;"	m	struct:KeyValPairs
kvp	DoseCalcIO/io_data_structs.h	/^    KeyValPairs kvp;$/;"	m	struct:SparseData
label	DoseCalcIO/ctlut.h	/^    std::string label;$/;"	m	struct:CTLUT
label	DoseCalcIO/ctlut.h	/^    std::string label;$/;"	m	struct:LUTPOINT
last	dosecalc-preprocess/fmapProcessing.cpp	/^    int first, last;$/;"	m	struct:ActiveSegment	file:
ldiv_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^} ldiv_t; $/;"	t	typeref:struct:__anon21	file:
length	extern/python/generate_phantom.py	/^    length    = 25              # length of phantom (Y-axis)   [unit: cm]$/;"	v
length	include/cuda-common/helper_math.h	/^inline __host__ __device__ float length(float2 v)$/;"	f
length	include/cuda-common/helper_math.h	/^inline __host__ __device__ float length(float3 v)$/;"	f
length	include/cuda-common/helper_math.h	/^inline __host__ __device__ float length(float4 v)$/;"	f
length	include/rapidjson/document.h	/^        SizeType length;$/;"	m	struct:GenericValue::String
length	include/rapidjson/document.h	/^    const SizeType length; \/\/!< length of the string (excluding the trailing NULL terminator)$/;"	m	struct:GenericStringRef
length	include/rapidjson/pointer.h	/^        SizeType length;            \/\/!< Length of the name.$/;"	m	struct:GenericPointer::Token
length_	include/rapidjson/reader.h	/^        SizeType length_;$/;"	m	class:GenericReader::StackStream
lerp	include/cuda-common/helper_math.h	/^inline __device__ __host__ float lerp(float a, float b, float t)$/;"	f
lerp	include/cuda-common/helper_math.h	/^inline __device__ __host__ float2 lerp(float2 a, float2 b, float t)$/;"	f
lerp	include/cuda-common/helper_math.h	/^inline __device__ __host__ float3 lerp(float3 a, float3 b, float t)$/;"	f
lerp	include/cuda-common/helper_math.h	/^inline __device__ __host__ float4 lerp(float4 a, float4 b, float t)$/;"	f
level_stack_	include/rapidjson/writer.h	/^    internal::Stack<StackAllocator> level_stack_;$/;"	m	class:Writer
libraryPropertyType	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^} libraryPropertyType; $/;"	t	typeref:enum:libraryPropertyType_t	file:
libraryPropertyType_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^enum libraryPropertyType_t { $/;"	g	file:
ll2double	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline double ll2double(long long a, cudaRoundMode mode) $/;"	f	file:
lldiv_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^} lldiv_t; $/;"	t	typeref:struct:__anon22	file:
llmax	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^inline long long llmax(long long a, long long b) $/;"	f
llmin	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^inline long long llmin(long long a, long long b) $/;"	f
loadDicomInfo	RTClasses/rtimages.cpp	/^bool RTImage::loadDicomInfo(bool verbose) {$/;"	f	class:RTImage
loadDicomInfo	RTClasses/rtstruct.cpp	/^RTStruct::loadDicomInfo(bool verbose)$/;"	f	class:RTStruct
loadRTImageData	RTClasses/rtimages.cpp	/^int RTImage::loadRTImageData(bool verbose, bool flipXY) {$/;"	f	class:RTImage
loadRTStructData	RTClasses/rtstruct.cpp	/^RTStruct::loadRTStructData( int r, bool verbose)$/;"	f	class:RTStruct
loadRTStructInfo	RTClasses/rtstruct.cpp	/^RTStruct::loadRTStructInfo(bool verbose)$/;"	f	class:RTStruct
loadStructureSet	DoseCalcIO/roi.cpp	/^int loadStructureSet(StructureSet& roi, RTStruct& rtstruct, uint roi_idx, bool verbose) {$/;"	f
load_beam_list	DoseCalcIO/beam.cpp	/^int load_beam_list( std::vector<BEAM>& beams, std::string filepath, int requested_beam_count, int verbose ) {$/;"	f
load_binary_data	DoseCalcIO/binary_io.h	/^int load_binary_data(T *mat, uint3 count, char *filename, bool verbose=false) {$/;"	f
load_convolution_phi_angles	DoseCalcIO/kernel.cpp	/^int load_convolution_phi_angles( float **ptr, unsigned int size ) {$/;"	f
load_convolution_theta_angles	DoseCalcIO/kernel.cpp	/^int load_convolution_theta_angles( float **ptr, unsigned int size ) {$/;"	f
load_data	DoseCalcIO/binary_io.cpp	/^int load_data( CONSTANTS *host, SHM_DATA *data, bool verbose ) {$/;"	f
load_data	RTClasses/rtstruct.h	/^        bool load_data;$/;"	m	class:RTStruct::ROI_DATA
load_density	DoseCalcIO/binary_io.cpp	/^int load_density( SHM_DATA *data ) {$/;"	f
load_fluence_map	DoseCalcIO/fluence.cpp	/^int load_fluence_map( std::vector<float>& fluence_map, uint2 size, std::string& filename, bool verbose)$/;"	f
load_lookup_table	DoseCalcIO/ctlut.cpp	/^int load_lookup_table(CTLUT& lut, std::string filepath, int verbose) {$/;"	f
load_omni_beam_list	DoseCalcIO/beam.cpp	/^int load_omni_beam_list( BEAM* beams, int beam_count, int verbose )$/;"	f
load_omni_header	DoseCalcIO/calc_header.cpp	/^int load_omni_header( CONSTANTS *host, bool verbose )$/;"	f
locale_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef __locale_t locale_t; $/;"	t	file:
loff_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef __loff_t loff_t; $/;"	t	file:
log_alloc	CudaUtilities/memory_manager.cu	/^void MemoryManager::log_alloc(void* addr, int64_t usage) {$/;"	f	class:MemoryManager
log_dealloc	CudaUtilities/memory_manager.cu	/^void MemoryManager::log_dealloc(void* addr) {$/;"	f	class:MemoryManager
logconfig	RTClasses/rtimages.cpp	/^static LogConfig* logconfig = LogConfig::Instance();$/;"	v	file:
logconfig	RTClasses/rtstruct.cpp	/^static LogConfig* logconfig = LogConfig::Instance();$/;"	v	file:
m_activated	Utilities/wqueue.h	/^        bool m_activated;$/;"	m	class:wqueue
m_activated	dosecalc-beamlet/sparsify_manager.h	/^        bool m_activated=false;$/;"	m	class:SparsifyManager
m_beams_seen	dosecalc-beamlet/sparsify_worker.h	/^        std::unordered_set<uint> m_beams_seen;$/;"	m	class:SparsifyWorkerBase
m_chunksize	dosecalc-beamlet/sparsify_worker.h	/^        int                m_chunksize = _default_chunksize;$/;"	m	class:SparsifyWorkerBase
m_compress_lvl	dosecalc-beamlet/sparsify_worker.h	/^        int                m_compress_lvl = _default_compress_lvl;$/;"	m	class:SparsifyWorkerBase
m_condvar	Utilities/wqueue.h	/^        std::condition_variable_any m_condvar;$/;"	m	class:wqueue
m_data_dir	DoseCalcIO/paths.h	/^        std::string m_data_dir;$/;"	m	class:Paths
m_detached	Utilities/thread.h	/^        bool m_running, m_detached;$/;"	m	class:Thread
m_h5file	dosecalc-beamlet/sparsify_manager.h	/^        H5::H5File m_h5file;$/;"	m	class:SparsifyManager
m_h5file	dosecalc-beamlet/sparsify_worker.h	/^        H5::H5File m_h5file;$/;"	m	class:FullSparsifyWorker
m_h5filename	dosecalc-beamlet/sparsify_worker.h	/^        std::string m_h5filename;$/;"	m	class:FullSparsifyWorker
m_init	CudaUtilities/cuda_timing.cuh	/^        bool m_init = false;$/;"	m	class:CudaTimer	file:
m_initialized	dosecalc-beamlet/sparsify_manager.h	/^        bool m_initialized=false;$/;"	m	class:SparsifyManager
m_killnow	Utilities/wqueue.h	/^        bool m_killnow;$/;"	m	class:wqueue
m_killnow	Utilities/wqueue.h	/^        wqueue() : m_activated{true}, m_killnow(false) {}$/;"	f	class:wqueue
m_memblock_condvar	dosecalc-beamlet/sparsify_manager.h	/^        std::condition_variable m_memblock_condvar;$/;"	m	class:SparsifyManager
m_memblock_mutex	dosecalc-beamlet/sparsify_manager.h	/^        std::mutex m_memblock_mutex;$/;"	m	class:SparsifyManager
m_mutex	Utilities/wqueue.h	/^        std::recursive_mutex m_mutex;$/;"	m	class:wqueue
m_n	Utilities/logging.h	/^        unsigned int m_n = 0; \/\/ length of divider for previously called print_head()$/;"	m	class:Logger
m_pInstance	DoseCalcIO/paths.cpp	/^Paths* Paths::m_pInstance = NULL;$/;"	m	class:Paths	file:
m_pInstance	DoseCalcIO/paths.h	/^        static Paths* m_pInstance;$/;"	m	class:Paths
m_pInstance	RTClasses/logconfig.cpp	/^LogConfig* LogConfig::m_pInstance = nullptr;$/;"	m	class:LogConfig	file:
m_pInstance	RTClasses/logconfig.h	/^        static LogConfig* m_pInstance;$/;"	m	class:LogConfig
m_queue	Utilities/wqueue.h	/^        std::queue<T> m_queue;$/;"	m	class:wqueue
m_queue	dosecalc-beamlet/sparsify_worker.h	/^        wqueue<SparsifyData>&    m_queue;$/;"	m	class:SparsifyWorkerBase
m_running	Utilities/thread.h	/^        bool m_running, m_detached;$/;"	m	class:Thread
m_running	Utilities/timing.h	/^        bool m_running = false;$/;"	m	class:Timer
m_sidecar_path	dosecalc-beamlet/sparsify_manager.h	/^        std::string m_sidecar_path;$/;"	m	class:SparsifyManager
m_srworkers	dosecalc-beamlet/sparsify_manager.h	/^        std::vector<std::unique_ptr<SRWorker> > m_srworkers;$/;"	m	class:SparsifyManager
m_start	CudaUtilities/cuda_timing.cuh	/^        cudaEvent_t m_start = 0;$/;"	m	class:CudaTimer	file:
m_start	Utilities/timing.h	/^        timepoint_t m_start;$/;"	m	class:Timer
m_started	CudaUtilities/cuda_timing.cuh	/^        bool m_started = false;$/;"	m	class:CudaTimer	file:
m_stop	CudaUtilities/cuda_timing.cuh	/^        cudaEvent_t m_stop = 0;$/;"	m	class:CudaTimer	file:
m_stop	Utilities/timing.h	/^        timepoint_t m_stop;$/;"	m	class:Timer
m_stopped	CudaUtilities/cuda_timing.cuh	/^        bool m_stopped = false;$/;"	m	class:CudaTimer	file:
m_stream	CudaUtilities/cuda_timing.cuh	/^        cudaStream_t m_stream = 0;$/;"	m	class:CudaTimer	file:
m_temp_dir	DoseCalcIO/paths.h	/^        std::string m_temp_dir;$/;"	m	class:Paths
m_thresh	dosecalc-beamlet/sparsify_manager.h	/^        float m_thresh = _default_sparsity_threshold;$/;"	m	class:SparsifyManager
m_thresh	dosecalc-beamlet/sparsify_worker.h	/^        const float              m_thresh = _default_sparsity_threshold;$/;"	m	class:SparsifyWorkerBase
m_w2fworkers	dosecalc-beamlet/sparsify_manager.h	/^        std::vector<std::unique_ptr<BaseW2FWorker> > m_w2fworkers;$/;"	m	class:SparsifyManager
m_workerid	dosecalc-beamlet/sparsify_manager.h	/^        unsigned int m_workerid;$/;"	m	class:BaseW2FWorker
m_workerid	dosecalc-beamlet/sparsify_manager.h	/^        unsigned int m_workerid;$/;"	m	class:SRWorker
m_workerid	dosecalc-beamlet/sparsify_worker.h	/^        unsigned int             m_workerid;$/;"	m	class:SparsifyWorkerBase
m_write_strategy	dosecalc-beamlet/sparsify_manager.h	/^        WRITE_STRATEGY m_write_strategy;$/;"	m	class:SparsifyManager
main	RTClasses/anonymize_dicom.cpp	/^int main(int argc, char* argv[]) {$/;"	f
main	anonymize_dicom/anonymize_dicom.cpp	/^int main(int argc, char* argv[]) {$/;"	f
main	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	/^int main(argc, argv) int argc; char *argv[];$/;"	f
main	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	/^void main() {}$/;"	f
main	build/CMakeFiles/3.16.0/CompilerIdCUDA/CMakeCUDACompilerId.cu	/^int main(int argc, char* argv[])$/;"	f
main	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^int main(int argc, char *argv[]) $/;"	f
main	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^int main(int argc, char* argv[])$/;"	f
main	build/CMakeFiles/hdf5/cmake_hdf5_test.c	/^int main(int argc, char **argv) {$/;"	f
main	build/CMakeFiles/hdf5/cmake_hdf5_test.cxx	/^int main(int argc, char **argv) {$/;"	f
main	dosecalc-beam/main.cu	/^int main(int argc, char *argv[])$/;"	f
main	dosecalc-beamlet/main.cu	/^int main(int argc, char *argv[])$/;"	f
main	dosecalc-preprocess/main.cu	/^int main(int argc, char *argv[])$/;"	f
main	extern/python/read_dose_data.py	/^def main(input_fid, save_prefix, verbose=False):$/;"	f
makeSurfObject	CudaUtilities/make_tex_surf.cuh	/^void makeSurfObject(cudaSurfaceObject_t *surfobj, cudaArray *res) {$/;"	f
makeTexObject	CudaUtilities/make_tex_surf.cuh	/^template<> void makeTexObject<cudaArray>(cudaTextureObject_t *texobj, cudaArray *res, int dims,$/;"	f
makeTexObject	CudaUtilities/make_tex_surf.cuh	/^void makeTexObject(cudaTextureObject_t *texobj, T *res, int dims,$/;"	f
make_char1	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline char1 make_char1(signed char x) $/;"	f	file:
make_char2	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline char2 make_char2(signed char x, signed char y) $/;"	f	file:
make_char3	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline char3 make_char3(signed char x, signed char y, signed char z) $/;"	f	file:
make_char4	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline char4 make_char4(signed char x, signed char y, signed char z, signed char w) $/;"	f	file:
make_cudaExtent	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline cudaExtent make_cudaExtent(size_t w, size_t h, size_t d) $/;"	f	file:
make_cudaPitchedPtr	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline cudaPitchedPtr make_cudaPitchedPtr(void *d, size_t p, size_t xsz, size_t ysz) $/;"	f	file:
make_cudaPos	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline cudaPos make_cudaPos(size_t x, size_t y, size_t z) $/;"	f	file:
make_cumulative_kernel	DoseCalcIO/kernel.cpp	/^int make_cumulative_kernel(KERNEL *kern, int NPHI, int NTHETA, int verbose)$/;"	f
make_double1	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline double1 make_double1(double x) $/;"	f	file:
make_double2	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline double2 make_double2(double x, double y) $/;"	f	file:
make_double3	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline double3 make_double3(double x, double y, double z) $/;"	f	file:
make_double4	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline double4 make_double4(double x, double y, double z, double w) $/;"	f	file:
make_float1	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline float1 make_float1(float x) $/;"	f	file:
make_float2	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline float2 make_float2(float x, float y) $/;"	f	file:
make_float2	include/cuda-common/helper_math.h	/^inline __host__ __device__ float2 make_float2(float s)$/;"	f
make_float2	include/cuda-common/helper_math.h	/^inline __host__ __device__ float2 make_float2(float3 a)$/;"	f
make_float2	include/cuda-common/helper_math.h	/^inline __host__ __device__ float2 make_float2(int2 a)$/;"	f
make_float2	include/cuda-common/helper_math.h	/^inline __host__ __device__ float2 make_float2(uint2 a)$/;"	f
make_float3	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline float3 make_float3(float x, float y, float z) $/;"	f	file:
make_float3	include/cuda-common/helper_math.h	/^inline __host__ __device__ float3 make_float3(float s)$/;"	f
make_float3	include/cuda-common/helper_math.h	/^inline __host__ __device__ float3 make_float3(float2 a)$/;"	f
make_float3	include/cuda-common/helper_math.h	/^inline __host__ __device__ float3 make_float3(float2 a, float s)$/;"	f
make_float3	include/cuda-common/helper_math.h	/^inline __host__ __device__ float3 make_float3(float4 a)$/;"	f
make_float3	include/cuda-common/helper_math.h	/^inline __host__ __device__ float3 make_float3(int3 a)$/;"	f
make_float3	include/cuda-common/helper_math.h	/^inline __host__ __device__ float3 make_float3(uint3 a)$/;"	f
make_float4	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline float4 make_float4(float x, float y, float z, float w) $/;"	f	file:
make_float4	include/cuda-common/helper_math.h	/^inline __host__ __device__ float4 make_float4(float s)$/;"	f
make_float4	include/cuda-common/helper_math.h	/^inline __host__ __device__ float4 make_float4(float3 a)$/;"	f
make_float4	include/cuda-common/helper_math.h	/^inline __host__ __device__ float4 make_float4(float3 a, float w)$/;"	f
make_float4	include/cuda-common/helper_math.h	/^inline __host__ __device__ float4 make_float4(int4 a)$/;"	f
make_float4	include/cuda-common/helper_math.h	/^inline __host__ __device__ float4 make_float4(uint4 a)$/;"	f
make_int1	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline int1 make_int1(int x) $/;"	f	file:
make_int2	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline int2 make_int2(int x, int y) $/;"	f	file:
make_int2	include/cuda-common/helper_math.h	/^inline __host__ __device__ int2 make_int2(float2 a)$/;"	f
make_int2	include/cuda-common/helper_math.h	/^inline __host__ __device__ int2 make_int2(int s)$/;"	f
make_int2	include/cuda-common/helper_math.h	/^inline __host__ __device__ int2 make_int2(int3 a)$/;"	f
make_int2	include/cuda-common/helper_math.h	/^inline __host__ __device__ int2 make_int2(uint2 a)$/;"	f
make_int3	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline int3 make_int3(int x, int y, int z) $/;"	f	file:
make_int3	include/cuda-common/helper_math.h	/^inline __host__ __device__ int3 make_int3(float3 a)$/;"	f
make_int3	include/cuda-common/helper_math.h	/^inline __host__ __device__ int3 make_int3(int s)$/;"	f
make_int3	include/cuda-common/helper_math.h	/^inline __host__ __device__ int3 make_int3(int2 a)$/;"	f
make_int3	include/cuda-common/helper_math.h	/^inline __host__ __device__ int3 make_int3(int2 a, int s)$/;"	f
make_int3	include/cuda-common/helper_math.h	/^inline __host__ __device__ int3 make_int3(uint3 a)$/;"	f
make_int4	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline int4 make_int4(int x, int y, int z, int w) $/;"	f	file:
make_int4	include/cuda-common/helper_math.h	/^inline __host__ __device__ int4 make_int4(float4 a)$/;"	f
make_int4	include/cuda-common/helper_math.h	/^inline __host__ __device__ int4 make_int4(int s)$/;"	f
make_int4	include/cuda-common/helper_math.h	/^inline __host__ __device__ int4 make_int4(int3 a)$/;"	f
make_int4	include/cuda-common/helper_math.h	/^inline __host__ __device__ int4 make_int4(int3 a, int w)$/;"	f
make_int4	include/cuda-common/helper_math.h	/^inline __host__ __device__ int4 make_int4(uint4 a)$/;"	f
make_long1	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline long1 make_long1(long x) $/;"	f	file:
make_long2	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline long2 make_long2(long x, long y) $/;"	f	file:
make_long3	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline long3 make_long3(long x, long y, long z) $/;"	f	file:
make_long4	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline long4 make_long4(long x, long y, long z, long w) $/;"	f	file:
make_longlong1	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline longlong1 make_longlong1(long long x) $/;"	f	file:
make_longlong2	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline longlong2 make_longlong2(long long x, long long y) $/;"	f	file:
make_longlong3	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline longlong3 make_longlong3(long long x, long long y, long long z) $/;"	f	file:
make_longlong4	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline longlong4 make_longlong4(long long x, long long y, long long z, long long w) $/;"	f	file:
make_poly_kernel	DoseCalcIO/kernel.cpp	/^int make_poly_kernel(MONO_KERNELS *mono, KERNEL *poly, int verbose, int debug) {$/;"	f
make_short1	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline short1 make_short1(short x) $/;"	f	file:
make_short2	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline short2 make_short2(short x, short y) $/;"	f	file:
make_short3	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline short3 make_short3(short x, short y, short z) $/;"	f	file:
make_short4	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline short4 make_short4(short x, short y, short z, short w) $/;"	f	file:
make_uchar1	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline uchar1 make_uchar1(unsigned char x) $/;"	f	file:
make_uchar2	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline uchar2 make_uchar2(unsigned char x, unsigned char y) $/;"	f	file:
make_uchar3	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline uchar3 make_uchar3(unsigned char x, unsigned char y, unsigned char z) $/;"	f	file:
make_uchar4	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline uchar4 make_uchar4(unsigned char x, unsigned char y, unsigned char z, unsigned char w) $/;"	f	file:
make_uint1	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline uint1 make_uint1(unsigned x) $/;"	f	file:
make_uint2	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline uint2 make_uint2(unsigned x, unsigned y) $/;"	f	file:
make_uint2	include/cuda-common/helper_math.h	/^inline __host__ __device__ uint2 make_uint2(int2 a)$/;"	f
make_uint2	include/cuda-common/helper_math.h	/^inline __host__ __device__ uint2 make_uint2(uint s)$/;"	f
make_uint2	include/cuda-common/helper_math.h	/^inline __host__ __device__ uint2 make_uint2(uint3 a)$/;"	f
make_uint3	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline uint3 make_uint3(unsigned x, unsigned y, unsigned z) $/;"	f	file:
make_uint3	include/cuda-common/helper_math.h	/^inline __host__ __device__ uint3 make_uint3(int3 a)$/;"	f
make_uint3	include/cuda-common/helper_math.h	/^inline __host__ __device__ uint3 make_uint3(uint s)$/;"	f
make_uint3	include/cuda-common/helper_math.h	/^inline __host__ __device__ uint3 make_uint3(uint2 a)$/;"	f
make_uint3	include/cuda-common/helper_math.h	/^inline __host__ __device__ uint3 make_uint3(uint2 a, uint s)$/;"	f
make_uint3	include/cuda-common/helper_math.h	/^inline __host__ __device__ uint3 make_uint3(uint4 a)$/;"	f
make_uint4	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline uint4 make_uint4(unsigned x, unsigned y, unsigned z, unsigned w) $/;"	f	file:
make_uint4	include/cuda-common/helper_math.h	/^inline __host__ __device__ uint4 make_uint4(int4 a)$/;"	f
make_uint4	include/cuda-common/helper_math.h	/^inline __host__ __device__ uint4 make_uint4(uint s)$/;"	f
make_uint4	include/cuda-common/helper_math.h	/^inline __host__ __device__ uint4 make_uint4(uint3 a)$/;"	f
make_uint4	include/cuda-common/helper_math.h	/^inline __host__ __device__ uint4 make_uint4(uint3 a, uint w)$/;"	f
make_ulong1	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline ulong1 make_ulong1(unsigned long x) $/;"	f	file:
make_ulong2	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline ulong2 make_ulong2(unsigned long x, unsigned long y) $/;"	f	file:
make_ulong3	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline ulong3 make_ulong3(unsigned long x, unsigned long y, unsigned long z) $/;"	f	file:
make_ulong4	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline ulong4 make_ulong4(unsigned long x, unsigned long y, unsigned long z, unsigned long w) $/;"	f	file:
make_ulonglong1	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline ulonglong1 make_ulonglong1(unsigned long long x) $/;"	f	file:
make_ulonglong2	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline ulonglong2 make_ulonglong2(unsigned long long x, unsigned long long y) $/;"	f	file:
make_ulonglong3	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline ulonglong3 make_ulonglong3(unsigned long long x, unsigned long long y, unsigned long long z) $/;"	f	file:
make_ulonglong4	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline ulonglong4 make_ulonglong4(unsigned long long x, unsigned long long y, unsigned long long z, unsigned long long w) $/;"	f	file:
make_ushort1	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline ushort1 make_ushort1(unsigned short x) $/;"	f	file:
make_ushort2	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline ushort2 make_ushort2(unsigned short x, unsigned short y) $/;"	f	file:
make_ushort3	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline ushort3 make_ushort3(unsigned short x, unsigned short y, unsigned short z) $/;"	f	file:
make_ushort4	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline ushort4 make_ushort4(unsigned short x, unsigned short y, unsigned short z, unsigned short w) $/;"	f	file:
mask	DoseCalcIO/roi.h	/^        std::vector<uint8_t> mask; \/\/ linearized binary array (1: in ROI, 0: out ROI)$/;"	m	class:DenseROIMask
massdens	DoseCalcIO/ctlut.h	/^    float massdens;   \/\/ [g\/cm^3]$/;"	m	struct:LUTPOINT
mat_map	extern/python/materials.py	/^mat_map = {$/;"	v
matrix	DoseCalcIO/kernel.h	/^        std::vector<float> matrix[N_KERNEL_CATEGORIES];  \/\/kernel values for each category$/;"	m	class:KERNEL
max	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^inline int max(int a, int b) $/;"	f
max	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline double max(double a, double b) $/;"	f	file:
max	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline double max(double a, float b) $/;"	f	file:
max	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline double max(float a, double b) $/;"	f	file:
max	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline float max(float a, float b) $/;"	f	file:
max	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline long long max(long long a, long long b) $/;"	f	file:
max	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline long max(long a, long b) $/;"	f	file:
max	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline unsigned long long max(long long a, unsigned long long b) $/;"	f	file:
max	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline unsigned long long max(unsigned long long a, long long b) $/;"	f	file:
max	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline unsigned long long max(unsigned long long a, unsigned long long b) $/;"	f	file:
max	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline unsigned long max(long a, unsigned long b) $/;"	f	file:
max	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline unsigned long max(unsigned long a, long b) $/;"	f	file:
max	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline unsigned long max(unsigned long a, unsigned long b) $/;"	f	file:
max	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline unsigned max(int a, unsigned b) $/;"	f	file:
max	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline unsigned max(unsigned a, int b) $/;"	f	file:
max	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline unsigned max(unsigned a, unsigned b) $/;"	f	file:
max	include/cuda-common/helper_math.h	/^inline __host__ __device__ int2 max(int2 a, int2 b)$/;"	f
max	include/cuda-common/helper_math.h	/^inline __host__ __device__ int3 max(int3 a, int3 b)$/;"	f
max	include/cuda-common/helper_math.h	/^inline __host__ __device__ int4 max(int4 a, int4 b)$/;"	f
max	include/cuda-common/helper_math.h	/^inline __host__ __device__ uint2 max(uint2 a, uint2 b)$/;"	f
max	include/cuda-common/helper_math.h	/^inline __host__ __device__ uint3 max(uint3 a, uint3 b)$/;"	f
max	include/cuda-common/helper_math.h	/^inline __host__ __device__ uint4 max(uint4 a, uint4 b)$/;"	f
max	include/cuda-common/helper_math.h	/^inline int max(int a, int b)$/;"	f
max	include/rapidjson/document.h	37;"	d
maxDecimalPlaces_	include/rapidjson/writer.h	/^    int maxDecimalPlaces_;$/;"	m	class:Writer
maxItems_	include/rapidjson/schema.h	/^    SizeType maxItems_;$/;"	m	class:internal::Schema
maxLength_	include/rapidjson/schema.h	/^    SizeType maxLength_;$/;"	m	class:internal::Schema
maxProperties_	include/rapidjson/schema.h	/^    SizeType maxProperties_;$/;"	m	class:internal::Schema
max_align_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^} max_align_t; $/;"	t	typeref:struct:__anon15	file:
max_beamlet_size	DoseCalcIO/io_data_structs.h	/^    float2  max_beamlet_size;    \/\/ maximum size of beamlet due to divergence\/magnification$/;"	m	struct:PILLAR_GRID
max_rev_size	dosecalc-preprocess/argparser.h	/^    uint3        max_rev_size        = {500,500,500}; \/\/ size of REV dynamic allocation on GPU$/;"	m	struct:CLIArgs
max_rev_size	include/server/brain_defs.h	/^    uint3 max_rev_size;     \/\/ max BEV dimensions per beam orientation$/;"	m	struct:CONSTANTS
maxerror	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__syscall_slong_t maxerror; $/;"	m	struct:timex	file:
maximum_	include/rapidjson/schema.h	/^    SValue maximum_;$/;"	m	class:internal::Schema
mem_limit	CudaUtilities/memory_manager.cuh	/^        int64_t mem_limit;$/;"	m	class:MemoryManager	file:
mem_size	DoseCalcIO/volume.h	/^        inline uint mem_size() { return nvoxels() * sizeof(T); }$/;"	f	class:Volume
mem_usage	CudaUtilities/memory_manager.cuh	/^        int64_t mem_usage = 0;$/;"	m	class:MemoryManager	file:
members	include/rapidjson/document.h	/^        Member* members;$/;"	m	struct:GenericValue::ObjectData
memoryAvailable	CudaUtilities/memory_manager.cuh	/^        int memoryAvailable(int64_t mem) const {$/;"	f	class:MemoryManager
memoryRemaining	CudaUtilities/memory_manager.cuh	/^        int64_t memoryRemaining() const {$/;"	f	class:MemoryManager
memoryUsed	CudaUtilities/memory_manager.cuh	/^        int64_t memoryUsed() const {$/;"	f	class:MemoryManager
memory_managers	dosecalc-beamlet/nvbbRayConvolve_host.cu	/^MemoryManager     memory_managers    [ MAXIMUM_DEVICE_COUNT ] = {};$/;"	v
memory_usage	extern/python/read_dose_data.py	/^def memory_usage():$/;"	f
min	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^inline int min(int a, int b) $/;"	f
min	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline double min(double a, double b) $/;"	f	file:
min	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline double min(double a, float b) $/;"	f	file:
min	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline double min(float a, double b) $/;"	f	file:
min	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline float min(float a, float b) $/;"	f	file:
min	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline long long min(long long a, long long b) $/;"	f	file:
min	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline long min(long a, long b) $/;"	f	file:
min	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline unsigned long long min(long long a, unsigned long long b) $/;"	f	file:
min	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline unsigned long long min(unsigned long long a, long long b) $/;"	f	file:
min	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline unsigned long long min(unsigned long long a, unsigned long long b) $/;"	f	file:
min	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline unsigned long min(long a, unsigned long b) $/;"	f	file:
min	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline unsigned long min(unsigned long a, long b) $/;"	f	file:
min	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline unsigned long min(unsigned long a, unsigned long b) $/;"	f	file:
min	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline unsigned min(int a, unsigned b) $/;"	f	file:
min	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline unsigned min(unsigned a, int b) $/;"	f	file:
min	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline unsigned min(unsigned a, unsigned b) $/;"	f	file:
min	include/cuda-common/helper_math.h	/^inline __host__ __device__ int2 min(int2 a, int2 b)$/;"	f
min	include/cuda-common/helper_math.h	/^inline __host__ __device__ int3 min(int3 a, int3 b)$/;"	f
min	include/cuda-common/helper_math.h	/^inline __host__ __device__ int4 min(int4 a, int4 b)$/;"	f
min	include/cuda-common/helper_math.h	/^inline __host__ __device__ uint2 min(uint2 a, uint2 b)$/;"	f
min	include/cuda-common/helper_math.h	/^inline __host__ __device__ uint3 min(uint3 a, uint3 b)$/;"	f
min	include/cuda-common/helper_math.h	/^inline __host__ __device__ uint4 min(uint4 a, uint4 b)$/;"	f
min	include/cuda-common/helper_math.h	/^inline int min(int a, int b)$/;"	f
min	include/rapidjson/document.h	36;"	d
minIndex	include/rapidjson/internal/regex.h	/^        SizeType minIndex;$/;"	m	struct:internal::GenericRegex::Frag
minItems_	include/rapidjson/schema.h	/^    SizeType minItems_;$/;"	m	class:internal::Schema
minLength_	include/rapidjson/schema.h	/^    SizeType minLength_;$/;"	m	class:internal::Schema
minProperties_	include/rapidjson/schema.h	/^    SizeType minProperties_;$/;"	m	class:internal::Schema
minimum_	include/rapidjson/schema.h	/^    SValue minimum_;$/;"	m	class:internal::Schema
mode_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef __mode_t mode_t; $/;"	t	file:
modes	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^unsigned modes; $/;"	m	struct:timex	file:
mono_kernels	dosecalc-beam/main.cu	/^MONO_KERNELS mono_kernels;$/;"	v
mono_kernels	dosecalc-beamlet/main.cu	/^MONO_KERNELS mono_kernels;$/;"	v
move	include/rapidjson/schema.h	/^        schemaRef_(std::move(rhs.schemaRef_))$/;"	f	class:GenericSchemaDocument
move_file	DoseCalcIO/io_helpers.cpp	/^    int move_file(const std::string& oldpath, const std::string& newpath) {$/;"	f	namespace:dcio
mu	DoseCalcIO/kernel.h	/^    float  mu[MAX_KERNELS];$/;"	m	struct:MONO_KERNELS
mu_en	DoseCalcIO/kernel.h	/^    float  mu_en[MAX_KERNELS];$/;"	m	struct:MONO_KERNELS
mul24	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline int mul24(int a, int b) $/;"	f	file:
mul64hi	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline long long mul64hi(long long a, long long b) $/;"	f	file:
mul64hi	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned long long mul64hi(long long a, unsigned long long b) $/;"	f	file:
mul64hi	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned long long mul64hi(unsigned long long a, long long b) $/;"	f	file:
mul64hi	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned long long mul64hi(unsigned long long a, unsigned long long b) $/;"	f	file:
mulhi	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline int mulhi(int a, int b) $/;"	f	file:
mulhi	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned mulhi(int a, unsigned b) $/;"	f	file:
mulhi	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned mulhi(unsigned a, int b) $/;"	f	file:
mulhi	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned mulhi(unsigned a, unsigned b) $/;"	f	file:
multipleOf_	include/rapidjson/schema.h	/^    SValue multipleOf_;$/;"	m	class:internal::Schema
multiple_scatter	DoseCalcIO/kernel.h	/^    multiple_scatter,$/;"	m	class:KERNEL_CATEGORIES
n	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^size_t n; $/;"	m	class:__cudaOccupancyB2DHelper	file:
n	include/rapidjson/document.h	/^        Number n;$/;"	m	union:GenericValue::Data
n_unpackstreams	include/server/brain_defs.h	/^    int nrays, n_unpackstreams, deviceid, gpuid;$/;"	m	struct:DEVICE_THREAD_DATA
name	DoseCalcIO/roi.h	/^        std::string name;       \/\/ name of ROI structure$/;"	m	class:BaseROIMask
name	include/rapidjson/document.h	/^    GenericValue<Encoding, Allocator> name;     \/\/!< name of member (must be a string)$/;"	m	struct:GenericMember
name	include/rapidjson/pointer.h	/^        const Ch* name;             \/\/!< Name of the token. It has null character at the end but it can contain null character.$/;"	m	struct:GenericPointer::Token
name	include/rapidjson/schema.h	/^        SValue name;$/;"	m	struct:internal::Schema::Property
nameBuffer_	include/rapidjson/pointer.h	/^    Ch* nameBuffer_;                        \/\/!< A buffer containing all names in tokens.$/;"	m	class:GenericPointer
nbatches	DoseCalcIO/io_data_structs.h	/^    unsigned int nbatches = 1;$/;"	m	struct:BLT_CONV_DATA
nbeams	extern/python/utils/show_fmap.py	/^nbeams = len(fmaps)$/;"	v
nbeams_requested	dosecalc-preprocess/argparser.h	/^    int          nbeams_requested    = -1;            \/\/ use all available beams by default$/;"	m	struct:CLIArgs
nconvos	include/client/dummy_defs.h	/^    int nconvos;           \/\/ total number of convolutions$/;"	m	class:MGCS_PARAMS
ndevices	include/client/dummy_defs.h	/^    int ndevices;          \/\/ GPUs per server$/;"	m	class:MGCS_PARAMS
next	include/rapidjson/allocators.h	/^        ChunkHeader *next;  \/\/!< Next chunk in the linked list.$/;"	m	struct:MemoryPoolAllocator::ChunkHeader
next	include/rapidjson/internal/regex.h	/^        SizeType next;$/;"	m	struct:internal::GenericRegex::Range
nkernels	DoseCalcIO/kernel.h	/^    int    nkernels;$/;"	m	struct:MONO_KERNELS
nlink_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef __nlink_t nlink_t; $/;"	t	file:
nnodes	include/client/dummy_defs.h	/^    int nnodes;            \/\/ maximum nodes in mgcs$/;"	m	class:MGCS_PARAMS
nolut	dosecalc-preprocess/argparser.h	/^    bool         nolut               = false;         \/\/ disable use of the CT LUT (hotfix)$/;"	m	struct:CLIArgs
nones	DoseCalcIO/roi.cpp	/^uint DenseROIMask::nones() {$/;"	f	class:DenseROIMask
normalize	DoseCalcIO/kernel.cpp	/^void KERNEL::normalize(bool verbose) {$/;"	f	class:KERNEL
normalize	include/cuda-common/helper_math.h	/^inline __host__ __device__ float2 normalize(float2 v)$/;"	f
normalize	include/cuda-common/helper_math.h	/^inline __host__ __device__ float3 normalize(float3 v)$/;"	f
normalize	include/cuda-common/helper_math.h	/^inline __host__ __device__ float4 normalize(float4 v)$/;"	f
normcdf	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline float normcdf(float a) $/;"	f	file:
normcdfinv	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline float normcdfinv(float a) $/;"	f	file:
notValidatorIndex_	include/rapidjson/schema.h	/^    SizeType notValidatorIndex_;$/;"	m	class:internal::Schema
not_	include/rapidjson/schema.h	/^    const SchemaType* not_;$/;"	m	class:internal::Schema
nphi	DoseCalcIO/io_data_structs.h	/^    ushort      nphi;                 \/\/ number of zenithal kernel rays$/;"	m	struct:HEADER_PATIENT
nphi	dosecalc-preprocess/argparser.h	/^    unsigned int nphi                = 8;             \/\/ number of zenithal conv.angles (kernel rotation)$/;"	m	struct:CLIArgs
nphi	include/client/dummy_defs.h	/^    unsigned int nphi;      \/\/ azimuthal angles$/;"	m	class:MGCS_PARAMS
nphi	include/server/brain_defs.h	/^    unsigned int nphi;      \/\/ kernel azimuthal angles$/;"	m	struct:CONSTANTS
nradii	DoseCalcIO/io_data_structs.h	/^    ushort      nradii;               \/\/ number of radial samples along each kernel ray$/;"	m	struct:HEADER_PATIENT
nradii	DoseCalcIO/kernel.h	/^        int   nradii;$/;"	m	class:KERNEL
nradii	include/server/brain_defs.h	/^    unsigned int nradii;    \/\/ number of radial boundaries in dose deposition kernel$/;"	m	struct:CONSTANTS
nrays	include/server/brain_defs.h	/^    int nrays, n_unpackstreams, deviceid, gpuid;$/;"	m	struct:DEVICE_THREAD_DATA
nservers	include/client/dummy_defs.h	/^    int nservers;          \/\/ maximum servers per node$/;"	m	class:MGCS_PARAMS
nstreams	include/client/dummy_defs.h	/^    int nstreams;          \/\/ number of streams per GPU$/;"	m	class:MGCS_PARAMS
ntheta	DoseCalcIO/io_data_structs.h	/^    ushort      ntheta;               \/\/ number of azimuthal kernel rays$/;"	m	struct:HEADER_PATIENT
ntheta	DoseCalcIO/kernel.h	/^        int   ntheta;$/;"	m	class:KERNEL
ntheta	dosecalc-preprocess/argparser.h	/^    unsigned int ntheta              = 8;             \/\/ number of azimuthal conv. angles (kernel fan)$/;"	m	struct:CLIArgs
ntheta	include/client/dummy_defs.h	/^    unsigned int ntheta;    \/\/ zenithal angles$/;"	m	class:MGCS_PARAMS
ntheta	include/server/brain_defs.h	/^    unsigned int ntheta;    \/\/ kernel zenithal angles$/;"	m	struct:CONSTANTS
nullptr_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef __decltype((nullptr)) nullptr_t; $/;"	t	file:
nullptr_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef __decltype((nullptr)) nullptr_t; $/;"	t	namespace:std	file:
numBeamlets	DoseCalcIO/io_data_structs.h	/^    int numBeamlets;             \/\/ number of active pillars in this fluence map$/;"	m	struct:PILLAR_GRID
numPillars	DoseCalcIO/io_data_structs.h	/^    int2 numPillars;             \/\/ number of pillars along x and z axis in pillarMap.$/;"	m	struct:PILLAR_GRID
num_colors	include/profile.h	/^const int num_colors = sizeof(colors)\/sizeof(uint32_t);$/;"	v
nvoxels	DoseCalcIO/io_data_structs.h	/^    uint nvoxels() { return crop_size.x * crop_size.y * crop_size.z; }$/;"	f	struct:ArrayProps
nvoxels	DoseCalcIO/roi.h	/^        uint nvoxels() { return props.nvoxels(); }$/;"	f	class:BaseROIMask
nvoxels	DoseCalcIO/volume.h	/^        inline uint nvoxels() { return size.x * size.y * size.z; }$/;"	f	class:Volume
nvoxels	DoseCalcIO/volume.h	/^    uint nvoxels() const { return size.x*size.y*size.z; }$/;"	f	struct:FrameOfReference
nvoxels	include/server/brain_defs.h	/^    CUDEV_FXN inline int nvoxels() const { return size.x*size.y*size.z; }$/;"	f	struct:CONSTANTS
nzeros	DoseCalcIO/roi.h	/^        uint nzeros() { return nvoxels() - nones(); }$/;"	f	class:BaseROIMask
o	include/rapidjson/document.h	/^        ObjectData o;$/;"	m	union:GenericValue::Data
objectPatternValidatorType	include/rapidjson/schema.h	/^    PatternValidatorType objectPatternValidatorType;$/;"	m	struct:internal::SchemaValidationContext
off64_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef __off64_t off64_t; $/;"	t	file:
off_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef __off_t off_t; $/;"	t	file:
offset	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__syscall_slong_t offset; $/;"	m	struct:timex	file:
offset_	include/rapidjson/error/error.h	/^    size_t offset_;$/;"	m	struct:ParseResult
oldsize	dosecalc-beamlet/nvbbRayConvolve_host.cu	/^        uint3 oldsize;$/;"	m	class:ArraySizeError	file:
oneOf_	include/rapidjson/schema.h	/^    SchemaArray oneOf_;$/;"	m	class:internal::Schema
open_masks	extern/matlab/open_masks.m	/^function [ masks ] = open_masks( h5file, order, verbose )$/;"	f
open_masks	extern/python/open_masks.py	/^def open_masks(h5file):$/;"	f
operator !=	include/rapidjson/document.h	/^    bool operator!=(ConstIterator that) const { return ptr_ != that.ptr_; }$/;"	f	class:GenericMemberIterator
operator !=	include/rapidjson/document.h	/^    bool operator!=(const Ch* rhs) const { return !(*this == rhs); }$/;"	f	class:GenericValue
operator !=	include/rapidjson/document.h	/^    bool operator!=(const GenericValue<Encoding, SourceAllocator>& rhs) const { return !(*this == rhs); }$/;"	f	class:GenericValue
operator !=	include/rapidjson/document.h	/^    template <typename T> RAPIDJSON_DISABLEIF_RETURN((internal::IsGenericValue<T>), (bool)) operator!=(const T& rhs) const { return !(*this == rhs); }$/;"	f	class:GenericValue
operator !=	include/rapidjson/document.h	/^    template <typename T> friend RAPIDJSON_DISABLEIF_RETURN((internal::IsGenericValue<T>), (bool)) operator!=(const T& lhs, const GenericValue& rhs) { return !(rhs == lhs); }$/;"	f	class:GenericValue
operator !=	include/rapidjson/error/error.h	/^    bool operator!=(ParseErrorCode code) const { return !(*this == code); }$/;"	f	struct:ParseResult
operator !=	include/rapidjson/error/error.h	/^    bool operator!=(const ParseResult& that) const { return !(*this == that); }$/;"	f	struct:ParseResult
operator !=	include/rapidjson/error/error.h	/^    friend bool operator!=(ParseErrorCode code, const ParseResult & err) { return err != code; }$/;"	f	struct:ParseResult
operator !=	include/rapidjson/pointer.h	/^    bool operator!=(const GenericPointer& rhs) const { return !(*this == rhs); }$/;"	f	class:GenericPointer
operator ()	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^size_t operator()(int) $/;"	f	class:__cudaOccupancyB2DHelper
operator ()	include/rapidjson/schema.h	/^    bool operator()(Handler& handler) {$/;"	f	class:SchemaValidatingReader
operator *	include/cuda-common/helper_math.h	/^inline __host__ __device__ float2 operator*(float b, float2 a)$/;"	f
operator *	include/cuda-common/helper_math.h	/^inline __host__ __device__ float2 operator*(float2 a, float b)$/;"	f
operator *	include/cuda-common/helper_math.h	/^inline __host__ __device__ float2 operator*(float2 a, float2 b)$/;"	f
operator *	include/cuda-common/helper_math.h	/^inline __host__ __device__ float3 operator*(float b, float3 a)$/;"	f
operator *	include/cuda-common/helper_math.h	/^inline __host__ __device__ float3 operator*(float3 a, float b)$/;"	f
operator *	include/cuda-common/helper_math.h	/^inline __host__ __device__ float3 operator*(float3 a, float3 b)$/;"	f
operator *	include/cuda-common/helper_math.h	/^inline __host__ __device__ float4 operator*(float b, float4 a)$/;"	f
operator *	include/cuda-common/helper_math.h	/^inline __host__ __device__ float4 operator*(float4 a, float b)$/;"	f
operator *	include/cuda-common/helper_math.h	/^inline __host__ __device__ float4 operator*(float4 a, float4 b)$/;"	f
operator *	include/cuda-common/helper_math.h	/^inline __host__ __device__ int2 operator*(int b, int2 a)$/;"	f
operator *	include/cuda-common/helper_math.h	/^inline __host__ __device__ int2 operator*(int2 a, int b)$/;"	f
operator *	include/cuda-common/helper_math.h	/^inline __host__ __device__ int2 operator*(int2 a, int2 b)$/;"	f
operator *	include/cuda-common/helper_math.h	/^inline __host__ __device__ int3 operator*(int b, int3 a)$/;"	f
operator *	include/cuda-common/helper_math.h	/^inline __host__ __device__ int3 operator*(int3 a, int b)$/;"	f
operator *	include/cuda-common/helper_math.h	/^inline __host__ __device__ int3 operator*(int3 a, int3 b)$/;"	f
operator *	include/cuda-common/helper_math.h	/^inline __host__ __device__ int4 operator*(int b, int4 a)$/;"	f
operator *	include/cuda-common/helper_math.h	/^inline __host__ __device__ int4 operator*(int4 a, int b)$/;"	f
operator *	include/cuda-common/helper_math.h	/^inline __host__ __device__ int4 operator*(int4 a, int4 b)$/;"	f
operator *	include/cuda-common/helper_math.h	/^inline __host__ __device__ uint2 operator*(uint b, uint2 a)$/;"	f
operator *	include/cuda-common/helper_math.h	/^inline __host__ __device__ uint2 operator*(uint2 a, uint b)$/;"	f
operator *	include/cuda-common/helper_math.h	/^inline __host__ __device__ uint2 operator*(uint2 a, uint2 b)$/;"	f
operator *	include/cuda-common/helper_math.h	/^inline __host__ __device__ uint3 operator*(uint b, uint3 a)$/;"	f
operator *	include/cuda-common/helper_math.h	/^inline __host__ __device__ uint3 operator*(uint3 a, uint b)$/;"	f
operator *	include/cuda-common/helper_math.h	/^inline __host__ __device__ uint3 operator*(uint3 a, uint3 b)$/;"	f
operator *	include/cuda-common/helper_math.h	/^inline __host__ __device__ uint4 operator*(uint b, uint4 a)$/;"	f
operator *	include/cuda-common/helper_math.h	/^inline __host__ __device__ uint4 operator*(uint4 a, uint b)$/;"	f
operator *	include/cuda-common/helper_math.h	/^inline __host__ __device__ uint4 operator*(uint4 a, uint4 b)$/;"	f
operator *	include/rapidjson/document.h	/^    Reference operator*() const { return *ptr_; }$/;"	f	class:GenericMemberIterator
operator *	include/rapidjson/internal/diyfp.h	/^    DiyFp operator*(const DiyFp& rhs) const {$/;"	f	struct:internal::DiyFp
operator *=	include/cuda-common/helper_math.h	/^inline __host__ __device__ void operator*=(float2 &a, float b)$/;"	f
operator *=	include/cuda-common/helper_math.h	/^inline __host__ __device__ void operator*=(float2 &a, float2 b)$/;"	f
operator *=	include/cuda-common/helper_math.h	/^inline __host__ __device__ void operator*=(float3 &a, float b)$/;"	f
operator *=	include/cuda-common/helper_math.h	/^inline __host__ __device__ void operator*=(float3 &a, float3 b)$/;"	f
operator *=	include/cuda-common/helper_math.h	/^inline __host__ __device__ void operator*=(float4 &a, float b)$/;"	f
operator *=	include/cuda-common/helper_math.h	/^inline __host__ __device__ void operator*=(float4 &a, float4 b)$/;"	f
operator *=	include/cuda-common/helper_math.h	/^inline __host__ __device__ void operator*=(int2 &a, int b)$/;"	f
operator *=	include/cuda-common/helper_math.h	/^inline __host__ __device__ void operator*=(int2 &a, int2 b)$/;"	f
operator *=	include/cuda-common/helper_math.h	/^inline __host__ __device__ void operator*=(int3 &a, int b)$/;"	f
operator *=	include/cuda-common/helper_math.h	/^inline __host__ __device__ void operator*=(int3 &a, int3 b)$/;"	f
operator *=	include/cuda-common/helper_math.h	/^inline __host__ __device__ void operator*=(int4 &a, int b)$/;"	f
operator *=	include/cuda-common/helper_math.h	/^inline __host__ __device__ void operator*=(int4 &a, int4 b)$/;"	f
operator *=	include/cuda-common/helper_math.h	/^inline __host__ __device__ void operator*=(uint2 &a, uint b)$/;"	f
operator *=	include/cuda-common/helper_math.h	/^inline __host__ __device__ void operator*=(uint2 &a, uint2 b)$/;"	f
operator *=	include/cuda-common/helper_math.h	/^inline __host__ __device__ void operator*=(uint3 &a, uint b)$/;"	f
operator *=	include/cuda-common/helper_math.h	/^inline __host__ __device__ void operator*=(uint3 &a, uint3 b)$/;"	f
operator *=	include/cuda-common/helper_math.h	/^inline __host__ __device__ void operator*=(uint4 &a, uint b)$/;"	f
operator *=	include/cuda-common/helper_math.h	/^inline __host__ __device__ void operator*=(uint4 &a, uint4 b)$/;"	f
operator *=	include/rapidjson/internal/biginteger.h	/^    BigInteger& operator*=(uint32_t u) {$/;"	f	class:internal::BigInteger
operator *=	include/rapidjson/internal/biginteger.h	/^    BigInteger& operator*=(uint64_t u) {$/;"	f	class:internal::BigInteger
operator +	include/cuda-common/helper_math.h	/^inline __host__ __device__ float2 operator+(float b, float2 a)$/;"	f
operator +	include/cuda-common/helper_math.h	/^inline __host__ __device__ float2 operator+(float2 a, float b)$/;"	f
operator +	include/cuda-common/helper_math.h	/^inline __host__ __device__ float2 operator+(float2 a, float2 b)$/;"	f
operator +	include/cuda-common/helper_math.h	/^inline __host__ __device__ float3 operator+(float b, float3 a)$/;"	f
operator +	include/cuda-common/helper_math.h	/^inline __host__ __device__ float3 operator+(float3 a, float b)$/;"	f
operator +	include/cuda-common/helper_math.h	/^inline __host__ __device__ float3 operator+(float3 a, float3 b)$/;"	f
operator +	include/cuda-common/helper_math.h	/^inline __host__ __device__ float4 operator+(float b, float4 a)$/;"	f
operator +	include/cuda-common/helper_math.h	/^inline __host__ __device__ float4 operator+(float4 a, float b)$/;"	f
operator +	include/cuda-common/helper_math.h	/^inline __host__ __device__ float4 operator+(float4 a, float4 b)$/;"	f
operator +	include/cuda-common/helper_math.h	/^inline __host__ __device__ int2 operator+(int b, int2 a)$/;"	f
operator +	include/cuda-common/helper_math.h	/^inline __host__ __device__ int2 operator+(int2 a, int b)$/;"	f
operator +	include/cuda-common/helper_math.h	/^inline __host__ __device__ int2 operator+(int2 a, int2 b)$/;"	f
operator +	include/cuda-common/helper_math.h	/^inline __host__ __device__ int3 operator+(int b, int3 a)$/;"	f
operator +	include/cuda-common/helper_math.h	/^inline __host__ __device__ int3 operator+(int3 a, int b)$/;"	f
operator +	include/cuda-common/helper_math.h	/^inline __host__ __device__ int3 operator+(int3 a, int3 b)$/;"	f
operator +	include/cuda-common/helper_math.h	/^inline __host__ __device__ int4 operator+(int b, int4 a)$/;"	f
operator +	include/cuda-common/helper_math.h	/^inline __host__ __device__ int4 operator+(int4 a, int b)$/;"	f
operator +	include/cuda-common/helper_math.h	/^inline __host__ __device__ int4 operator+(int4 a, int4 b)$/;"	f
operator +	include/cuda-common/helper_math.h	/^inline __host__ __device__ uint2 operator+(uint b, uint2 a)$/;"	f
operator +	include/cuda-common/helper_math.h	/^inline __host__ __device__ uint2 operator+(uint2 a, uint b)$/;"	f
operator +	include/cuda-common/helper_math.h	/^inline __host__ __device__ uint2 operator+(uint2 a, uint2 b)$/;"	f
operator +	include/cuda-common/helper_math.h	/^inline __host__ __device__ uint3 operator+(uint b, uint3 a)$/;"	f
operator +	include/cuda-common/helper_math.h	/^inline __host__ __device__ uint3 operator+(uint3 a, uint b)$/;"	f
operator +	include/cuda-common/helper_math.h	/^inline __host__ __device__ uint3 operator+(uint3 a, uint3 b)$/;"	f
operator +	include/cuda-common/helper_math.h	/^inline __host__ __device__ uint4 operator+(uint b, uint4 a)$/;"	f
operator +	include/cuda-common/helper_math.h	/^inline __host__ __device__ uint4 operator+(uint4 a, uint b)$/;"	f
operator +	include/cuda-common/helper_math.h	/^inline __host__ __device__ uint4 operator+(uint4 a, uint4 b)$/;"	f
operator +	include/rapidjson/document.h	/^    Iterator operator+(DifferenceType n) const { return Iterator(ptr_+n); }$/;"	f	class:GenericMemberIterator
operator ++	include/rapidjson/document.h	/^    Iterator  operator++(int){ Iterator old(*this); ++ptr_; return old; }$/;"	f	class:GenericMemberIterator
operator ++	include/rapidjson/document.h	/^    Iterator& operator++(){ ++ptr_; return *this; }$/;"	f	class:GenericMemberIterator
operator +=	include/cuda-common/helper_math.h	/^inline __host__ __device__ void operator+=(float2 &a, float b)$/;"	f
operator +=	include/cuda-common/helper_math.h	/^inline __host__ __device__ void operator+=(float2 &a, float2 b)$/;"	f
operator +=	include/cuda-common/helper_math.h	/^inline __host__ __device__ void operator+=(float3 &a, float b)$/;"	f
operator +=	include/cuda-common/helper_math.h	/^inline __host__ __device__ void operator+=(float3 &a, float3 b)$/;"	f
operator +=	include/cuda-common/helper_math.h	/^inline __host__ __device__ void operator+=(float4 &a, float b)$/;"	f
operator +=	include/cuda-common/helper_math.h	/^inline __host__ __device__ void operator+=(float4 &a, float4 b)$/;"	f
operator +=	include/cuda-common/helper_math.h	/^inline __host__ __device__ void operator+=(int2 &a, int b)$/;"	f
operator +=	include/cuda-common/helper_math.h	/^inline __host__ __device__ void operator+=(int2 &a, int2 b)$/;"	f
operator +=	include/cuda-common/helper_math.h	/^inline __host__ __device__ void operator+=(int3 &a, int b)$/;"	f
operator +=	include/cuda-common/helper_math.h	/^inline __host__ __device__ void operator+=(int3 &a, int3 b)$/;"	f
operator +=	include/cuda-common/helper_math.h	/^inline __host__ __device__ void operator+=(int4 &a, int b)$/;"	f
operator +=	include/cuda-common/helper_math.h	/^inline __host__ __device__ void operator+=(int4 &a, int4 b)$/;"	f
operator +=	include/cuda-common/helper_math.h	/^inline __host__ __device__ void operator+=(uint2 &a, uint b)$/;"	f
operator +=	include/cuda-common/helper_math.h	/^inline __host__ __device__ void operator+=(uint2 &a, uint2 b)$/;"	f
operator +=	include/cuda-common/helper_math.h	/^inline __host__ __device__ void operator+=(uint3 &a, uint b)$/;"	f
operator +=	include/cuda-common/helper_math.h	/^inline __host__ __device__ void operator+=(uint3 &a, uint3 b)$/;"	f
operator +=	include/cuda-common/helper_math.h	/^inline __host__ __device__ void operator+=(uint4 &a, uint b)$/;"	f
operator +=	include/cuda-common/helper_math.h	/^inline __host__ __device__ void operator+=(uint4 &a, uint4 b)$/;"	f
operator +=	include/rapidjson/document.h	/^    Iterator& operator+=(DifferenceType n) { ptr_+=n; return *this; }$/;"	f	class:GenericMemberIterator
operator +=	include/rapidjson/internal/biginteger.h	/^    BigInteger& operator+=(uint64_t u) {$/;"	f	class:internal::BigInteger
operator -	include/cuda-common/helper_math.h	/^inline __host__ __device__ float2 operator-(float b, float2 a)$/;"	f
operator -	include/cuda-common/helper_math.h	/^inline __host__ __device__ float2 operator-(float2 &a)$/;"	f
operator -	include/cuda-common/helper_math.h	/^inline __host__ __device__ float2 operator-(float2 a, float b)$/;"	f
operator -	include/cuda-common/helper_math.h	/^inline __host__ __device__ float2 operator-(float2 a, float2 b)$/;"	f
operator -	include/cuda-common/helper_math.h	/^inline __host__ __device__ float3 operator-(float b, float3 a)$/;"	f
operator -	include/cuda-common/helper_math.h	/^inline __host__ __device__ float3 operator-(float3 &a)$/;"	f
operator -	include/cuda-common/helper_math.h	/^inline __host__ __device__ float3 operator-(float3 a, float b)$/;"	f
operator -	include/cuda-common/helper_math.h	/^inline __host__ __device__ float3 operator-(float3 a, float3 b)$/;"	f
operator -	include/cuda-common/helper_math.h	/^inline __host__ __device__ float4 operator-(float4 &a)$/;"	f
operator -	include/cuda-common/helper_math.h	/^inline __host__ __device__ float4 operator-(float4 a, float b)$/;"	f
operator -	include/cuda-common/helper_math.h	/^inline __host__ __device__ float4 operator-(float4 a, float4 b)$/;"	f
operator -	include/cuda-common/helper_math.h	/^inline __host__ __device__ int2 operator-(int b, int2 a)$/;"	f
operator -	include/cuda-common/helper_math.h	/^inline __host__ __device__ int2 operator-(int2 &a)$/;"	f
operator -	include/cuda-common/helper_math.h	/^inline __host__ __device__ int2 operator-(int2 a, int b)$/;"	f
operator -	include/cuda-common/helper_math.h	/^inline __host__ __device__ int2 operator-(int2 a, int2 b)$/;"	f
operator -	include/cuda-common/helper_math.h	/^inline __host__ __device__ int3 operator-(int b, int3 a)$/;"	f
operator -	include/cuda-common/helper_math.h	/^inline __host__ __device__ int3 operator-(int3 &a)$/;"	f
operator -	include/cuda-common/helper_math.h	/^inline __host__ __device__ int3 operator-(int3 a, int b)$/;"	f
operator -	include/cuda-common/helper_math.h	/^inline __host__ __device__ int3 operator-(int3 a, int3 b)$/;"	f
operator -	include/cuda-common/helper_math.h	/^inline __host__ __device__ int4 operator-(int b, int4 a)$/;"	f
operator -	include/cuda-common/helper_math.h	/^inline __host__ __device__ int4 operator-(int4 &a)$/;"	f
operator -	include/cuda-common/helper_math.h	/^inline __host__ __device__ int4 operator-(int4 a, int b)$/;"	f
operator -	include/cuda-common/helper_math.h	/^inline __host__ __device__ int4 operator-(int4 a, int4 b)$/;"	f
operator -	include/cuda-common/helper_math.h	/^inline __host__ __device__ uint2 operator-(uint b, uint2 a)$/;"	f
operator -	include/cuda-common/helper_math.h	/^inline __host__ __device__ uint2 operator-(uint2 a, uint b)$/;"	f
operator -	include/cuda-common/helper_math.h	/^inline __host__ __device__ uint2 operator-(uint2 a, uint2 b)$/;"	f
operator -	include/cuda-common/helper_math.h	/^inline __host__ __device__ uint3 operator-(uint b, uint3 a)$/;"	f
operator -	include/cuda-common/helper_math.h	/^inline __host__ __device__ uint3 operator-(uint3 a, uint b)$/;"	f
operator -	include/cuda-common/helper_math.h	/^inline __host__ __device__ uint3 operator-(uint3 a, uint3 b)$/;"	f
operator -	include/cuda-common/helper_math.h	/^inline __host__ __device__ uint4 operator-(uint b, uint4 a)$/;"	f
operator -	include/cuda-common/helper_math.h	/^inline __host__ __device__ uint4 operator-(uint4 a, uint b)$/;"	f
operator -	include/cuda-common/helper_math.h	/^inline __host__ __device__ uint4 operator-(uint4 a, uint4 b)$/;"	f
operator -	include/rapidjson/document.h	/^    DifferenceType operator-(ConstIterator that) const { return ptr_-that.ptr_; }$/;"	f	class:GenericMemberIterator
operator -	include/rapidjson/document.h	/^    Iterator operator-(DifferenceType n) const { return Iterator(ptr_-n); }$/;"	f	class:GenericMemberIterator
operator -	include/rapidjson/internal/diyfp.h	/^    DiyFp operator-(const DiyFp& rhs) const {$/;"	f	struct:internal::DiyFp
operator --	include/rapidjson/document.h	/^    Iterator  operator--(int){ Iterator old(*this); --ptr_; return old; }$/;"	f	class:GenericMemberIterator
operator --	include/rapidjson/document.h	/^    Iterator& operator--(){ --ptr_; return *this; }$/;"	f	class:GenericMemberIterator
operator -=	include/cuda-common/helper_math.h	/^inline __host__ __device__ void operator-=(float2 &a, float b)$/;"	f
operator -=	include/cuda-common/helper_math.h	/^inline __host__ __device__ void operator-=(float2 &a, float2 b)$/;"	f
operator -=	include/cuda-common/helper_math.h	/^inline __host__ __device__ void operator-=(float3 &a, float b)$/;"	f
operator -=	include/cuda-common/helper_math.h	/^inline __host__ __device__ void operator-=(float3 &a, float3 b)$/;"	f
operator -=	include/cuda-common/helper_math.h	/^inline __host__ __device__ void operator-=(float4 &a, float b)$/;"	f
operator -=	include/cuda-common/helper_math.h	/^inline __host__ __device__ void operator-=(float4 &a, float4 b)$/;"	f
operator -=	include/cuda-common/helper_math.h	/^inline __host__ __device__ void operator-=(int2 &a, int b)$/;"	f
operator -=	include/cuda-common/helper_math.h	/^inline __host__ __device__ void operator-=(int2 &a, int2 b)$/;"	f
operator -=	include/cuda-common/helper_math.h	/^inline __host__ __device__ void operator-=(int3 &a, int b)$/;"	f
operator -=	include/cuda-common/helper_math.h	/^inline __host__ __device__ void operator-=(int3 &a, int3 b)$/;"	f
operator -=	include/cuda-common/helper_math.h	/^inline __host__ __device__ void operator-=(int4 &a, int b)$/;"	f
operator -=	include/cuda-common/helper_math.h	/^inline __host__ __device__ void operator-=(int4 &a, int4 b)$/;"	f
operator -=	include/cuda-common/helper_math.h	/^inline __host__ __device__ void operator-=(uint2 &a, uint b)$/;"	f
operator -=	include/cuda-common/helper_math.h	/^inline __host__ __device__ void operator-=(uint2 &a, uint2 b)$/;"	f
operator -=	include/cuda-common/helper_math.h	/^inline __host__ __device__ void operator-=(uint3 &a, uint b)$/;"	f
operator -=	include/cuda-common/helper_math.h	/^inline __host__ __device__ void operator-=(uint3 &a, uint3 b)$/;"	f
operator -=	include/cuda-common/helper_math.h	/^inline __host__ __device__ void operator-=(uint4 &a, uint b)$/;"	f
operator -=	include/cuda-common/helper_math.h	/^inline __host__ __device__ void operator-=(uint4 &a, uint4 b)$/;"	f
operator -=	include/rapidjson/document.h	/^    Iterator& operator-=(DifferenceType n) { ptr_-=n; return *this; }$/;"	f	class:GenericMemberIterator
operator ->	include/rapidjson/document.h	/^    Pointer   operator->() const { return ptr_; }$/;"	f	class:GenericMemberIterator
operator /	include/cuda-common/helper_math.h	/^inline __host__ __device__ float2 operator\/(float b, float2 a)$/;"	f
operator /	include/cuda-common/helper_math.h	/^inline __host__ __device__ float2 operator\/(float2 a, float b)$/;"	f
operator /	include/cuda-common/helper_math.h	/^inline __host__ __device__ float2 operator\/(float2 a, float2 b)$/;"	f
operator /	include/cuda-common/helper_math.h	/^inline __host__ __device__ float3 operator\/(float b, float3 a)$/;"	f
operator /	include/cuda-common/helper_math.h	/^inline __host__ __device__ float3 operator\/(float3 a, float b)$/;"	f
operator /	include/cuda-common/helper_math.h	/^inline __host__ __device__ float3 operator\/(float3 a, float3 b)$/;"	f
operator /	include/cuda-common/helper_math.h	/^inline __host__ __device__ float4 operator\/(float b, float4 a)$/;"	f
operator /	include/cuda-common/helper_math.h	/^inline __host__ __device__ float4 operator\/(float4 a, float b)$/;"	f
operator /	include/cuda-common/helper_math.h	/^inline __host__ __device__ float4 operator\/(float4 a, float4 b)$/;"	f
operator /=	include/cuda-common/helper_math.h	/^inline __host__ __device__ void operator\/=(float2 &a, float b)$/;"	f
operator /=	include/cuda-common/helper_math.h	/^inline __host__ __device__ void operator\/=(float2 &a, float2 b)$/;"	f
operator /=	include/cuda-common/helper_math.h	/^inline __host__ __device__ void operator\/=(float3 &a, float b)$/;"	f
operator /=	include/cuda-common/helper_math.h	/^inline __host__ __device__ void operator\/=(float3 &a, float3 b)$/;"	f
operator /=	include/cuda-common/helper_math.h	/^inline __host__ __device__ void operator\/=(float4 &a, float b)$/;"	f
operator /=	include/cuda-common/helper_math.h	/^inline __host__ __device__ void operator\/=(float4 &a, float4 b)$/;"	f
operator <	include/rapidjson/document.h	/^    bool operator< (ConstIterator that) const { return ptr_ < that.ptr_; }$/;"	f	class:GenericMemberIterator
operator <<	DoseCalcIO/beam.cpp	/^std::ostream& operator<<(std::ostream& os, const BEAM& obj) {$/;"	f
operator <<	DoseCalcIO/ctlut.cpp	/^std::ostream& operator<<(std::ostream& os, const CTLUT& ctlut) {$/;"	f
operator <<	DoseCalcIO/volume.cpp	/^std::ostream& operator<<(std::ostream& out, const FrameOfReference& frame) {$/;"	f
operator <<	DoseCalcIO/volume.h	/^std::ostream& operator<<(std::ostream& out, const Volume<T>& vol) {$/;"	f
operator <<=	include/rapidjson/internal/biginteger.h	/^    BigInteger& operator<<=(size_t shift) {$/;"	f	class:internal::BigInteger
operator <=	include/rapidjson/document.h	/^    bool operator<=(ConstIterator that) const { return ptr_ <= that.ptr_; }$/;"	f	class:GenericMemberIterator
operator =	dosecalc-beamlet/sparsify_manager.h	/^            SRData& operator=(SRData&& other) {$/;"	f	struct:SRWorker::SRData
operator =	include/rapidjson/document.h	/^    GenericArray& operator=(const GenericArray& rhs) { value_ = rhs.value_; return *this; }$/;"	f	class:GenericArray
operator =	include/rapidjson/document.h	/^    GenericObject& operator=(const GenericObject& rhs) { value_ = rhs.value_; return *this; }$/;"	f	class:GenericObject
operator =	include/rapidjson/document.h	/^    Iterator& operator=(const NonConstIterator & it) { ptr_ = it.ptr_; return *this; }$/;"	f	class:GenericMemberIterator
operator =	include/rapidjson/document.h	/^    operator=(T value) {$/;"	f	class:GenericValue
operator =	include/rapidjson/internal/biginteger.h	/^    BigInteger& operator=(const BigInteger &rhs)$/;"	f	class:internal::BigInteger
operator =	include/rapidjson/internal/biginteger.h	/^    BigInteger& operator=(uint64_t u) {$/;"	f	class:internal::BigInteger
operator =	include/rapidjson/internal/stack.h	/^    Stack& operator=(Stack&& rhs) {$/;"	f	class:internal::Stack
operator =	include/rapidjson/pointer.h	/^    GenericPointer& operator=(const GenericPointer& rhs) {$/;"	f	class:GenericPointer
operator =	include/rapidjson/stringbuffer.h	/^    GenericStringBuffer& operator=(GenericStringBuffer&& rhs) {$/;"	f	class:GenericStringBuffer
operator ==	include/rapidjson/document.h	/^    bool operator==(ConstIterator that) const { return ptr_ == that.ptr_; }$/;"	f	class:GenericMemberIterator
operator ==	include/rapidjson/document.h	/^    bool operator==(const Ch* rhs) const { return *this == GenericValue(StringRef(rhs)); }$/;"	f	class:GenericValue
operator ==	include/rapidjson/document.h	/^    bool operator==(const GenericValue<Encoding, SourceAllocator>& rhs) const {$/;"	f	class:GenericValue
operator ==	include/rapidjson/document.h	/^    bool operator==(const std::basic_string<Ch>& rhs) const { return *this == GenericValue(StringRef(rhs)); }$/;"	f	class:GenericValue
operator ==	include/rapidjson/document.h	/^    template <typename T> RAPIDJSON_DISABLEIF_RETURN((internal::OrExpr<internal::IsPointer<T>,internal::IsGenericValue<T> >), (bool)) operator==(const T& rhs) const { return *this == GenericValue(rhs); }$/;"	f	class:GenericValue
operator ==	include/rapidjson/document.h	/^    template <typename T> friend RAPIDJSON_DISABLEIF_RETURN((internal::IsGenericValue<T>), (bool)) operator==(const T& lhs, const GenericValue& rhs) { return rhs == lhs; }$/;"	f	class:GenericValue
operator ==	include/rapidjson/error/error.h	/^    bool operator==(ParseErrorCode code) const { return code_ == code; }$/;"	f	struct:ParseResult
operator ==	include/rapidjson/error/error.h	/^    bool operator==(const ParseResult& that) const { return code_ == that.code_; }$/;"	f	struct:ParseResult
operator ==	include/rapidjson/error/error.h	/^    friend bool operator==(ParseErrorCode code, const ParseResult & err) { return code == err.code_; }$/;"	f	struct:ParseResult
operator ==	include/rapidjson/internal/biginteger.h	/^    bool operator==(const BigInteger& rhs) const {$/;"	f	class:internal::BigInteger
operator ==	include/rapidjson/internal/biginteger.h	/^    bool operator==(const Type rhs) const {$/;"	f	class:internal::BigInteger
operator ==	include/rapidjson/pointer.h	/^    bool operator==(const GenericPointer& rhs) const {$/;"	f	class:GenericPointer
operator >	include/rapidjson/document.h	/^    bool operator> (ConstIterator that) const { return ptr_ > that.ptr_; }$/;"	f	class:GenericMemberIterator
operator >=	include/rapidjson/document.h	/^    bool operator>=(ConstIterator that) const { return ptr_ >= that.ptr_; }$/;"	f	class:GenericMemberIterator
operator BooleanType	include/rapidjson/error/error.h	/^    operator BooleanType() const { return !IsError() ? &ParseResult::IsError : NULL; }$/;"	f	struct:ParseResult
operator ParseResult	include/rapidjson/document.h	/^    operator ParseResult() const { return parseResult_; }$/;"	f	class:GenericDocument
operator []	DoseCalcIO/roi.cpp	/^uint8_t DenseROIMask::operator[](uint64_t idx) {$/;"	f	class:DenseROIMask
operator []	DoseCalcIO/volume.h	/^        T& operator [](int idx) { return _vect[idx]; }$/;"	f	class:Volume
operator []	DoseCalcIO/volume.h	/^        T& operator [](int3 coords) { return at(coords); }$/;"	f	class:Volume
operator []	DoseCalcIO/volume.h	/^        T& operator [](uint idx) { return _vect[idx]; }$/;"	f	class:Volume
operator []	DoseCalcIO/volume.h	/^        T& operator [](uint3 coords) { return at(coords); }$/;"	f	class:Volume
operator []	DoseCalcIO/volume.h	/^        const T& operator [](int idx) const { return _vect[idx]; }$/;"	f	class:Volume
operator []	DoseCalcIO/volume.h	/^        const T& operator [](int3 coords) const { return at(coords); }$/;"	f	class:Volume
operator []	DoseCalcIO/volume.h	/^        const T& operator [](uint idx) const { return _vect[idx]; }$/;"	f	class:Volume
operator []	DoseCalcIO/volume.h	/^        const T& operator [](uint3 coords) const { return at(coords); }$/;"	f	class:Volume
operator []	include/rapidjson/document.h	/^    GenericValue& operator[](SizeType index) {$/;"	f	class:GenericValue
operator []	include/rapidjson/document.h	/^    GenericValue& operator[](const GenericValue<Encoding, SourceAllocator>& name) {$/;"	f	class:GenericValue
operator []	include/rapidjson/document.h	/^    GenericValue& operator[](const std::basic_string<Ch>& name) { return (*this)[GenericValue(StringRef(name))]; }$/;"	f	class:GenericValue
operator []	include/rapidjson/document.h	/^    RAPIDJSON_DISABLEIF_RETURN((internal::NotExpr<internal::IsSame<typename internal::RemoveConst<T>::Type, Ch> >),(GenericValue&)) operator[](T* name) {$/;"	f	class:GenericValue
operator []	include/rapidjson/document.h	/^    RAPIDJSON_DISABLEIF_RETURN((internal::NotExpr<internal::IsSame<typename internal::RemoveConst<T>::Type, Ch> >),(const GenericValue&)) operator[](T* name) const { return const_cast<GenericValue&>(*this)[name]; }$/;"	f	class:GenericValue
operator []	include/rapidjson/document.h	/^    Reference operator[](DifferenceType n) const { return ptr_[n]; }$/;"	f	class:GenericMemberIterator
operator []	include/rapidjson/document.h	/^    ValueType& operator[](SizeType index) const {  return value_[index]; }$/;"	f	class:GenericArray
operator []	include/rapidjson/document.h	/^    ValueType& operator[](const std::basic_string<Ch>& name) const { return value_[name]; }$/;"	f	class:GenericObject
operator []	include/rapidjson/document.h	/^    const GenericValue& operator[](SizeType index) const { return const_cast<GenericValue&>(*this)[index]; }$/;"	f	class:GenericValue
operator []	include/rapidjson/document.h	/^    const GenericValue& operator[](const GenericValue<Encoding, SourceAllocator>& name) const { return const_cast<GenericValue&>(*this)[name]; }$/;"	f	class:GenericValue
operator []	include/rapidjson/document.h	/^    const GenericValue& operator[](const std::basic_string<Ch>& name) const { return (*this)[GenericValue(StringRef(name))]; }$/;"	f	class:GenericValue
operator []	include/rapidjson/document.h	/^    template <typename SourceAllocator> ValueType& operator[](const GenericValue<EncodingType, SourceAllocator>& name) const { return value_[name]; }$/;"	f	class:GenericObject
operator []	include/rapidjson/document.h	/^    template <typename T> ValueType& operator[](T* name) const { return value_[name]; }$/;"	f	class:GenericObject
operator const Ch *	include/rapidjson/document.h	/^    operator const Ch *() const { return s; }$/;"	f	struct:GenericStringRef
orient_x	RTClasses/rtimages.h	/^    float3 orient_x;$/;"	m	class:RTImage
orient_y	RTClasses/rtimages.h	/^    float3 orient_y;$/;"	m	class:RTImage
orientation_type	DoseCalcIO/beam.h	/^        ORIENT_T orientation_type;   \/\/ Method used to select orientation$/;"	m	class:BEAM
original_	include/rapidjson/reader.h	/^    Stream& original_;$/;"	m	class:internal::StreamLocalCopy
os_	include/rapidjson/encodedstream.h	/^    OutputByteStream& os_;$/;"	m	class:EncodedOutputStream
os_	include/rapidjson/encodedstream.h	/^    OutputByteStream* os_;$/;"	m	class:AutoUTFOutputStream
os_	include/rapidjson/pointer.h	/^        OutputStream& os_;$/;"	m	class:GenericPointer::PercentEncodeStream
os_	include/rapidjson/writer.h	/^    OutputStream* os_;$/;"	m	class:Writer
out	include/rapidjson/internal/regex.h	/^        SizeType out;     \/\/!< Equals to kInvalid for matching state$/;"	m	struct:internal::GenericRegex::State
out	include/rapidjson/internal/regex.h	/^        SizeType out; \/\/!< link-list of all output states$/;"	m	struct:internal::GenericRegex::Frag
out1	include/rapidjson/internal/regex.h	/^        SizeType out1;    \/\/!< Equals to non-kInvalid for split$/;"	m	struct:internal::GenericRegex::State
outdir	extern/python/open_masks.py	/^    outdir = 'masks'$/;"	v
outfile	extern/python/utils/sumMcols.py	/^    outfile = os.path.splitext(args.out)[0] + '.raw'$/;"	v
outfile	tests/utils/generate_beamlist.py	/^    outfile = os.path.splitext(args.out)[0] + '.txt'$/;"	v
output	extern/python/utils/convert_beamlist.py	/^        output = os.path.join(args.out, os.path.basename(target))$/;"	v
outputHandler_	include/rapidjson/schema.h	/^    OutputHandler* outputHandler_;$/;"	m	class:GenericSchemaValidator
ownAllocator_	include/rapidjson/document.h	/^    Allocator* ownAllocator_;$/;"	m	class:GenericDocument
ownAllocator_	include/rapidjson/internal/regex.h	/^    Allocator* ownAllocator_;$/;"	m	class:internal::GenericRegexSearch
ownAllocator_	include/rapidjson/internal/stack.h	/^    Allocator* ownAllocator_;$/;"	m	class:internal::Stack
ownAllocator_	include/rapidjson/pointer.h	/^    Allocator* ownAllocator_;               \/\/!< Allocator owned by this Pointer.$/;"	m	class:GenericPointer
ownAllocator_	include/rapidjson/schema.h	/^    Allocator *ownAllocator_;$/;"	m	class:GenericSchemaDocument
ownBaseAllocator_	include/rapidjson/allocators.h	/^    BaseAllocator* ownBaseAllocator_;   \/\/!< base allocator created by this object.$/;"	m	class:MemoryPoolAllocator
ownStateAllocator_	include/rapidjson/schema.h	/^    StateAllocator* ownStateAllocator_;$/;"	m	class:GenericSchemaValidator
owned	include/rapidjson/schema.h	/^        bool owned;$/;"	m	struct:GenericSchemaDocument::SchemaEntry
pX	dosecalc-beamlet/nvbbRayConvolve_device.cu	424;"	d	file:
pY	dosecalc-beamlet/nvbbRayConvolve_device.cu	425;"	d	file:
pZ	dosecalc-beamlet/nvbbRayConvolve_device.cu	426;"	d	file:
pack_tX	dosecalc-beamlet/nvbbRayConvolve_device.cu	248;"	d	file:
pack_tY	dosecalc-beamlet/nvbbRayConvolve_device.cu	249;"	d	file:
pack_tZ	dosecalc-beamlet/nvbbRayConvolve_device.cu	250;"	d	file:
packedbev2rev_append	dosecalc-beamlet/nvbbRayConvolve_device.cu	422;"	d	file:
pad_array	extern/python/open_masks.py	/^def pad_array(arr, size, crop_start, crop_size):$/;"	f
padding	include/rapidjson/document.h	/^            char padding[4];$/;"	m	struct:GenericValue::Number::I
padding2	include/rapidjson/document.h	/^            char padding2[4];$/;"	m	struct:GenericValue::Number::U
parent	dosecalc-beamlet/sparsify_manager.h	/^        SparsifyManager& parent;$/;"	m	class:BaseW2FWorker
parent	dosecalc-beamlet/sparsify_manager.h	/^        SparsifyManager& parent;$/;"	m	class:SRWorker
parseErrorCode_	include/rapidjson/pointer.h	/^    PointerParseErrorCode parseErrorCode_;  \/\/!< Parsing error code.$/;"	m	class:GenericPointer
parseErrorOffset_	include/rapidjson/pointer.h	/^    size_t parseErrorOffset_;               \/\/!< Offset in code unit when parsing fail.$/;"	m	class:GenericPointer
parseResult_	include/rapidjson/document.h	/^          parseResult_(rhs.parseResult_)$/;"	f	class:GenericDocument
parseResult_	include/rapidjson/document.h	/^    ParseResult parseResult_;$/;"	m	class:GenericDocument
parseResult_	include/rapidjson/reader.h	/^    ParseResult parseResult_;$/;"	m	class:GenericReader
parseResult_	include/rapidjson/schema.h	/^    ParseResult parseResult_;$/;"	m	class:SchemaValidatingReader
parse_args	dosecalc-preprocess/argparser.h	/^int parse_args(CLIArgs& args, int argc, char *argv[]) {$/;"	f
parse_config	dosecalc-preprocess/argparser.h	/^int parse_config(CLIArgs& args, int argc, char *argv[]) {$/;"	f
parse_data	dosecalc-preprocess/argparser.h	/^int parse_data(CLIArgs& args, int argc, char *argv[]) {$/;"	f
parse_flags	dosecalc-preprocess/argparser.h	/^int parse_flags(CLIArgs& args, int argc, char *argv[]) {$/;"	f
parse_options_string	include/client/dummy_defs.h	/^    void parse_options_string( char * options )$/;"	f	class:MGCS_PARAMS
parse_quality	dosecalc-preprocess/argparser.h	/^int parse_quality(CLIArgs& args, int argc, char *argv[]) {$/;"	f
parser	extern/python/utils/convert_beamlist.py	/^    parser = argparse.ArgumentParser(description='Convert legacy dosecalc beamlists to latest format')$/;"	v
parser	extern/python/utils/sumMcols.py	/^    parser = argparse.ArgumentParser(description='Beam angle selection and fluence map optimization algorithm for use in radiation therapy treatment planning',$/;"	v
parser	tests/utils/generate_beamlist.py	/^    parser = argparse.ArgumentParser(formatter_class=argparse.ArgumentDefaultsHelpFormatter,$/;"	v
path	extern/python/utils/show_fmap.py	/^    path = sys.argv[1]$/;"	v
path	extern/python/utils/show_fmap.py	/^path = '.\/fmo_results.h5'$/;"	v
patient_header	dosecalc-beamlet/sparsify_worker.h	/^        HEADER_PATIENT* patient_header;$/;"	m	class:FullSparsifyWorker
patient_position	RTClasses/rtimages.h	/^        std::string patient_position;$/;"	m	class:RTImage::SLICE_DATA
pattern	include/rapidjson/schema.h	/^        RegexType* pattern;$/;"	m	struct:internal::Schema::PatternProperty
patternPropertiesSchemaCount	include/rapidjson/schema.h	/^    SizeType patternPropertiesSchemaCount;$/;"	m	struct:internal::SchemaValidationContext
patternPropertiesSchemas	include/rapidjson/schema.h	/^    const SchemaType** patternPropertiesSchemas;$/;"	m	struct:internal::SchemaValidationContext
patternPropertiesValidatorCount	include/rapidjson/schema.h	/^    SizeType patternPropertiesValidatorCount;$/;"	m	struct:internal::SchemaValidationContext
patternPropertiesValidators	include/rapidjson/schema.h	/^    ISchemaValidator** patternPropertiesValidators;$/;"	m	struct:internal::SchemaValidationContext
patternProperties_	include/rapidjson/schema.h	/^    PatternProperty* patternProperties_;$/;"	m	class:internal::Schema
patternPropertyCount_	include/rapidjson/schema.h	/^    SizeType patternPropertyCount_;$/;"	m	class:internal::Schema
pattern_	include/rapidjson/schema.h	/^    RegexType* pattern_;$/;"	m	class:internal::Schema
payload	include/rapidjson/document.h	/^        char payload[sizeof(SizeType) * 2 + 6];     \/\/ 2 x SizeType + lower 48-bit pointer$/;"	m	struct:GenericValue::Flag
peakMemoryUsed	CudaUtilities/memory_manager.cuh	/^        int64_t peakMemoryUsed() const {$/;"	f	class:MemoryManager
peak_mem_usage	CudaUtilities/memory_manager.cuh	/^        int64_t peak_mem_usage = 0;$/;"	m	class:MemoryManager	file:
peekBuffer_	include/rapidjson/istreamwrapper.h	/^    mutable Ch peekBuffer_[4];$/;"	m	class:BasicIStreamWrapper
penumbra	dosecalc-preprocess/argparser.h	/^    float        penumbra            = 1.f;           \/\/ expansion of dose subvolume computation by PENUM in each of 4 directions (+\/- x,z BEV)  [unit: cm]$/;"	m	struct:CLIArgs
penumbra	extern/python/generate_phantom.py	/^    penumbra  = (2, 2)          # size outside of field (X, Z) [unit: cm]$/;"	v
penumbra	include/server/brain_defs.h	/^    float penumbra;         \/\/ margin added to rev in fullbeam calc [unit: cm]$/;"	m	struct:CONSTANTS
penumbra_cm	DoseCalcIO/io_data_structs.h	/^    float       penumbra_cm;          \/\/ beam margin for dose calculation [cm]$/;"	m	struct:HEADER_PATIENT
perc_dropped	DoseCalcIO/io_data_structs.h	/^    float perc_dropped; \/\/ percentage of calc_bbox that has been zero'd (below thresh)$/;"	m	struct:SparseData
perc_nonzero	DoseCalcIO/io_data_structs.h	/^    float perc_nonzero; \/\/ percentage of calc_bbox that remains as nonzero (above thresh)$/;"	m	struct:SparseData
perc_reducedrop	DoseCalcIO/io_data_structs.h	/^    float perc_reducedrop; \/\/ percentage of calc_bbox that has been excluded due to roi masking$/;"	m	struct:SparseData
phi	dosecalc-beamlet/nvbbRayConvolve_host.cu	/^        float phi;$/;"	m	class:ArraySizeError	file:
pid_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef __pid_t pid_t; $/;"	t	file:
pillarBuffer	DoseCalcIO/io_data_structs.h	/^    int pillarBuffer = 2;        \/\/ number of REV voxels buffering usable pillar space from walls (garbage ends up here from interpolation near walls); Should be >=2 for best results$/;"	m	struct:PILLAR_GRID
pillarDims	DoseCalcIO/io_data_structs.h	/^    int3 pillarDims;             \/\/ dimension of pillars along x,y,z directions in voxels$/;"	m	struct:PILLAR_GRID
pillarSize	DoseCalcIO/io_data_structs.h	/^    float3  pillarSize;          \/\/ dimensions of pillars in common coordinate unit$/;"	m	struct:PILLAR_GRID
pillarStartCoords	DoseCalcIO/io_data_structs.h	/^    float3* pillarStartCoords;   \/\/ coords of pillar box start$/;"	m	struct:PILLAR_GRID
pillar_grid_nvoxels	DoseCalcIO/io_data_structs.h	/^    CUDEV_FXN inline int pillar_grid_nvoxels() const { return gridDims.x * gridDims.y * gridDims.z; }$/;"	f	struct:PILLAR_GRID
pillar_nvoxels	DoseCalcIO/io_data_structs.h	/^    CUDEV_FXN inline int pillar_nvoxels() const { return pillarDims.x * pillarDims.y * pillarDims.z; }$/;"	f	struct:PILLAR_GRID
pointer	include/rapidjson/schema.h	/^        PointerType pointer;$/;"	m	struct:GenericSchemaDocument::SchemaEntry
points	DoseCalcIO/ctlut.h	/^    std::vector<LUTPOINT> points;$/;"	m	struct:CTLUT
points	DoseCalcIO/roi.h	/^    std::vector<float> points;$/;"	m	struct:StructureSet
points	RTClasses/rtstruct.h	/^        float *points;$/;"	m	class:RTStruct::CNTR_DATA
polar_file	DoseCalcIO/paths.h	/^        std::string polar_file() { return data_dir() + "\/dsa\/polar.dat"; }$/;"	f	class:Paths
ppsfreq	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__syscall_slong_t ppsfreq; $/;"	m	struct:timex	file:
precision	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__syscall_slong_t precision; $/;"	m	struct:timex	file:
primary	DoseCalcIO/kernel.h	/^    primary,$/;"	m	class:KERNEL_CATEGORIES
print3vec_float	include/debug.h	4;"	d
print3vec_int	include/debug.h	5;"	d
print_available	CudaUtilities/manage_gpu.cuh	/^        void print_available() {$/;"	f	class:cudaMemInfo
print_consumed	CudaUtilities/manage_gpu.cuh	/^        void print_consumed() {$/;"	f	class:cudaMemInfo
print_head	Utilities/logging.cpp	/^void Logger::print_head(const std::string& title) {$/;"	f	class:Logger
print_info	DoseCalcIO/kernel.cpp	/^void KERNEL::print_info() {$/;"	f	class:KERNEL
print_tail	Utilities/logging.cpp	/^void Logger::print_tail() {$/;"	f	class:Logger
print_time_elapsed	CudaUtilities/cuda_timing.cu	/^void CudaTimer::print_time_elapsed(const char* memo) {$/;"	f	class:CudaTimer
print_time_elapsed	CudaUtilities/cuda_timing.cu	/^void CudaTimer::print_time_elapsed(const std::string& memo) {$/;"	f	class:CudaTimer
print_time_elapsed	Utilities/timing.cpp	/^void Timer::print_time_elapsed(const char* memo) {$/;"	f	class:Timer
print_time_elapsed	Utilities/timing.cpp	/^void Timer::print_time_elapsed(const std::string& memo) {$/;"	f	class:Timer
print_usage	RTClasses/anonymize_dicom.cpp	/^void print_usage(char* argv[]) {$/;"	f
print_usage	anonymize_dicom/anonymize_dicom.cpp	/^void print_usage(char* argv[]) {$/;"	f
print_usage	dosecalc-preprocess/argparser.h	/^void print_usage() {$/;"	f
product	CudaUtilities/vector_ops.h	/^CUDEV_FXN inline int product(const int3& a) { return a.x * a.y * a.z; }$/;"	f
product	CudaUtilities/vector_ops.h	/^CUDEV_FXN inline unsigned int product(const uint3& a) { return a.x * a.y * a.z; }$/;"	f
properties_	include/rapidjson/schema.h	/^    Property* properties_;$/;"	m	class:internal::Schema
propertyCount_	include/rapidjson/schema.h	/^    SizeType propertyCount_;$/;"	m	class:internal::Schema
propertyExist	include/rapidjson/schema.h	/^    bool* propertyExist;$/;"	m	struct:internal::SchemaValidationContext
props	DoseCalcIO/roi.h	/^        ArrayProps props;       \/\/ custom bbox containing ROI for more efficient iterating$/;"	m	class:BaseROIMask
props	DoseCalcIO/roi.h	/^        BaseROIMask(std::string name, ArrayProps props) : name{name}, props(props) {}$/;"	f	class:BaseROIMask
props	dosecalc-beamlet/sparsify_manager.h	/^            ArrayProps             props;$/;"	m	struct:SRWorker::SRData
props	dosecalc-beamlet/sparsify_worker.h	/^    ArrayProps     props;$/;"	m	struct:SparsifyData
pt_id	RTClasses/rtimages.h	/^    std::string pt_id;$/;"	m	class:RTImage
pt_id	RTClasses/rtstruct.h	/^    std::string pt_id;$/;"	m	class:RTStruct
pt_name	RTClasses/rtimages.h	/^    std::string pt_name;$/;"	m	class:RTImage
pt_name	RTClasses/rtstruct.h	/^    std::string pt_name;$/;"	m	class:RTStruct
pt_series_description	RTClasses/rtimages.h	/^    std::string pt_series_description;$/;"	m	class:RTImage
pt_series_description	RTClasses/rtstruct.h	/^    std::string pt_series_description;$/;"	m	class:RTStruct
pt_series_instance_uid	RTClasses/rtimages.h	/^    std::string pt_series_instance_uid;$/;"	m	class:RTImage
pt_series_instance_uid	RTClasses/rtstruct.h	/^    std::string pt_series_instance_uid;$/;"	m	class:RTStruct
pt_sop_class_uid	RTClasses/rtstruct.h	/^    std::string pt_sop_class_uid;$/;"	m	class:RTStruct
pt_sop_instance_uid	RTClasses/rtstruct.h	/^    std::string pt_sop_instance_uid;$/;"	m	class:RTStruct
pt_study_id	RTClasses/rtimages.h	/^    std::string pt_study_id;$/;"	m	class:RTImage
pt_study_id	RTClasses/rtstruct.h	/^    std::string pt_study_id;$/;"	m	class:RTStruct
pt_study_instance_uid	RTClasses/rtimages.h	/^    std::string pt_study_instance_uid;$/;"	m	class:RTImage
pt_study_instance_uid	RTClasses/rtstruct.h	/^    std::string pt_study_instance_uid;$/;"	m	class:RTStruct
pthread_attr_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef pthread_attr_t pthread_attr_t; $/;"	t	file:
pthread_attr_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^union pthread_attr_t { $/;"	u	file:
pthread_barrier_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^} pthread_barrier_t; $/;"	t	typeref:union:__anon35	file:
pthread_barrierattr_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^} pthread_barrierattr_t; $/;"	t	typeref:union:__anon36	file:
pthread_cond_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^} pthread_cond_t; $/;"	t	typeref:union:__anon32	file:
pthread_condattr_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^} pthread_condattr_t; $/;"	t	typeref:union:__anon30	file:
pthread_key_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef unsigned pthread_key_t; $/;"	t	file:
pthread_mutex_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^} pthread_mutex_t; $/;"	t	typeref:union:__anon31	file:
pthread_mutexattr_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^} pthread_mutexattr_t; $/;"	t	typeref:union:__anon29	file:
pthread_once_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef int pthread_once_t; $/;"	t	file:
pthread_rwlock_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^} pthread_rwlock_t; $/;"	t	typeref:union:__anon33	file:
pthread_rwlockattr_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^} pthread_rwlockattr_t; $/;"	t	typeref:union:__anon34	file:
pthread_spinlock_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef volatile int pthread_spinlock_t; $/;"	t	file:
pthread_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef unsigned long pthread_t; $/;"	t	file:
ptr_	include/rapidjson/document.h	/^    Pointer ptr_; \/\/!< raw pointer$/;"	m	class:GenericMemberIterator
ptrdiff_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef long ptrdiff_t; $/;"	t	file:
ptrdiff_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef long ptrdiff_t; $/;"	t	namespace:std	file:
ptv_name	dosecalc-preprocess/argparser.h	/^    std::string  ptv_name;$/;"	m	struct:CLIArgs
push	Utilities/wqueue.h	/^        void push(T& item) {$/;"	f	class:wqueue
push	Utilities/wqueue.h	/^        void push(T&& item) {$/;"	f	class:wqueue
push	dosecalc-beamlet/sparsify_manager.h	/^        void push(SRWorker::SRData& item) { m_srqueue.push(std::move(item)); }$/;"	f	class:SparsifyManager
push_back	DoseCalcIO/roi.h	/^        void push_back(DenseROIMask* mask) { _coll.emplace_back(mask); }$/;"	f	class:ROIMaskList
push_memblock	dosecalc-beamlet/sparsify_manager.h	/^        void push_memblock(std::unique_ptr<float[]>& addr) {$/;"	f	class:SparsifyManager
putFunc_	include/rapidjson/encodedstream.h	/^    PutFunc putFunc_;$/;"	m	class:AutoUTFOutputStream
qnxnto	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v
qnxnto	build/CMakeFiles/3.16.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v
quad_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef __quad_t quad_t; $/;"	t	file:
query_device_memory	CudaUtilities/manage_gpu.cu	/^cudaMemInfo query_device_memory() {$/;"	f
query_device_memory	CudaUtilities/manage_gpu.cu	/^cudaMemInfo query_device_memory(int gpuid) {$/;"	f
quot	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^int quot; $/;"	m	struct:__anon20	file:
quot	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^long long quot; $/;"	m	struct:__anon22	file:
quot	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^long quot; $/;"	m	struct:__anon21	file:
quot	include/rapidjson/msinttypes/inttypes.h	/^   intmax_t quot;$/;"	m	struct:__anon3
r_	include/rapidjson/reader.h	/^        GenericReader& r_;$/;"	m	struct:GenericReader::ClearStackOnExit
radconvolveTexture	dosecalc-beam/nvbbRayConvolve_host.cu	/^radconvolveTexture($/;"	f
radconvolveTexture	dosecalc-beamlet/nvbbRayConvolve_host.cu	/^int radconvolveTexture($/;"	f
radial_boundary	DoseCalcIO/kernel.h	/^        float radial_boundary[N_KERNEL_RADII+1];$/;"	m	class:KERNEL
radial_boundary	include/server/brain_defs.h	/^    float *radial_boundary; \/\/ array of boundary radii in cm$/;"	m	struct:SHM_DATA
radius_file	DoseCalcIO/paths.h	/^        std::string radius_file() { return kernel_dir() + "\/radii.dat"; }$/;"	f	class:Paths
rand_deg	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^int rand_deg; $/;"	m	struct:random_data	file:
rand_sep	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^int rand_sep; $/;"	m	struct:random_data	file:
rand_type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^int rand_type; $/;"	m	struct:random_data	file:
random_data	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^struct random_data { $/;"	s	file:
rangeCount_	include/rapidjson/internal/regex.h	/^    SizeType rangeCount_;$/;"	m	class:internal::GenericRegex
rangeStart	include/rapidjson/internal/regex.h	/^        SizeType rangeStart;$/;"	m	struct:internal::GenericRegex::State
range_max	RTClasses/rtstruct.h	/^        float3 range_max;$/;"	m	class:RTStruct::ROI_DATA
range_min	RTClasses/rtstruct.h	/^        float3 range_min;$/;"	m	class:RTStruct::ROI_DATA
ranges_	include/rapidjson/internal/regex.h	/^    Stack<Allocator> ranges_;$/;"	m	class:internal::GenericRegex
raytrace_sharedmem	DoseCalcIO/io_data_structs.h	/^    unsigned int raytrace_sharedmem = 0;$/;"	m	struct:BLT_CONV_DATA
raytrace_write	dosecalc-beam/nvbbRayConvolve_device.cu	10;"	d	file:
raytrace_write	dosecalc-beamlet/nvbbRayConvolve_device.cu	18;"	d	file:
rcbrt	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline float rcbrt(float a) $/;"	f	file:
readCount_	include/rapidjson/filereadstream.h	/^    size_t readCount_;$/;"	m	class:FileReadStream
readFromFile	DoseCalcIO/kernel.cpp	/^int KERNEL::readFromFile(KERNEL& kern, std::string fname, bool verbose) {$/;"	f	class:KERNEL
readFromFile	DoseCalcIO/roi.cpp	/^int ROIMaskList::readFromFile(ROIMaskList& masklist, std::string fname, bool verbose) {$/;"	f	class:ROIMaskList
readFromFile	DoseCalcIO/volume.h	/^        static int readFromFile(Volume<T>& vol, const std::string& infile, const std::string& dset_name="data", int verbose=false) {$/;"	f	class:Volume
read_config	Utilities/configparser.cpp	/^rapidjson::Document read_config(const std::string& fname, int verbose) {$/;"	f
read_dicom	dosecalc-preprocess/cudaMemFunctions.cu	/^int read_dicom(FloatVolume& dens, FloatVolume& ctdata, float iso_voxel, CTLUT* ctlut, bool verbose)$/;"	f
read_dose_data	extern/matlab/read_dose_data.m	/^function dose_data = read_dose_data( h5file, verbose, mode)$/;"	f
read_fmaps	DoseCalcIO/fmaps_io.cpp	/^int read_fmaps(const std::string& filename, HEADER_PATIENT* patient_header, std::vector<BEAM>& beams) {$/;"	f
read_fmaps	DoseCalcIO/fmaps_io.cpp	/^int read_fmaps(const std::string& filename, HEADER_PATIENT* patient_header, std::vector<HEADER_BEAM>& beam_headers ) {$/;"	f
read_kernel	DoseCalcIO/kernel.cpp	/^int read_kernel(KERNEL *kern)$/;"	f
read_sparse_format	extern/matlab/read_dose_data.m	/^function result = read_sparse_format(h5file, metainfo, vhash, mode, verbose)$/;"	f
read_spectrum_file	DoseCalcIO/spectra.cpp	/^int read_spectrum_file(MONO_KERNELS *mono, bool verbose)$/;"	f
reconfigure	DoseCalcIO/beam.cpp	/^void BEAM::reconfigure() {$/;"	f	class:BEAM
reduce	dosecalc-preprocess/argparser.h	/^    bool         reduce              = false;         \/\/ reduction prunes all voxels from sparse dose that aren't in specified structures$/;"	m	struct:CLIArgs
reduce	include/server/brain_defs.h	/^    bool reduce =false;               \/\/ indicator for ROI based sparse data masking and reordering (M-matrix to A-matrix inline conversion)$/;"	m	struct:CONSTANTS
reduced	DoseCalcIO/io_data_structs.h	/^    bool  reduced() const { return !row_block_sizes.empty(); }; \/\/ flag indicating whether reduction occured$/;"	f	struct:HEADER_BEAMLET
reduced	DoseCalcIO/io_data_structs.h	/^    bool reduced() const { return !roi_order.empty(); }  \/\/ flag indicating setting of remaining members$/;"	f	struct:HEADER_PATIENT
reduced	DoseCalcIO/io_data_structs.h	/^    bool reduced() { return !roi_order.empty(); }  \/\/ flag indicating setting of remaining members$/;"	f	struct:HEADER_PATIENT
reduced	DoseCalcIO/io_data_structs.h	/^    bool reduced() { return !row_block_sizes.empty(); }$/;"	f	struct:SparseData
reference_frame_uid	RTClasses/rtimages.h	/^        std::string reference_frame_uid;$/;"	m	class:RTImage::SLICE_DATA
reflect	include/cuda-common/helper_math.h	/^inline __host__ __device__ float3 reflect(float3 i, float3 n)$/;"	f
regex_	include/rapidjson/internal/regex.h	/^    const RegexType& regex_;$/;"	m	class:internal::GenericRegexSearch
register_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef long register_t __attribute((__mode__(__word__))); $/;"	t	file:
reledens	DoseCalcIO/ctlut.h	/^    float reledens;   \/\/ electron density relative to water$/;"	m	struct:LUTPOINT
rem	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^int rem; $/;"	m	struct:__anon20	file:
rem	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^long long rem; $/;"	m	struct:__anon22	file:
rem	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^long rem; $/;"	m	struct:__anon21	file:
rem	include/rapidjson/msinttypes/inttypes.h	/^   intmax_t rem;$/;"	m	struct:__anon3
remoteProvider_	include/rapidjson/schema.h	/^    IRemoteSchemaDocumentProviderType* remoteProvider_;$/;"	m	class:GenericSchemaDocument
remove_directories	DoseCalcIO/io_helpers.cpp	/^    int remove_directories(const std::vector<std::string>& dirs, bool keepdir, bool recursive) {$/;"	f	namespace:dcio
remove_directory	DoseCalcIO/io_helpers.cpp	/^    int remove_directory(const std::string& dname, bool keepdir, bool recursive) {$/;"	f	namespace:dcio
remove_file	DoseCalcIO/io_helpers.cpp	/^    int remove_file(const std::string& fname) {$/;"	f	namespace:dcio
remove_files	DoseCalcIO/io_helpers.cpp	/^    int remove_files(const std::vector<std::string>& files) {$/;"	f	namespace:dcio
required	include/rapidjson/schema.h	/^        bool required;$/;"	m	struct:internal::Schema::Property
rescale_intercept	RTClasses/rtimages.h	/^    float rescale_intercept;$/;"	m	class:RTImage
rescale_slope	RTClasses/rtimages.h	/^    float rescale_slope;$/;"	m	class:RTImage
reset	CudaUtilities/cuda_timing.cu	/^void CudaTimer::reset() {$/;"	f	class:CudaTimer
reset	Utilities/timing.cpp	/^void Timer::reset() {$/;"	f	class:Timer
reset	Utilities/wqueue.h	/^        void reset() {$/;"	f	class:wqueue
reset_print_time_elapsed	CudaUtilities/cuda_timing.cu	/^void CudaTimer::reset_print_time_elapsed(const char* memo) {$/;"	f	class:CudaTimer
reset_print_time_elapsed	CudaUtilities/cuda_timing.cu	/^void CudaTimer::reset_print_time_elapsed(const std::string& memo) {$/;"	f	class:CudaTimer
reset_print_time_elapsed	Utilities/timing.cpp	/^void Timer::reset_print_time_elapsed(const char* memo) {$/;"	f	class:Timer
reset_print_time_elapsed	Utilities/timing.cpp	/^void Timer::reset_print_time_elapsed(const std::string& memo) {$/;"	f	class:Timer
restart	CudaUtilities/cuda_timing.cu	/^void CudaTimer::restart() { start(); }$/;"	f	class:CudaTimer
restart_print_time_elapsed	CudaUtilities/cuda_timing.cu	/^void CudaTimer::restart_print_time_elapsed(const char* memo) {$/;"	f	class:CudaTimer
restart_print_time_elapsed	CudaUtilities/cuda_timing.cu	/^void CudaTimer::restart_print_time_elapsed(const std::string& memo) {$/;"	f	class:CudaTimer
restart_print_time_elapsed	Utilities/timing.cpp	/^void Timer::restart_print_time_elapsed(const char* memo) {$/;"	f	class:Timer
restart_print_time_elapsed	Utilities/timing.cpp	/^void Timer::restart_print_time_elapsed(const std::string& memo) {$/;"	f	class:Timer
result	extern/python/utils/sumMcols.py	/^    result = read_dose_data.data_mat_parser(dosefile)$/;"	v
rev	dosecalc-beamlet/nvbbRayConvolve_host.cu	/^        REV_DATA* rev;$/;"	m	class:ArraySizeError	file:
rev2xyz_append	dosecalc-beam/nvbbRayConvolve_device.cu	221;"	d	file:
rev_latspacing	dosecalc-preprocess/argparser.h	/^    float        rev_latspacing      = voxelsize;     \/\/ lateral voxel size assumed during convolution in Rays Eye View coord system, lateral spacing of convolution rays$/;"	m	struct:CLIArgs
rev_latspacing	include/server/brain_defs.h	/^    float rev_latspacing;   \/\/ convolution lateral ray spacing [unit: cm]$/;"	m	struct:CONSTANTS
rev_latspacing_cm	DoseCalcIO/io_data_structs.h	/^    float       rev_latspacing_cm;    \/\/ Conv ray lateral spacing [cm]$/;"	m	struct:HEADER_PATIENT
rev_longspacing	dosecalc-preprocess/argparser.h	/^    float        rev_longspacing     = voxelsize;     \/\/ convolution step size along convolution ray [unit: cm]$/;"	m	struct:CLIArgs
rev_longspacing	include/server/brain_defs.h	/^    float rev_longspacing;  \/\/ convolution longitudinal step size [unit: cm]$/;"	m	struct:CONSTANTS
rev_longspacing_cm	DoseCalcIO/io_data_structs.h	/^    float       rev_longspacing_cm;   \/\/ Conv longitudinal step size [cm]$/;"	m	struct:HEADER_PATIENT
roi_array	RTClasses/rtstruct.h	/^    ROI_DATA *roi_array;$/;"	m	class:RTStruct
roi_count	RTClasses/rtstruct.h	/^    unsigned int roi_count;$/;"	m	class:RTStruct
roi_list	dosecalc-beamlet/main.cu	/^ROIMaskList             roi_list;$/;"	v
roi_list	dosecalc-beamlet/sparsify_manager.h	/^            ROIMaskList*           roi_list = nullptr;$/;"	m	struct:SRWorker::SRData
roi_list	dosecalc-beamlet/sparsify_worker.h	/^    ROIMaskList* roi_list = nullptr;$/;"	m	struct:SparsifyData
roi_name	RTClasses/rtstruct.h	/^        std::string roi_name;$/;"	m	class:RTStruct::ROI_DATA
roi_number	RTClasses/rtstruct.h	/^        int roi_number;$/;"	m	class:RTStruct::ROI_DATA
roi_rgb_color	RTClasses/rtstruct.h	/^        int3 roi_rgb_color;$/;"	m	class:RTStruct::ROI_DATA
root_	include/rapidjson/internal/regex.h	/^    SizeType root_;$/;"	m	class:internal::GenericRegex
root_	include/rapidjson/schema.h	/^    const SchemaType& root_;$/;"	m	class:GenericSchemaValidator
root_	include/rapidjson/schema.h	/^    const SchemaType* root_;                \/\/!< Root schema.$/;"	m	class:GenericSchemaDocument
rotateAroundAxisAtOriginRHS	CudaUtilities/geometry.cu	/^CUDEV_FXN float3 rotateAroundAxisAtOriginRHS(const float3& p, const float3& r, const float& t) {$/;"	f
rotateAroundAxisRHS	CudaUtilities/geometry.cu	/^CUDEV_FXN float3 rotateAroundAxisRHS(const float3& p, const float3& q, const float3& r, const float& t) {$/;"	f
rotateBeamAtOriginRHS	CudaUtilities/geometry.cu	/^CUDEV_FXN float3 rotateBeamAtOriginRHS( const float3& vec, const float& theta, const float& phi, const float& coll ) {$/;"	f
rotateBeamRHS	CudaUtilities/geometry.cu	/^CUDEV_FXN float3 rotateBeamRHS( const float3& vec, const float3& center, const float& theta, const float& phi, const float& coll ) {$/;"	f
rotateBeamletAtOriginRHS	CudaUtilities/geometry.cu	/^CUDEV_FXN float3 rotateBeamletAtOriginRHS( const float3& vec, const float& theta, const float& phi) {$/;"	f
rotateBeamletRHS	CudaUtilities/geometry.cu	/^CUDEV_FXN float3 rotateBeamletRHS( const float3& vec, const float3& center, const float& theta, const float& phi) {$/;"	f
rotateKernelAtOriginRHS	CudaUtilities/geometry.cu	/^CUDEV_FXN float3 rotateKernelAtOriginRHS( const float3& vec, const float& theta, const float& phi ) {$/;"	f
rotateKernelRHS	CudaUtilities/geometry.cu	/^CUDEV_FXN float3 rotateKernelRHS( const float3& vec, const float3& center, const float& theta, const float& phi ) {$/;"	f
rotate_bev2gcs	extern/python/fmaps.py	/^    def rotate_bev2gcs(vec, gantry, couch, coll):$/;"	m	class:Beam
rotate_gcs2bev	extern/python/fmaps.py	/^    def rotate_gcs2bev(vec, gantry, couch, coll):$/;"	m	class:Beam
row_block_sizes	DoseCalcIO/io_data_structs.h	/^    std::vector<uint64_t> row_block_sizes;                      \/\/ list indicating true non-zeros per row-block after reduction$/;"	m	struct:HEADER_BEAMLET
row_block_sizes	DoseCalcIO/io_data_structs.h	/^    std::vector<uint64_t> row_block_sizes;$/;"	m	struct:SparseData
rptr	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^int32_t *rptr; $/;"	m	struct:random_data	file:
rsqrt	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline float rsqrt(float a) $/;"	f	file:
rsqrtf	include/cuda-common/helper_math.h	/^inline float rsqrtf(float x)$/;"	f
rtstruct_file_found	RTClasses/rtstruct.h	/^    bool rtstruct_file_found;$/;"	m	class:RTStruct
run	dosecalc-beamlet/sparsify_manager.cpp	/^void BaseW2FWorker::run() {$/;"	f	class:BaseW2FWorker
run	dosecalc-beamlet/sparsify_manager.cpp	/^void SRWorker::run() {$/;"	f	class:SRWorker
run	dosecalc-beamlet/sparsify_worker.cpp	/^void BeamletSparsifyWorker::run() {$/;"	f	class:BeamletSparsifyWorker
run	dosecalc-beamlet/sparsify_worker.cpp	/^void FullSparsifyWorker::run() {$/;"	f	class:FullSparsifyWorker
run	dosecalc-beamlet/sparsify_worker.h	/^        virtual void run() {};$/;"	f	class:SparsifyWorkerBase
s	include/rapidjson/document.h	/^        String s;$/;"	m	union:GenericValue::Data
s	include/rapidjson/document.h	/^    const Ch* const s; \/\/!< plain CharType pointer$/;"	m	struct:GenericStringRef
s	include/rapidjson/reader.h	/^    Stream s;$/;"	m	class:internal::StreamLocalCopy
s	include/rapidjson/reader.h	/^    Stream& s;$/;"	m	class:internal::StreamLocalCopy
s_beams_seen	dosecalc-beamlet/sparsify_manager.h	/^        static std::set<unsigned short> s_beams_seen;$/;"	m	class:BaseW2FWorker
s_central_mutex	dosecalc-beamlet/sparsify_manager.h	/^        static std::mutex s_central_mutex;$/;"	m	class:BaseW2FWorker
s_index	DoseCalcAlgo/cudaSiddon.cu	18;"	d	file:
s_index	dosecalc-beamlet/nvbbRayConvolve_device.cu	7;"	d	file:
s_index	dosecalc-preprocess/kernels.cuh	133;"	d	file:
s_workerid	dosecalc-beamlet/sparsify_manager.cpp	/^unsigned int BaseW2FWorker::s_workerid = 0;$/;"	m	class:BaseW2FWorker	file:
s_workerid	dosecalc-beamlet/sparsify_manager.cpp	/^unsigned int SRWorker::s_workerid = 0;$/;"	m	class:SRWorker	file:
s_workerid	dosecalc-beamlet/sparsify_manager.h	/^        static unsigned int s_workerid;$/;"	m	class:BaseW2FWorker
s_workerid	dosecalc-beamlet/sparsify_manager.h	/^        static unsigned int s_workerid;$/;"	m	class:SRWorker
s_workerid	dosecalc-beamlet/sparsify_worker.cpp	/^unsigned int SparsifyWorkerBase::s_workerid = 0;$/;"	m	class:SparsifyWorkerBase	file:
s_workerid	dosecalc-beamlet/sparsify_worker.h	/^        static unsigned int s_workerid;$/;"	m	class:SparsifyWorkerBase
sad	DoseCalcIO/beam.h	/^        float  sad;             \/\/ source-axis-distance [cm]$/;"	m	class:BEAM
sad	extern/python/generate_phantom.py	/^    sad       = 100             # source-iso distance          [unit: cm]$/;"	v
saturate	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline float saturate(float a) $/;"	f	file:
saveRTImageData	RTClasses/rtimages.cpp	/^int RTImage::saveRTImageData(const std::string& outpath, float *newData, bool anonymize_switch ) {$/;"	f	class:RTImage
saveRTImageData	RTClasses/rtimages.cpp	/^void RTImage::saveRTImageData(const std::string& outpath, bool anonymize_switch ) {$/;"	f	class:RTImage
saveRTStructData	RTClasses/rtstruct.cpp	/^RTStruct::saveRTStructData( const char *outpath, ROI_DATA *new_roi_data, unsigned int new_roi_count, bool anonymize_switch )$/;"	f	class:RTStruct
saveRTStructData	RTClasses/rtstruct.cpp	/^RTStruct::saveRTStructData( const char *outpath, bool anonymize_switch )$/;"	f	class:RTStruct
save_npz	extern/python/read_dose_data.py	/^def save_npz(fid_prefix, Amat, meta = None, col_idx = None):$/;"	f
sbranches	include/client/dummy_defs.h	/^    int sbranches;         \/\/ number of branches off node BID, if nbranches = 0, server is a leaf$/;"	m	class:MGCS_PARAMS
schema	include/rapidjson/schema.h	/^        SchemaType* schema;$/;"	m	struct:GenericSchemaDocument::SchemaEntry
schema	include/rapidjson/schema.h	/^        const SchemaType* schema;$/;"	m	struct:internal::Schema::PatternProperty
schema	include/rapidjson/schema.h	/^        const SchemaType* schema;$/;"	m	struct:internal::Schema::Property
schema	include/rapidjson/schema.h	/^        const SchemaType** schema;$/;"	m	struct:GenericSchemaDocument::SchemaRefEntry
schema	include/rapidjson/schema.h	/^    const SchemaType* schema;$/;"	m	struct:internal::SchemaValidationContext
schemaDocument_	include/rapidjson/schema.h	/^    const SchemaDocumentType* schemaDocument_;$/;"	m	class:GenericSchemaValidator
schemaMap_	include/rapidjson/schema.h	/^    internal::Stack<Allocator> schemaMap_;  \/\/ Stores created Pointer -> Schemas$/;"	m	class:GenericSchemaDocument
schemaRef_	include/rapidjson/schema.h	/^    internal::Stack<Allocator> schemaRef_;  \/\/ Stores Pointer from $ref and schema which holds the $ref$/;"	m	class:GenericSchemaDocument
schemaStack_	include/rapidjson/schema.h	/^    internal::Stack<StateAllocator> schemaStack_;    \/\/!< stack to store the current path of schema (BaseSchemaType *)$/;"	m	class:GenericSchemaValidator
schemas	include/rapidjson/schema.h	/^        const SchemaType** schemas;$/;"	m	struct:internal::Schema::SchemaArray
sconvos	include/client/dummy_defs.h	/^    int sconvos[MAXIMUM_SERVERS_PER_NODE];           \/\/ number of convolutions for each server on this node$/;"	m	class:MGCS_PARAMS
sd_	include/rapidjson/schema.h	/^    const SchemaDocumentType& sd_;$/;"	m	class:SchemaValidatingReader
sdkFindFilePath	include/cuda-common/helper_string.h	/^inline char *sdkFindFilePath(const char *filename, const char *executable_path)$/;"	f
second_scatter	DoseCalcIO/kernel.h	/^    second_scatter,$/;"	m	class:KERNEL_CATEGORIES
self	Utilities/thread.h	/^        std::thread self;$/;"	m	class:Thread
setActiveGPU	CudaUtilities/manage_gpu.cu	/^void setActiveGPU(unsigned int dev) {$/;"	f
setArrayVoxel	RTClasses/rtimages.h	/^    void setArrayVoxel(int x, int y, int z, float v)                                   { data_array[x + data_size.x*(y + data_size.y*z)] = v; };$/;"	f	class:RTImage
setDataMax	RTClasses/rtimages.h	/^    void setDataMax(float v)                                                           { data_max = v; };$/;"	f	class:RTImage
setDataMin	RTClasses/rtimages.h	/^    void setDataMin(float v)                                                           { data_min = v; };$/;"	f	class:RTImage
setDataOrigin	RTClasses/rtimages.h	/^    void setDataOrigin(float v_x, float v_y, float v_z)                                { data_origin = float3{v_x, v_y, v_z}; }$/;"	f	class:RTImage
setDataSize	RTClasses/rtimages.h	/^    void setDataSize(int x, int y, int z)                                              { data_size = int3{x,y,z}; }$/;"	f	class:RTImage
setDicomDirectory	RTClasses/rtimages.h	/^    void setDicomDirectory(const std::string& dname)                                   { dicom_dir = dname; }$/;"	f	class:RTImage
setDicomDirectory	RTClasses/rtstruct.cpp	/^RTStruct::setDicomDirectory( const char *buffer )$/;"	f	class:RTStruct
setDicomFilename	RTClasses/rtstruct.cpp	/^RTStruct::setDicomFilename( char *buffer )$/;"	f	class:RTStruct
setMemoryLimit	CudaUtilities/memory_manager.cuh	/^        void setMemoryLimit(int64_t mem_limit) { this->mem_limit = mem_limit; };$/;"	f	class:MemoryManager
setRescaleIntercept	RTClasses/rtimages.h	/^    void setRescaleIntercept(float v)                                                  { rescale_intercept = v; };$/;"	f	class:RTImage
setRescaleSlope	RTClasses/rtimages.h	/^    void setRescaleSlope(float v)                                                      { rescale_slope = v; };$/;"	f	class:RTImage
setSliceFilename	RTClasses/rtimages.h	/^    void setSliceFilename(unsigned int i, const std::string& fname)                    { slice[i].filename = fname; }$/;"	f	class:RTImage
setSliceImagePositionPatient	RTClasses/rtimages.h	/^    void setSliceImagePositionPatient(unsigned int i, float v_x, float v_y, float v_z) { slice[i].image_position_patient = float3{v_x, v_y, v_z}; }$/;"	f	class:RTImage
setSliceInstanceNumber	RTClasses/rtimages.h	/^    void setSliceInstanceNumber(unsigned int i, int n)                                 { slice[i].instance_number = n; };$/;"	f	class:RTImage
setSliceSOPInstanceUID	RTClasses/rtimages.h	/^    void setSliceSOPInstanceUID( unsigned int i, const std::string& uid)               { slice[i].sop_instance_uid = uid; }$/;"	f	class:RTImage
setSubCntrPoint	RTClasses/rtstruct.cpp	/^RTStruct::setSubCntrPoint( unsigned int r, unsigned int s, unsigned int p, float v_x, float v_y, float v_z )$/;"	f	class:RTStruct
setVoxelSize	RTClasses/rtimages.h	/^    void setVoxelSize(float v_x, float v_y, float v_z)                                 { voxel_size = float3{v_x, v_y, v_z}; }$/;"	f	class:RTImage
setWindowCenter	RTClasses/rtimages.h	/^    void setWindowCenter(float v)                                                      { window_center = v; };$/;"	f	class:RTImage
setWindowWidth	RTClasses/rtimages.h	/^    void setWindowWidth(float v)                                                       { window_width = v; };$/;"	f	class:RTImage
set_chunksize	dosecalc-beamlet/sparsify_worker.h	/^        void set_chunksize(int c) { m_chunksize = c; }$/;"	f	class:SparsifyWorkerBase
set_color	Utilities/logging.cpp	/^std::string set_color(COLOR foreground, COLOR background) {$/;"	f
set_color	Utilities/logging.cpp	/^std::string set_color(unsigned int foreground, unsigned int background) {$/;"	f
set_compress_lvl	dosecalc-beamlet/sparsify_worker.h	/^        void set_compress_lvl(int c) { m_compress_lvl = c; }$/;"	f	class:SparsifyWorkerBase
set_data	DoseCalcIO/volume.h	/^        void set_data(T* ptr, uint count) { _vect = std::vector<T>(ptr, ptr+count); }$/;"	f	class:Volume
set_data	DoseCalcIO/volume.h	/^        void set_data(uint count) { _vect = std::vector<T>(count); }$/;"	f	class:Volume
set_isocenter_location	DoseCalcIO/beam.cpp	/^void BEAM::set_isocenter_location(const std::string& iso_loc) {$/;"	f	class:BEAM
set_isocenter_type	DoseCalcIO/beam.cpp	/^void BEAM::set_isocenter_type(const std::string& iso_type) {$/;"	f	class:BEAM
set_orientation_type	DoseCalcIO/beam.cpp	/^void BEAM::set_orientation_type(const std::string& orient_type) {$/;"	f	class:BEAM
shift	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^int shift; $/;"	m	struct:timex	file:
siddon_lidx	DoseCalcAlgo/cudaSiddon.cu	9;"	d	file:
siddon_write	DoseCalcAlgo/cudaSiddon.cu	13;"	d	file:
sigset_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef __sigset_t sigset_t; $/;"	t	file:
sincos	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline void sincos(float a, float *sptr, float *cptr) $/;"	f	file:
sincospi	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline void sincospi(float a, float *sptr, float *cptr) $/;"	f	file:
sinpi	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline float sinpi(float a) $/;"	f	file:
size	DoseCalcIO/io_data_structs.h	/^    size_t size() const { return keys.size(); }$/;"	f	struct:KeyValPairs
size	DoseCalcIO/io_data_structs.h	/^    size_t size() const { return kvp.size(); }$/;"	f	struct:SparseData
size	DoseCalcIO/io_data_structs.h	/^    uint3 size;                   \/\/ size of full dicom volume$/;"	m	struct:ArrayProps
size	DoseCalcIO/roi.h	/^        uint64_t size() { return _coll.size(); }$/;"	f	class:ROIMaskList
size	DoseCalcIO/volume.h	/^        uint3  size;                 \/\/ volume shape (units of integer voxels)$/;"	m	class:Volume
size	DoseCalcIO/volume.h	/^    uint3  size;    \/\/ data array dimensions$/;"	m	struct:FrameOfReference
size	Utilities/wqueue.h	/^        int size() {$/;"	f	class:wqueue
size	extern/python/generate_phantom.py	/^    size = (ceil(size2d[0]\/voxelsize[0]),  ceil(length\/voxelsize[1]),  ceil(size2d[1]\/voxelsize[2]))$/;"	v
size	extern/python/volume.py	/^    def size(self):$/;"	m	class:Volume
size	include/client/dummy_defs.h	/^    uint3 size;             \/\/ dimensions of data in voxels$/;"	m	class:MGCS_PARAMS
size	include/rapidjson/allocators.h	/^        size_t size;        \/\/!< Current size of allocated memory in bytes.$/;"	m	struct:MemoryPoolAllocator::ChunkHeader
size	include/rapidjson/document.h	/^        SizeType size;$/;"	m	struct:GenericValue::ArrayData
size	include/rapidjson/document.h	/^        SizeType size;$/;"	m	struct:GenericValue::ObjectData
size	include/server/brain_defs.h	/^    uint3  size;            \/\/ dimensions of data in voxels after resampling$/;"	m	struct:CONSTANTS
size2d	extern/python/generate_phantom.py	/^    size2d = np.add(fieldsize, np.multiply(2, penumbra))$/;"	v
size_	include/rapidjson/memorystream.h	/^    size_t size_;       \/\/!< Size of the stream.$/;"	m	struct:MemoryStream
size_data	include/server/brain_defs.h	/^    unsigned int size_data;$/;"	m	struct:SHM_DATA
size_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef unsigned long size_t; $/;"	t	file:
size_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef unsigned long size_t; $/;"	t	namespace:std	file:
slice	RTClasses/rtimages.h	/^    SLICE_DATA *slice;$/;"	m	class:RTImage
slice_location	RTClasses/rtimages.h	/^        float slice_location;$/;"	m	class:RTImage::SLICE_DATA
slice_thickness	RTClasses/rtimages.h	/^    float slice_thickness;$/;"	m	class:RTImage
smoothstep	include/cuda-common/helper_math.h	/^inline __device__ __host__ float smoothstep(float a, float b, float x)$/;"	f
smoothstep	include/cuda-common/helper_math.h	/^inline __device__ __host__ float2 smoothstep(float2 a, float2 b, float2 x)$/;"	f
smoothstep	include/cuda-common/helper_math.h	/^inline __device__ __host__ float3 smoothstep(float3 a, float3 b, float3 x)$/;"	f
smoothstep	include/cuda-common/helper_math.h	/^inline __device__ __host__ float4 smoothstep(float4 a, float4 b, float4 x)$/;"	f
sop_instance_uid	RTClasses/rtimages.h	/^        std::string sop_instance_uid;$/;"	m	class:RTImage::SLICE_DATA
sop_type	RTClasses/rtimages.h	/^    SOPTYPE sop_type;$/;"	m	class:RTImage
sort	DoseCalcIO/ctlut.cpp	/^void CTLUT::sort() {$/;"	f	class:CTLUT
source	DoseCalcIO/beam.h	/^        float3 source;          \/\/ x-ray src coords [cm]$/;"	m	class:BEAM
source	include/rapidjson/schema.h	/^        PointerType source;$/;"	m	struct:GenericSchemaDocument::SchemaRefEntry
spacing	DoseCalcIO/volume.h	/^    float3 spacing; \/\/ voxel size in [unit: mm]$/;"	m	struct:FrameOfReference
sparse_matrix_size_bytes	extern/python/read_dose_data.py	/^def sparse_matrix_size_bytes(sparsemat):$/;"	f
sparse_to_binary	DoseCalcIO/sparse_io.cpp	/^int sparse_to_binary(const std::string& filename, const SparseData& data, const void* _) {$/;"	f
sparse_to_hdf5	DoseCalcIO/sparse_io.cpp	/^int sparse_to_hdf5(const std::string& filename, const SparseData& data, const void* header) {$/;"	f
sparse_to_text	DoseCalcIO/sparse_io.cpp	/^int sparse_to_text(const std::string& filename, const SparseData& data, const void* _) {$/;"	f
sparsedata	dosecalc-beamlet/sparsify_manager.h	/^            SparseData     sparsedata;$/;"	m	struct:BaseW2FWorker::W2FData
sparsifymanager	dosecalc-beamlet/main.cu	/^SparsifyManager         sparsifymanager;$/;"	v
sparsity_thresh	DoseCalcIO/io_data_structs.h	/^    float       sparsity_thresh;      \/\/ Setting for sparse thresholding$/;"	m	struct:HEADER_PATIENT
sparsity_thresh	dosecalc-beamlet/main.cu	/^static float            sparsity_thresh = 1e-6;$/;"	v	file:
spectra_dir	DoseCalcIO/paths.h	/^        std::string spectra_dir() { return data_dir() + "\/spectra"; }$/;"	f	class:Paths
spectrum_file	DoseCalcIO/kernel.h	/^    std::string spectrum_file;$/;"	m	struct:MONO_KERNELS
splitext	DoseCalcIO/io_helpers.cpp	/^    std::array<std::string, 2> splitext(std::string fname) {$/;"	f	namespace:dcio
src	extern/python/fmaps.py	/^    def src(self):$/;"	m	class:Beam
src_	include/rapidjson/memorystream.h	/^    const Ch* src_;     \/\/!< Current read position.$/;"	m	struct:MemoryStream
src_	include/rapidjson/pointer.h	/^        const Ch* src_;     \/\/!< Current read position.$/;"	m	class:GenericPointer::PercentDecodeStream
src_	include/rapidjson/stream.h	/^    Ch* src_;$/;"	m	struct:GenericInsituStringStream
src_	include/rapidjson/stream.h	/^    const Ch* src_;     \/\/!< Current read position.$/;"	m	struct:GenericStringStream
src_coords_cm	DoseCalcIO/beam.h	/^            float       src_coords_cm[3]; \/\/ x-ray src coords [cm]$/;"	m	struct:BEAM::COMP_BEAM_T
srqueue_size	dosecalc-beamlet/sparsify_manager.h	/^        int srqueue_size () { return m_srqueue.size(); }$/;"	f	class:SparsifyManager
ss	include/rapidjson/document.h	/^        ShortString ss;$/;"	m	union:GenericValue::Data
ss_	include/rapidjson/internal/regex.h	/^    SourceStream& ss_;$/;"	m	class:internal::DecodedStream
ss_factor	dosecalc-preprocess/argparser.h	/^    uint         ss_factor           = 3;             \/\/ terma anti-aliasing super-sampling factor (must be >=1; 1 to disable)$/;"	m	struct:CLIArgs
ss_factor	include/server/brain_defs.h	/^    uint ss_factor;         \/\/ terma anti-aliasing supersample factor$/;"	m	struct:CONSTANTS
sservers	include/client/dummy_defs.h	/^    int sservers;          \/\/ number of servers to launch on this node$/;"	m	class:MGCS_PARAMS
ssize_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef __ssize_t ssize_t; $/;"	t	file:
stabil	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__syscall_slong_t stabil; $/;"	m	struct:timex	file:
stackEnd_	include/rapidjson/internal/stack.h	/^    char *stackEnd_;$/;"	m	class:internal::Stack
stackStream	include/rapidjson/reader.h	/^        StackStream<char> stackStream;$/;"	m	class:GenericReader::NumberStream
stackTop_	include/rapidjson/internal/stack.h	/^    char *stackTop_;$/;"	m	class:internal::Stack
stack_	include/rapidjson/document.h	/^    internal::Stack<StackAllocator> stack_;$/;"	m	class:GenericDocument
stack_	include/rapidjson/internal/stack.h	/^    char *stack_;$/;"	m	class:internal::Stack
stack_	include/rapidjson/memorybuffer.h	/^    mutable internal::Stack<Allocator> stack_;$/;"	m	struct:GenericMemoryBuffer
stack_	include/rapidjson/reader.h	/^        internal::Stack<StackAllocator>& stack_;$/;"	m	class:GenericReader::StackStream
stack_	include/rapidjson/reader.h	/^    internal::Stack<StackAllocator> stack_;  \/\/!< A stack for storing decoded string temporarily during non-destructive parsing.$/;"	m	class:GenericReader
stack_	include/rapidjson/schema.h	/^    Stack<Allocator> stack_;$/;"	m	class:internal::Hasher
stack_	include/rapidjson/stringbuffer.h	/^    mutable internal::Stack<Allocator> stack_;$/;"	m	class:GenericStringBuffer
start	CudaUtilities/cuda_timing.cu	/^void CudaTimer::start() {$/;"	f	class:CudaTimer
start	DoseCalcIO/volume.h	/^        float3 start;                \/\/ coords of first voxel in scanner coord system (GCS)$/;"	m	class:Volume
start	DoseCalcIO/volume.h	/^    float3 start;   \/\/ scanner coords of first voxel in data array [unit: mm]$/;"	m	struct:FrameOfReference
start	Utilities/thread.cpp	/^void Thread::start() {$/;"	f	class:Thread
start	Utilities/timing.cpp	/^void Timer::start() {$/;"	f	class:Timer
start	include/rapidjson/internal/regex.h	/^        SizeType start;$/;"	m	struct:internal::GenericRegex::Frag
start	include/rapidjson/internal/regex.h	/^        unsigned start; \/\/ $/;"	m	struct:internal::GenericRegex::Range
start	include/server/brain_defs.h	/^    float3 start;           \/\/ 3D coordinates of data origin (i.e. first voxel of the dicom volume)$/;"	m	struct:CONSTANTS
state	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^int32_t *state; $/;"	m	struct:random_data	file:
state0_	include/rapidjson/internal/regex.h	/^    Stack<Allocator> state0_;$/;"	m	class:internal::GenericRegexSearch
state1_	include/rapidjson/internal/regex.h	/^    Stack<Allocator> state1_;$/;"	m	class:internal::GenericRegexSearch
stateAllocator_	include/rapidjson/schema.h	/^    StateAllocator* stateAllocator_;$/;"	m	class:GenericSchemaValidator
stateCount_	include/rapidjson/internal/regex.h	/^    SizeType stateCount_;$/;"	m	class:internal::GenericRegex
stateSet_	include/rapidjson/internal/regex.h	/^    uint32_t* stateSet_;$/;"	m	class:internal::GenericRegexSearch
state_	include/rapidjson/reader.h	/^    IterativeParsingState state_;$/;"	m	class:GenericReader
states_	include/rapidjson/internal/regex.h	/^    Stack<Allocator> states_;$/;"	m	class:internal::GenericRegex
status	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^int status; $/;"	m	struct:timex	file:
stbcnt	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__syscall_slong_t stbcnt; $/;"	m	struct:timex	file:
std	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^namespace std __attribute((__visibility__("default"))) { $/;"	f
std	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^namespace std { $/;"	n	file:
stop	CudaUtilities/cuda_timing.cu	/^void CudaTimer::stop() {$/;"	f	class:CudaTimer
stop	Utilities/timing.cpp	/^void Timer::stop() {$/;"	f	class:Timer
stop_print_time_elapsed	CudaUtilities/cuda_timing.cu	/^void CudaTimer::stop_print_time_elapsed(const char* memo) {$/;"	f	class:CudaTimer
stop_print_time_elapsed	CudaUtilities/cuda_timing.cu	/^void CudaTimer::stop_print_time_elapsed(const std::string& memo) {$/;"	f	class:CudaTimer
stop_print_time_elapsed	Utilities/timing.cpp	/^void Timer::stop_print_time_elapsed(const char* memo) {$/;"	f	class:Timer
stop_print_time_elapsed	Utilities/timing.cpp	/^void Timer::stop_print_time_elapsed(const std::string& memo) {$/;"	f	class:Timer
storage_size	extern/matlab/read_dose_data.m	/^function [size, unit] = storage_size(var)$/;"	f
str	include/rapidjson/document.h	/^        Ch str[MaxChars];$/;"	m	struct:GenericValue::ShortString
str	include/rapidjson/document.h	/^        const Ch* str;$/;"	m	struct:GenericValue::String
strcontains	extern/matlab/read_dose_data.m	/^function out = strcontains(fullstr, sub)$/;"	f
stream_	include/rapidjson/istreamwrapper.h	/^    StreamType& stream_;$/;"	m	class:BasicIStreamWrapper
stream_	include/rapidjson/ostreamwrapper.h	/^    StreamType& stream_;$/;"	m	class:BasicOStreamWrapper
stringRemoveDelimiter	include/cuda-common/helper_string.h	/^inline int stringRemoveDelimiter(char delimiter, const char *string)$/;"	f
strtoimax	include/rapidjson/msinttypes/inttypes.h	307;"	d
strtoumax	include/rapidjson/msinttypes/inttypes.h	308;"	d
structures_file	dosecalc-preprocess/argparser.h	/^    std::string  structures_file;                     \/\/ path to structures.json describing optimization structures$/;"	m	struct:CLIArgs
strvect	DoseCalcIO/json.cpp	/^typedef std::vector<std::string> strvect;$/;"	t	file:
sub_cntr_count	DoseCalcIO/roi.h	/^    unsigned int       sub_cntr_count = 0; \/\/ nslices in "CLOSED_PLANAR" DICOM storage mode$/;"	m	struct:StructureSet
sub_cntr_count	RTClasses/rtstruct.h	/^        unsigned int sub_cntr_count;$/;"	m	class:RTStruct::ROI_DATA
sub_cntr_data	RTClasses/rtstruct.h	/^        CNTR_DATA *sub_cntr_data;$/;"	m	class:RTStruct::ROI_DATA
sub_cntr_points_count	DoseCalcIO/roi.h	/^    std::vector<uint>  sub_cntr_points_count;  \/\/ list of coord. counts for each sub_cntr$/;"	m	struct:StructureSet
sub_cntr_points_count	RTClasses/rtstruct.h	/^        unsigned int *sub_cntr_points_count;$/;"	m	class:RTStruct::ROI_DATA
subraycount	dosecalc-preprocess/kernels.cuh	132;"	d	file:
subrayidx	dosecalc-preprocess/kernels.cuh	131;"	d	file:
subvoxcount	DoseCalcAlgo/cudaSiddon.cu	17;"	d	file:
subvoxcount	dosecalc-beamlet/nvbbRayConvolve_device.cu	6;"	d	file:
subvoxidx	DoseCalcAlgo/cudaSiddon.cu	16;"	d	file:
subvoxidx	dosecalc-beamlet/nvbbRayConvolve_device.cu	5;"	d	file:
supportUnicode	include/rapidjson/encodings.h	/^    enum { supportUnicode = 0 };$/;"	e	enum:ASCII::__anon9
supportUnicode	include/rapidjson/encodings.h	/^    enum { supportUnicode = 1 };$/;"	e	enum:AutoUTF::__anon10
supportUnicode	include/rapidjson/encodings.h	/^    enum { supportUnicode = 1 };$/;"	e	enum:UTF16::__anon7
supportUnicode	include/rapidjson/encodings.h	/^    enum { supportUnicode = 1 };$/;"	e	enum:UTF32::__anon8
supportUnicode	include/rapidjson/encodings.h	/^    enum { supportUnicode = 1 };$/;"	e	enum:UTF8::__anon6
surf1DLayeredread	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline T surf1DLayeredread(surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) $/;"	f	file:
surf1DLayeredread	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(T *res, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) $/;"	f	file:
surf1DLayeredread	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredread(T *res, surface< void, 241>  surf, int x, int layer, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) $/;"	f	file:
surf1DLayeredread	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^surf1DLayeredread(T *ptr, cudaSurfaceObject_t obj, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) $/;"	f	file:
surf1DLayeredread	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^surf1DLayeredread(cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) $/;"	f	file:
surf1DLayeredwrite	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(T val, surface< void, 241>  surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) $/;"	f	file:
surf1DLayeredwrite	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(T val, surface< void, 241>  surf, int x, int layer, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) $/;"	f	file:
surf1DLayeredwrite	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^surf1DLayeredwrite(T val, cudaSurfaceObject_t obj, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) $/;"	f	file:
surf1Dread	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline T surf1Dread(surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) $/;"	f	file:
surf1Dread	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(T *res, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) $/;"	f	file:
surf1Dread	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dread(T *res, surface< void, 1>  surf, int x, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) $/;"	f	file:
surf1Dread	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^surf1Dread(T *ptr, cudaSurfaceObject_t obj, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) $/;"	f	file:
surf1Dread	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^surf1Dread(cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) $/;"	f	file:
surf1Dwrite	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(T val, surface< void, 1>  surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) $/;"	f	file:
surf1Dwrite	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline void surf1Dwrite(T val, surface< void, 1>  surf, int x, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) $/;"	f	file:
surf1Dwrite	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^surf1Dwrite(T val, cudaSurfaceObject_t obj, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) $/;"	f	file:
surf2DLayeredread	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline T surf2DLayeredread(surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) $/;"	f	file:
surf2DLayeredread	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(T *res, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) $/;"	f	file:
surf2DLayeredread	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredread(T *res, surface< void, 242>  surf, int x, int y, int layer, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) $/;"	f	file:
surf2DLayeredread	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^surf2DLayeredread(T *ptr, cudaSurfaceObject_t obj, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) $/;"	f	file:
surf2DLayeredread	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^surf2DLayeredread(cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) $/;"	f	file:
surf2DLayeredwrite	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(T val, surface< void, 242>  surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) $/;"	f	file:
surf2DLayeredwrite	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline void surf2DLayeredwrite(T val, surface< void, 242>  surf, int x, int y, int layer, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) $/;"	f	file:
surf2DLayeredwrite	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^surf2DLayeredwrite(T val, cudaSurfaceObject_t obj, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) $/;"	f	file:
surf2Dread	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline T surf2Dread(surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) $/;"	f	file:
surf2Dread	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(T *res, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) $/;"	f	file:
surf2Dread	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dread(T *res, surface< void, 2>  surf, int x, int y, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) $/;"	f	file:
surf2Dread	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^surf2Dread(T *ptr, cudaSurfaceObject_t obj, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) $/;"	f	file:
surf2Dread	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^surf2Dread(cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) $/;"	f	file:
surf2Dwrite	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(T val, surface< void, 2>  surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) $/;"	f	file:
surf2Dwrite	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline void surf2Dwrite(T val, surface< void, 2>  surf, int x, int y, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) $/;"	f	file:
surf2Dwrite	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^surf2Dwrite(T val, cudaSurfaceObject_t obj, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) $/;"	f	file:
surf3Dread	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline T surf3Dread(surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) $/;"	f	file:
surf3Dread	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(T *res, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) $/;"	f	file:
surf3Dread	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dread(T *res, surface< void, 3>  surf, int x, int y, int z, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) $/;"	f	file:
surf3Dread	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^surf3Dread(T *ptr, cudaSurfaceObject_t obj, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) $/;"	f	file:
surf3Dread	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^surf3Dread(cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) $/;"	f	file:
surf3Dwrite	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(T val, surface< void, 3>  surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) $/;"	f	file:
surf3Dwrite	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline void surf3Dwrite(T val, surface< void, 3>  surf, int x, int y, int z, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) $/;"	f	file:
surf3Dwrite	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^surf3Dwrite(T val, cudaSurfaceObject_t obj, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) $/;"	f	file:
surfCubemapLayeredread	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline T surfCubemapLayeredread(surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) $/;"	f	file:
surfCubemapLayeredread	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(T *res, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) $/;"	f	file:
surfCubemapLayeredread	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredread(T *res, surface< void, 252>  surf, int x, int y, int layerFace, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) $/;"	f	file:
surfCubemapLayeredread	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^surfCubemapLayeredread(T *ptr, cudaSurfaceObject_t obj, int x, int y, int layerface, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) $/;"	f	file:
surfCubemapLayeredread	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^surfCubemapLayeredread(cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) $/;"	f	file:
surfCubemapLayeredwrite	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(T val, surface< void, 252>  surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) $/;"	f	file:
surfCubemapLayeredwrite	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(T val, surface< void, 252>  surf, int x, int y, int layerFace, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) $/;"	f	file:
surfCubemapLayeredwrite	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^surfCubemapLayeredwrite(T val, cudaSurfaceObject_t obj, int x, int y, int layerface, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) $/;"	f	file:
surfCubemapread	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline T surfCubemapread(surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) $/;"	f	file:
surfCubemapread	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(T *res, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) $/;"	f	file:
surfCubemapread	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapread(T *res, surface< void, 12>  surf, int x, int y, int face, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) $/;"	f	file:
surfCubemapread	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^surfCubemapread(T *ptr, cudaSurfaceObject_t obj, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) $/;"	f	file:
surfCubemapread	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^surfCubemapread(cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap) $/;"	f	file:
surfCubemapwrite	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(T val, surface< void, 12>  surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) $/;"	f	file:
surfCubemapwrite	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapwrite(T val, surface< void, 12>  surf, int x, int y, int face, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) $/;"	f	file:
surfCubemapwrite	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^surfCubemapwrite(T val, cudaSurfaceObject_t obj, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap) $/;"	f	file:
surfDose	dosecalc-beam/nvbbRayConvolve_host.cu	/^    cudaSurfaceObject_t surfDose;$/;"	m	struct:DEVICE_CONV_DATA	file:
surfDose	dosecalc-beamlet/nvbbRayConvolve_host.cu	/^    cudaSurfaceObject_t surfDose;$/;"	m	struct:DEVICE_CONV_DATA	file:
surface	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^struct surface : public surfaceReference { $/;"	s	file:
surface	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^struct surface< void, dim>  : public surfaceReference { $/;"	s	file:
surface	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^surface() $/;"	f	struct:surface
surface	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^surface(cudaChannelFormatDesc desc) $/;"	f	struct:surface
suseconds_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef __suseconds_t suseconds_t; $/;"	t	file:
syncthreads_and	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline bool syncthreads_and(bool pred) {int volatile ___ = 1;(void)pred;::exit(___);}$/;"	f	file:
syncthreads_count	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline int syncthreads_count(bool pred) {int volatile ___ = 1;(void)pred;::exit(___);}$/;"	f	file:
syncthreads_or	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline bool syncthreads_or(bool pred) {int volatile ___ = 1;(void)pred;::exit(___);}$/;"	f	file:
tai	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^int tai; $/;"	m	struct:timex	file:
takeFunc_	include/rapidjson/encodedstream.h	/^    TakeFunc takeFunc_;$/;"	m	class:AutoUTFInputStream
target	include/rapidjson/schema.h	/^        PointerType target;$/;"	m	struct:GenericSchemaDocument::SchemaRefEntry
target_exact_match	dosecalc-preprocess/argparser.h	/^    bool         target_exact_match  = false;         \/\/ match by substring by default$/;"	m	struct:CLIArgs
target_structure	DoseCalcIO/io_data_structs.h	/^    std::string target_structure;     \/\/ name of structure to which dose is delivered$/;"	m	struct:HEADER_PATIENT
target_structure	include/server/brain_defs.h	/^    char target_structure[300]; \/\/ name of PTV$/;"	m	struct:CONSTANTS
temp_dir	DoseCalcIO/paths.h	/^        std::string temp_dir() { return m_temp_dir; }$/;"	f	class:Paths
term_Array	dosecalc-beam/nvbbRayConvolve_host.cu	/^    cudaArray *term_Array;$/;"	m	struct:DEVICE_CONV_DATA	file:
term_Array	dosecalc-beamlet/nvbbRayConvolve_host.cu	/^    cudaArray *term_Array;$/;"	m	struct:DEVICE_CONV_DATA	file:
terma	dosecalc-beam/nvbbRayConvolve_host.cu	/^    float *terma;$/;"	m	struct:DEVICE_CONV_DATA	file:
test_build_cmake	tests/autotest.sh	/^test_build_cmake() {$/;"	f
test_existence_file	tests/autotest.sh	/^test_existence_file() {$/;"	f
test_main	tests/autotest.sh	/^test_main() {$/;"	f
test_read_binary	DoseCalcIO/sparse_io.cpp	/^int test_read_binary(const std::string& filename, KeyValPairs& in_sparse) {$/;"	f
test_run	tests/autotest.sh	/^test_run() {$/;"	f
tex1D	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmet_ret< T> ::type tex1D(texture< T, 1, cudaReadModeElementType>  t, float x) $/;"	f	file:
tex1D	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmnf_ret< T> ::type tex1D(texture< T, 1, cudaReadModeNormalizedFloat>  t, float x) $/;"	f	file:
tex1D	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^tex1D(T *ptr, cudaTextureObject_t obj, float x) $/;"	f	file:
tex1D	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^tex1D(cudaTextureObject_t texObject, float x) $/;"	f	file:
tex1DGrad	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmet_ret< T> ::type tex1DGrad(texture< T, 1, cudaReadModeElementType>  t, float x, float dPdx, float dPdy) $/;"	f	file:
tex1DGrad	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmnf_ret< T> ::type tex1DGrad(texture< T, 1, cudaReadModeNormalizedFloat>  t, float x, float dPdx, float dPdy) $/;"	f	file:
tex1DGrad	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^tex1DGrad(T *ptr, cudaTextureObject_t obj, float x, float dPdx, float dPdy) $/;"	f	file:
tex1DGrad	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^tex1DGrad(cudaTextureObject_t texObject, float x, float dPdx, float dPdy) $/;"	f	file:
tex1DLayered	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmet_ret< T> ::type tex1DLayered(texture< T, 241, cudaReadModeElementType>  t, float x, int layer) $/;"	f	file:
tex1DLayered	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmnf_ret< T> ::type tex1DLayered(texture< T, 241, cudaReadModeNormalizedFloat>  t, float x, int layer) $/;"	f	file:
tex1DLayered	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^tex1DLayered(T *ptr, cudaTextureObject_t obj, float x, int layer) $/;"	f	file:
tex1DLayered	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^tex1DLayered(cudaTextureObject_t texObject, float x, int layer) $/;"	f	file:
tex1DLayeredGrad	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmet_ret< T> ::type tex1DLayeredGrad(texture< T, 241, cudaReadModeElementType>  t, float x, int layer, float dPdx, float dPdy) $/;"	f	file:
tex1DLayeredGrad	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmnf_ret< T> ::type tex1DLayeredGrad(texture< T, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float dPdx, float dPdy) $/;"	f	file:
tex1DLayeredGrad	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^tex1DLayeredGrad(T *ptr, cudaTextureObject_t obj, float x, int layer, float dPdx, float dPdy) $/;"	f	file:
tex1DLayeredGrad	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^tex1DLayeredGrad(cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy) $/;"	f	file:
tex1DLayeredLod	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmet_ret< T> ::type tex1DLayeredLod(texture< T, 241, cudaReadModeElementType>  t, float x, int layer, float level) $/;"	f	file:
tex1DLayeredLod	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmnf_ret< T> ::type tex1DLayeredLod(texture< T, 241, cudaReadModeNormalizedFloat>  t, float x, int layer, float level) $/;"	f	file:
tex1DLayeredLod	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^tex1DLayeredLod(T *ptr, cudaTextureObject_t obj, float x, int layer, float level) $/;"	f	file:
tex1DLayeredLod	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^tex1DLayeredLod(cudaTextureObject_t texObject, float x, int layer, float level) $/;"	f	file:
tex1DLod	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmet_ret< T> ::type tex1DLod(texture< T, 1, cudaReadModeElementType>  t, float x, float level) $/;"	f	file:
tex1DLod	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmnf_ret< T> ::type tex1DLod(texture< T, 1, cudaReadModeNormalizedFloat>  t, float x, float level) $/;"	f	file:
tex1DLod	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^tex1DLod(T *ptr, cudaTextureObject_t obj, float x, float level) $/;"	f	file:
tex1DLod	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^tex1DLod(cudaTextureObject_t texObject, float x, float level) $/;"	f	file:
tex1Dfetch	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmet_ret< T> ::type tex1Dfetch(texture< T, 1, cudaReadModeElementType>  t, int x) $/;"	f	file:
tex1Dfetch	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmnf_ret< T> ::type tex1Dfetch(texture< T, 1, cudaReadModeNormalizedFloat>  t, int x) $/;"	f	file:
tex1Dfetch	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^tex1Dfetch(T *ptr, cudaTextureObject_t obj, int x) $/;"	f	file:
tex1Dfetch	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^tex1Dfetch(cudaTextureObject_t texObject, int x) $/;"	f	file:
tex2D	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmet_ret< T> ::type tex2D(texture< T, 2, cudaReadModeElementType>  t, float x, float y) $/;"	f	file:
tex2D	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmnf_ret< T> ::type tex2D(texture< T, 2, cudaReadModeNormalizedFloat>  t, float x, float y) $/;"	f	file:
tex2D	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^tex2D(T *ptr, cudaTextureObject_t obj, float x, float y) $/;"	f	file:
tex2D	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^tex2D(cudaTextureObject_t texObject, float x, float y) $/;"	f	file:
tex2DGrad	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmet_ret< T> ::type tex2DGrad(texture< T, 2, cudaReadModeElementType>  t, float x, float y, float2 dPdx, float2 dPdy) $/;"	f	file:
tex2DGrad	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmnf_ret< T> ::type tex2DGrad(texture< T, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float2 dPdx, float2 dPdy) $/;"	f	file:
tex2DGrad	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^tex2DGrad(T *ptr, cudaTextureObject_t obj, float x, float y, float2 dPdx, float2 dPdy) $/;"	f	file:
tex2DGrad	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^tex2DGrad(cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy) $/;"	f	file:
tex2DLayered	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmet_ret< T> ::type tex2DLayered(texture< T, 242, cudaReadModeElementType>  t, float x, float y, int layer) $/;"	f	file:
tex2DLayered	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmnf_ret< T> ::type tex2DLayered(texture< T, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer) $/;"	f	file:
tex2DLayered	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^tex2DLayered(T *ptr, cudaTextureObject_t obj, float x, float y, int layer) $/;"	f	file:
tex2DLayered	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^tex2DLayered(cudaTextureObject_t texObject, float x, float y, int layer) $/;"	f	file:
tex2DLayeredGrad	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmet_ret< T> ::type tex2DLayeredGrad(texture< T, 242, cudaReadModeElementType>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) $/;"	f	file:
tex2DLayeredGrad	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmnf_ret< T> ::type tex2DLayeredGrad(texture< T, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float2 dPdx, float2 dPdy) $/;"	f	file:
tex2DLayeredGrad	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^tex2DLayeredGrad(T *ptr, cudaTextureObject_t obj, float x, float y, int layer, float2 dPdx, float2 dPdy) $/;"	f	file:
tex2DLayeredGrad	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^tex2DLayeredGrad(cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy) $/;"	f	file:
tex2DLayeredLod	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmet_ret< T> ::type tex2DLayeredLod(texture< T, 242, cudaReadModeElementType>  t, float x, float y, int layer, float level) $/;"	f	file:
tex2DLayeredLod	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmnf_ret< T> ::type tex2DLayeredLod(texture< T, 242, cudaReadModeNormalizedFloat>  t, float x, float y, int layer, float level) $/;"	f	file:
tex2DLayeredLod	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^tex2DLayeredLod(T *ptr, cudaTextureObject_t obj, float x, float y, int layer, float level) $/;"	f	file:
tex2DLayeredLod	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^tex2DLayeredLod(cudaTextureObject_t texObject, float x, float y, int layer, float level) $/;"	f	file:
tex2DLod	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmet_ret< T> ::type tex2DLod(texture< T, 2, cudaReadModeElementType>  t, float x, float y, float level) $/;"	f	file:
tex2DLod	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmnf_ret< T> ::type tex2DLod(texture< T, 2, cudaReadModeNormalizedFloat>  t, float x, float y, float level) $/;"	f	file:
tex2DLod	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^tex2DLod(T *ptr, cudaTextureObject_t obj, float x, float y, float level) $/;"	f	file:
tex2DLod	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^tex2DLod(cudaTextureObject_t texObject, float x, float y, float level) $/;"	f	file:
tex2Dgather	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex2dgather_ret< T> ::type tex2Dgather(texture< T, 2, cudaReadModeElementType>  t, float x, float y, int comp = 0) $/;"	f	file:
tex2Dgather	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex2dgather_rmnf_ret< T> ::type tex2Dgather(texture< T, 2, cudaReadModeNormalizedFloat>  t, float x, float y, int comp = 0) $/;"	f	file:
tex2Dgather	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^tex2Dgather(T *ptr, cudaTextureObject_t obj, float x, float y, int comp = 0) $/;"	f	file:
tex2Dgather	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^tex2Dgather(cudaTextureObject_t to, float x, float y, int comp = 0) $/;"	f	file:
tex3D	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmet_ret< T> ::type tex3D(texture< T, 3, cudaReadModeElementType>  t, float x, float y, float z) $/;"	f	file:
tex3D	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmnf_ret< T> ::type tex3D(texture< T, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z) $/;"	f	file:
tex3D	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^tex3D(T *ptr, cudaTextureObject_t obj, float x, float y, float z) $/;"	f	file:
tex3D	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^tex3D(cudaTextureObject_t texObject, float x, float y, float z) $/;"	f	file:
tex3DGrad	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmet_ret< T> ::type tex3DGrad(texture< T, 3, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) $/;"	f	file:
tex3DGrad	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmnf_ret< T> ::type tex3DGrad(texture< T, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) $/;"	f	file:
tex3DGrad	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^tex3DGrad(T *ptr, cudaTextureObject_t obj, float x, float y, float z, float4 dPdx, float4 dPdy) $/;"	f	file:
tex3DGrad	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^tex3DGrad(cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) $/;"	f	file:
tex3DLod	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmet_ret< T> ::type tex3DLod(texture< T, 3, cudaReadModeElementType>  t, float x, float y, float z, float level) $/;"	f	file:
tex3DLod	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmnf_ret< T> ::type tex3DLod(texture< T, 3, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) $/;"	f	file:
tex3DLod	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^tex3DLod(T *ptr, cudaTextureObject_t obj, float x, float y, float z, float level) $/;"	f	file:
tex3DLod	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^tex3DLod(cudaTextureObject_t texObject, float x, float y, float z, float level) $/;"	f	file:
texCubemap	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmet_ret< T> ::type texCubemap(texture< T, 12, cudaReadModeElementType>  t, float x, float y, float z) $/;"	f	file:
texCubemap	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmnf_ret< T> ::type texCubemap(texture< T, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z) $/;"	f	file:
texCubemap	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^texCubemap(T *ptr, cudaTextureObject_t obj, float x, float y, float z) $/;"	f	file:
texCubemap	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^texCubemap(cudaTextureObject_t texObject, float x, float y, float z) $/;"	f	file:
texCubemapGrad	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmet_ret< T> ::type texCubemapGrad(texture< T, 12, cudaReadModeElementType>  t, float x, float y, float z, float4 dPdx, float4 dPdy) $/;"	f	file:
texCubemapGrad	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmnf_ret< T> ::type texCubemapGrad(texture< T, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float4 dPdx, float4 dPdy) $/;"	f	file:
texCubemapGrad	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^texCubemapGrad(T *ptr, cudaTextureObject_t obj, float x, float y, float z, float4 dPdx, float4 dPdy) $/;"	f	file:
texCubemapGrad	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^texCubemapGrad(cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy) $/;"	f	file:
texCubemapLayered	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmet_ret< T> ::type texCubemapLayered(texture< T, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer) $/;"	f	file:
texCubemapLayered	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmnf_ret< T> ::type texCubemapLayered(texture< T, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer) $/;"	f	file:
texCubemapLayered	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^texCubemapLayered(T *ptr, cudaTextureObject_t obj, float x, float y, float z, int layer) $/;"	f	file:
texCubemapLayered	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^texCubemapLayered(cudaTextureObject_t texObject, float x, float y, float z, int layer) $/;"	f	file:
texCubemapLayeredGrad	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmet_ret< T> ::type texCubemapLayeredGrad(texture< T, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float4 dPdx, float4 dPdy) $/;"	f	file:
texCubemapLayeredGrad	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmnf_ret< T> ::type texCubemapLayeredGrad(texture< T, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float4 dPdx, float4 dPdy) $/;"	f	file:
texCubemapLayeredGrad	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^texCubemapLayeredGrad(T *ptr, cudaTextureObject_t obj, float x, float y, float z, int layer, float4 dPdx, float4 dPdy) $/;"	f	file:
texCubemapLayeredGrad	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^texCubemapLayeredGrad(cudaTextureObject_t texObject, float x, float y, float z, int layer, float4 dPdx, float4 dPdy) $/;"	f	file:
texCubemapLayeredLod	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmet_ret< T> ::type texCubemapLayeredLod(texture< T, 252, cudaReadModeElementType>  t, float x, float y, float z, int layer, float level) $/;"	f	file:
texCubemapLayeredLod	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmnf_ret< T> ::type texCubemapLayeredLod(texture< T, 252, cudaReadModeNormalizedFloat>  t, float x, float y, float z, int layer, float level) $/;"	f	file:
texCubemapLayeredLod	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^texCubemapLayeredLod(T *ptr, cudaTextureObject_t obj, float x, float y, float z, int layer, float level) $/;"	f	file:
texCubemapLayeredLod	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^texCubemapLayeredLod(cudaTextureObject_t texObject, float x, float y, float z, int layer, float level) $/;"	f	file:
texCubemapLod	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmet_ret< T> ::type texCubemapLod(texture< T, 12, cudaReadModeElementType>  t, float x, float y, float z, float level) $/;"	f	file:
texCubemapLod	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute((always_inline)) __attribute__((unused)) static inline typename __nv_tex_rmnf_ret< T> ::type texCubemapLod(texture< T, 12, cudaReadModeNormalizedFloat>  t, float x, float y, float z, float level) $/;"	f	file:
texCubemapLod	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^texCubemapLod(T *ptr, cudaTextureObject_t obj, float x, float y, float z, float level) $/;"	f	file:
texCubemapLod	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^texCubemapLod(cudaTextureObject_t texObject, float x, float y, float z, float level) $/;"	f	file:
texDens	dosecalc-beam/nvbbRayConvolve_host.cu	/^static cudaTextureObject_t texDens     [ MAXIMUM_DEVICE_COUNT ] = {0};$/;"	v	file:
texDens	dosecalc-beamlet/nvbbRayConvolve_host.cu	/^static cudaTextureObject_t texDens     [ MAXIMUM_DEVICE_COUNT ] = {0};$/;"	v	file:
texDose	dosecalc-beam/nvbbRayConvolve_host.cu	/^    cudaTextureObject_t texDose;    \/\/$/;"	m	struct:DEVICE_CONV_DATA	file:
texDose	dosecalc-beamlet/nvbbRayConvolve_host.cu	/^    cudaTextureObject_t texDose;$/;"	m	struct:DEVICE_CONV_DATA	file:
texImg	dosecalc-preprocess/kernels.cuh	/^texture<float, 3, cudaReadModeElementType> texImg;$/;"	v
texKern	dosecalc-beam/nvbbRayConvolve_host.cu	/^static cudaTextureObject_t texKern     [ MAXIMUM_DEVICE_COUNT ] = {0};$/;"	v	file:
texKern	dosecalc-beamlet/nvbbRayConvolve_host.cu	/^static cudaTextureObject_t texKern     [ MAXIMUM_DEVICE_COUNT ] = {0};$/;"	v	file:
texSpectrum	dosecalc-beam/nvbbRayConvolve_host.cu	/^static cudaTextureObject_t texSpectrum [ MAXIMUM_DEVICE_COUNT ] = {0};$/;"	v	file:
texSpectrum	dosecalc-beamlet/nvbbRayConvolve_host.cu	/^static cudaTextureObject_t texSpectrum [ MAXIMUM_DEVICE_COUNT ] = {0};$/;"	v	file:
texTerma	dosecalc-beam/nvbbRayConvolve_host.cu	/^    cudaTextureObject_t texTerma;   \/\/ texture object created\/destroyed for each beam - array mem is once initialized for all beams$/;"	m	struct:DEVICE_CONV_DATA	file:
texTerma	dosecalc-beamlet/nvbbRayConvolve_host.cu	/^    cudaTextureObject_t texTerma;   \/\/ texture object created\/destroyed for each beam - array mem is once initialized for all beams$/;"	m	struct:DEVICE_CONV_DATA	file:
texture	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^struct texture : public textureReference { $/;"	s	file:
texture	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^texture(int norm = 0, cudaTextureFilterMode $/;"	f	struct:texture
texture	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^texture(int norm, cudaTextureFilterMode $/;"	f	struct:texture
theta	dosecalc-beamlet/nvbbRayConvolve_host.cu	/^        float theta;$/;"	m	class:ArraySizeError	file:
throw_it	include/cuda-common/exception.h	/^throw_it(const char *file, const int line, const char *detailed)$/;"	f	class:Exception
throw_it	include/cuda-common/exception.h	/^throw_it(const char *file, const int line, const std::string &msg)$/;"	f	class:Exception
tick	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__syscall_slong_t tick; $/;"	m	struct:timex	file:
time	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^timeval time; $/;"	m	struct:timex	file:
time_elapsed	CudaUtilities/cuda_timing.cu	/^float CudaTimer::time_elapsed() {$/;"	f	class:CudaTimer
time_elapsed	Utilities/timing.cpp	/^double Timer::time_elapsed() {$/;"	f	class:Timer
time_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef __time_t time_t; $/;"	t	file:
timepoint_t	Utilities/timing.h	/^typedef std::chrono::high_resolution_clock::time_point timepoint_t;$/;"	t
timer_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef __timer_t timer_t; $/;"	t	file:
timespec	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^struct timespec { $/;"	s	file:
timeval	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^struct timeval { $/;"	s	file:
timex	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^struct timex { $/;"	s	file:
timing	dosecalc-preprocess/argparser.h	/^    bool         timing              = false;$/;"	m	struct:CLIArgs
timing	include/client/dummy_defs.h	/^    bool timing;$/;"	m	class:MGCS_PARAMS
timing	include/server/brain_defs.h	/^    bool verbose, timing, debugwrite;$/;"	m	struct:DEVICE_THREAD_DATA
tm	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^struct tm { $/;"	s	file:
tm_gmtoff	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^long tm_gmtoff; $/;"	m	struct:tm	file:
tm_hour	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^int tm_hour; $/;"	m	struct:tm	file:
tm_isdst	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^int tm_isdst; $/;"	m	struct:tm	file:
tm_mday	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^int tm_mday; $/;"	m	struct:tm	file:
tm_min	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^int tm_min; $/;"	m	struct:tm	file:
tm_mon	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^int tm_mon; $/;"	m	struct:tm	file:
tm_sec	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^int tm_sec; $/;"	m	struct:tm	file:
tm_wday	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^int tm_wday; $/;"	m	struct:tm	file:
tm_yday	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^int tm_yday; $/;"	m	struct:tm	file:
tm_year	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^int tm_year; $/;"	m	struct:tm	file:
tm_zone	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^const char *tm_zone; $/;"	m	struct:tm	file:
tokenCount_	include/rapidjson/pointer.h	/^    size_t tokenCount_;                     \/\/!< Number of tokens in tokens_.$/;"	m	class:GenericPointer
tokenize_string	DoseCalcIO/io_helpers.cpp	/^    void tokenize_string(const std::string& str, std::vector<std::string>& tokens, const std::string& delims) {$/;"	f	namespace:dcio
tokens	extern/python/utils/convert_beamlist.py	/^                    tokens = list(line.rstrip('\\n').split(' '))$/;"	v
tokens_	include/rapidjson/pointer.h	/^    Token* tokens_;                         \/\/!< A list of tokens.$/;"	m	class:GenericPointer
tolerance	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__syscall_slong_t tolerance; $/;"	m	struct:timex	file:
tolower	DoseCalcIO/io_helpers.cpp	/^    char* tolower(char* retval) {$/;"	f	namespace:dcio
tolower	DoseCalcIO/io_helpers.cpp	/^    std::string tolower(std::string retval) {$/;"	f	namespace:dcio
total	CudaUtilities/manage_gpu.cuh	/^        float total;$/;"	m	class:cudaMemInfo	file:
total_matrix	DoseCalcIO/kernel.h	/^        std::vector<float> total_matrix;				   \/\/sum of all categories (used for current convolution)$/;"	m	class:KERNEL
total_points_count	DoseCalcIO/roi.h	/^    unsigned int       total_points_count = 0;$/;"	m	struct:StructureSet
total_points_count	RTClasses/rtstruct.h	/^        unsigned int total_points_count;$/;"	m	class:RTStruct::ROI_DATA
try_pop	Utilities/wqueue.h	/^        bool try_pop(T& item, int workerid=-1) {$/;"	f	class:wqueue
tv_nsec	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__syscall_slong_t tv_nsec; $/;"	m	struct:timespec	file:
tv_sec	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__time_t tv_sec; $/;"	m	struct:timespec	file:
tv_sec	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__time_t tv_sec; $/;"	m	struct:timeval	file:
tv_usec	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__suseconds_t tv_usec; $/;"	m	struct:timeval	file:
tworker_radConvolveTexture	dosecalc-beam/main.cu	/^void* tworker_radConvolveTexture(void* args) {$/;"	f
tworker_radConvolveTexture	dosecalc-beamlet/main.cu	/^void* tworker_radConvolveTexture(void* args) {$/;"	f
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template< class T> struct __nv_tex_rmet_cast { typedef T *type; }; $/;"	t	struct:__nv_tex_rmet_cast	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< char1>  { typedef void type; }; $/;"	t	struct:__nv_isurf_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< char2>  { typedef void type; }; $/;"	t	struct:__nv_isurf_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< char4>  { typedef void type; }; $/;"	t	struct:__nv_isurf_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< char>  { typedef void type; }; $/;"	t	struct:__nv_isurf_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< float1>  { typedef void type; }; $/;"	t	struct:__nv_isurf_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< float2>  { typedef void type; }; $/;"	t	struct:__nv_isurf_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< float4>  { typedef void type; }; $/;"	t	struct:__nv_isurf_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< float>  { typedef void type; }; $/;"	t	struct:__nv_isurf_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< int1>  { typedef void type; }; $/;"	t	struct:__nv_isurf_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< int2>  { typedef void type; }; $/;"	t	struct:__nv_isurf_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< int4>  { typedef void type; }; $/;"	t	struct:__nv_isurf_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< int>  { typedef void type; }; $/;"	t	struct:__nv_isurf_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< long long>  { typedef void type; }; $/;"	t	struct:__nv_isurf_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< longlong1>  { typedef void type; }; $/;"	t	struct:__nv_isurf_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< longlong2>  { typedef void type; }; $/;"	t	struct:__nv_isurf_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< short1>  { typedef void type; }; $/;"	t	struct:__nv_isurf_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< short2>  { typedef void type; }; $/;"	t	struct:__nv_isurf_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< short4>  { typedef void type; }; $/;"	t	struct:__nv_isurf_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< short>  { typedef void type; }; $/;"	t	struct:__nv_isurf_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< signed char>  { typedef void type; }; $/;"	t	struct:__nv_isurf_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< uchar1>  { typedef void type; }; $/;"	t	struct:__nv_isurf_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< uchar2>  { typedef void type; }; $/;"	t	struct:__nv_isurf_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< uchar4>  { typedef void type; }; $/;"	t	struct:__nv_isurf_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< uint1>  { typedef void type; }; $/;"	t	struct:__nv_isurf_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< uint2>  { typedef void type; }; $/;"	t	struct:__nv_isurf_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< uint4>  { typedef void type; }; $/;"	t	struct:__nv_isurf_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< ulonglong1>  { typedef void type; }; $/;"	t	struct:__nv_isurf_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< ulonglong2>  { typedef void type; }; $/;"	t	struct:__nv_isurf_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< unsigned char>  { typedef void type; }; $/;"	t	struct:__nv_isurf_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< unsigned long long>  { typedef void type; }; $/;"	t	struct:__nv_isurf_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< unsigned short>  { typedef void type; }; $/;"	t	struct:__nv_isurf_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< unsigned>  { typedef void type; }; $/;"	t	struct:__nv_isurf_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< ushort1>  { typedef void type; }; $/;"	t	struct:__nv_isurf_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< ushort2>  { typedef void type; }; $/;"	t	struct:__nv_isurf_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_isurf_trait< ushort4>  { typedef void type; }; $/;"	t	struct:__nv_isurf_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_itex_trait< char1>  { typedef void type; }; $/;"	t	struct:__nv_itex_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_itex_trait< char2>  { typedef void type; }; $/;"	t	struct:__nv_itex_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_itex_trait< char4>  { typedef void type; }; $/;"	t	struct:__nv_itex_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_itex_trait< char>  { typedef void type; }; $/;"	t	struct:__nv_itex_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_itex_trait< float1>  { typedef void type; }; $/;"	t	struct:__nv_itex_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_itex_trait< float2>  { typedef void type; }; $/;"	t	struct:__nv_itex_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_itex_trait< float4>  { typedef void type; }; $/;"	t	struct:__nv_itex_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_itex_trait< float>  { typedef void type; }; $/;"	t	struct:__nv_itex_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_itex_trait< int1>  { typedef void type; }; $/;"	t	struct:__nv_itex_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_itex_trait< int2>  { typedef void type; }; $/;"	t	struct:__nv_itex_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_itex_trait< int4>  { typedef void type; }; $/;"	t	struct:__nv_itex_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_itex_trait< int>  { typedef void type; }; $/;"	t	struct:__nv_itex_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_itex_trait< short1>  { typedef void type; }; $/;"	t	struct:__nv_itex_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_itex_trait< short2>  { typedef void type; }; $/;"	t	struct:__nv_itex_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_itex_trait< short4>  { typedef void type; }; $/;"	t	struct:__nv_itex_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_itex_trait< short>  { typedef void type; }; $/;"	t	struct:__nv_itex_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_itex_trait< signed char>  { typedef void type; }; $/;"	t	struct:__nv_itex_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_itex_trait< uchar1>  { typedef void type; }; $/;"	t	struct:__nv_itex_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_itex_trait< uchar2>  { typedef void type; }; $/;"	t	struct:__nv_itex_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_itex_trait< uchar4>  { typedef void type; }; $/;"	t	struct:__nv_itex_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_itex_trait< uint1>  { typedef void type; }; $/;"	t	struct:__nv_itex_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_itex_trait< uint2>  { typedef void type; }; $/;"	t	struct:__nv_itex_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_itex_trait< uint4>  { typedef void type; }; $/;"	t	struct:__nv_itex_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_itex_trait< unsigned char>  { typedef void type; }; $/;"	t	struct:__nv_itex_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_itex_trait< unsigned short>  { typedef void type; }; $/;"	t	struct:__nv_itex_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_itex_trait< unsigned>  { typedef void type; }; $/;"	t	struct:__nv_itex_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_itex_trait< ushort1>  { typedef void type; }; $/;"	t	struct:__nv_itex_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_itex_trait< ushort2>  { typedef void type; }; $/;"	t	struct:__nv_itex_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_itex_trait< ushort4>  { typedef void type; }; $/;"	t	struct:__nv_itex_trait	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< char1>  { typedef char4 type; }; $/;"	t	struct:__nv_tex2dgather_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< char2>  { typedef char4 type; }; $/;"	t	struct:__nv_tex2dgather_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< char3>  { typedef char4 type; }; $/;"	t	struct:__nv_tex2dgather_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< char4>  { typedef char4 type; }; $/;"	t	struct:__nv_tex2dgather_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< char>  { typedef char4 type; }; $/;"	t	struct:__nv_tex2dgather_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< float1>  { typedef float4 type; }; $/;"	t	struct:__nv_tex2dgather_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< float2>  { typedef float4 type; }; $/;"	t	struct:__nv_tex2dgather_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< float3>  { typedef float4 type; }; $/;"	t	struct:__nv_tex2dgather_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< float4>  { typedef float4 type; }; $/;"	t	struct:__nv_tex2dgather_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< float>  { typedef float4 type; }; $/;"	t	struct:__nv_tex2dgather_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< int1>  { typedef int4 type; }; $/;"	t	struct:__nv_tex2dgather_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< int2>  { typedef int4 type; }; $/;"	t	struct:__nv_tex2dgather_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< int3>  { typedef int4 type; }; $/;"	t	struct:__nv_tex2dgather_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< int4>  { typedef int4 type; }; $/;"	t	struct:__nv_tex2dgather_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< int>  { typedef int4 type; }; $/;"	t	struct:__nv_tex2dgather_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< short1>  { typedef short4 type; }; $/;"	t	struct:__nv_tex2dgather_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< short2>  { typedef short4 type; }; $/;"	t	struct:__nv_tex2dgather_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< short3>  { typedef short4 type; }; $/;"	t	struct:__nv_tex2dgather_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< short4>  { typedef short4 type; }; $/;"	t	struct:__nv_tex2dgather_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< short>  { typedef short4 type; }; $/;"	t	struct:__nv_tex2dgather_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< signed char>  { typedef char4 type; }; $/;"	t	struct:__nv_tex2dgather_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< uchar1>  { typedef uchar4 type; }; $/;"	t	struct:__nv_tex2dgather_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< uchar2>  { typedef uchar4 type; }; $/;"	t	struct:__nv_tex2dgather_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< uchar3>  { typedef uchar4 type; }; $/;"	t	struct:__nv_tex2dgather_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< uchar4>  { typedef uchar4 type; }; $/;"	t	struct:__nv_tex2dgather_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< uint1>  { typedef uint4 type; }; $/;"	t	struct:__nv_tex2dgather_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< uint2>  { typedef uint4 type; }; $/;"	t	struct:__nv_tex2dgather_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< uint3>  { typedef uint4 type; }; $/;"	t	struct:__nv_tex2dgather_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< uint4>  { typedef uint4 type; }; $/;"	t	struct:__nv_tex2dgather_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< unsigned char>  { typedef uchar4 type; }; $/;"	t	struct:__nv_tex2dgather_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< unsigned short>  { typedef ushort4 type; }; $/;"	t	struct:__nv_tex2dgather_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< unsigned>  { typedef uint4 type; }; $/;"	t	struct:__nv_tex2dgather_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< ushort1>  { typedef ushort4 type; }; $/;"	t	struct:__nv_tex2dgather_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< ushort2>  { typedef ushort4 type; }; $/;"	t	struct:__nv_tex2dgather_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< ushort3>  { typedef ushort4 type; }; $/;"	t	struct:__nv_tex2dgather_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_ret< ushort4>  { typedef ushort4 type; }; $/;"	t	struct:__nv_tex2dgather_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_rmnf_ret< char1>  { typedef float4 type; }; $/;"	t	struct:__nv_tex2dgather_rmnf_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_rmnf_ret< char2>  { typedef float4 type; }; $/;"	t	struct:__nv_tex2dgather_rmnf_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_rmnf_ret< char3>  { typedef float4 type; }; $/;"	t	struct:__nv_tex2dgather_rmnf_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_rmnf_ret< char4>  { typedef float4 type; }; $/;"	t	struct:__nv_tex2dgather_rmnf_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_rmnf_ret< char>  { typedef float4 type; }; $/;"	t	struct:__nv_tex2dgather_rmnf_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_rmnf_ret< short1>  { typedef float4 type; }; $/;"	t	struct:__nv_tex2dgather_rmnf_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_rmnf_ret< short2>  { typedef float4 type; }; $/;"	t	struct:__nv_tex2dgather_rmnf_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_rmnf_ret< short3>  { typedef float4 type; }; $/;"	t	struct:__nv_tex2dgather_rmnf_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_rmnf_ret< short4>  { typedef float4 type; }; $/;"	t	struct:__nv_tex2dgather_rmnf_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_rmnf_ret< signed char>  { typedef float4 type; }; $/;"	t	struct:__nv_tex2dgather_rmnf_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_rmnf_ret< signed short>  { typedef float4 type; }; $/;"	t	struct:__nv_tex2dgather_rmnf_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_rmnf_ret< uchar1>  { typedef float4 type; }; $/;"	t	struct:__nv_tex2dgather_rmnf_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_rmnf_ret< uchar2>  { typedef float4 type; }; $/;"	t	struct:__nv_tex2dgather_rmnf_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_rmnf_ret< uchar3>  { typedef float4 type; }; $/;"	t	struct:__nv_tex2dgather_rmnf_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_rmnf_ret< uchar4>  { typedef float4 type; }; $/;"	t	struct:__nv_tex2dgather_rmnf_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_rmnf_ret< unsigned char>  { typedef float4 type; }; $/;"	t	struct:__nv_tex2dgather_rmnf_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_rmnf_ret< unsigned short>  { typedef float4 type; }; $/;"	t	struct:__nv_tex2dgather_rmnf_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_rmnf_ret< ushort1>  { typedef float4 type; }; $/;"	t	struct:__nv_tex2dgather_rmnf_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_rmnf_ret< ushort2>  { typedef float4 type; }; $/;"	t	struct:__nv_tex2dgather_rmnf_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_rmnf_ret< ushort3>  { typedef float4 type; }; $/;"	t	struct:__nv_tex2dgather_rmnf_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex2dgather_rmnf_ret< ushort4>  { typedef float4 type; }; $/;"	t	struct:__nv_tex2dgather_rmnf_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmet_ret< char1>  { typedef char1 type; }; $/;"	t	struct:__nv_tex_rmet_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmet_ret< char2>  { typedef char2 type; }; $/;"	t	struct:__nv_tex_rmet_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmet_ret< char4>  { typedef char4 type; }; $/;"	t	struct:__nv_tex_rmet_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmet_ret< char>  { typedef char type; }; $/;"	t	struct:__nv_tex_rmet_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmet_ret< float1>  { typedef float1 type; }; $/;"	t	struct:__nv_tex_rmet_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmet_ret< float2>  { typedef float2 type; }; $/;"	t	struct:__nv_tex_rmet_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmet_ret< float4>  { typedef float4 type; }; $/;"	t	struct:__nv_tex_rmet_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmet_ret< float>  { typedef float type; }; $/;"	t	struct:__nv_tex_rmet_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmet_ret< int1>  { typedef int1 type; }; $/;"	t	struct:__nv_tex_rmet_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmet_ret< int2>  { typedef int2 type; }; $/;"	t	struct:__nv_tex_rmet_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmet_ret< int4>  { typedef int4 type; }; $/;"	t	struct:__nv_tex_rmet_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmet_ret< int>  { typedef int type; }; $/;"	t	struct:__nv_tex_rmet_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmet_ret< short1>  { typedef short1 type; }; $/;"	t	struct:__nv_tex_rmet_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmet_ret< short2>  { typedef short2 type; }; $/;"	t	struct:__nv_tex_rmet_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmet_ret< short4>  { typedef short4 type; }; $/;"	t	struct:__nv_tex_rmet_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmet_ret< short>  { typedef short type; }; $/;"	t	struct:__nv_tex_rmet_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmet_ret< signed char>  { typedef signed char type; }; $/;"	t	struct:__nv_tex_rmet_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmet_ret< uchar1>  { typedef uchar1 type; }; $/;"	t	struct:__nv_tex_rmet_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmet_ret< uchar2>  { typedef uchar2 type; }; $/;"	t	struct:__nv_tex_rmet_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmet_ret< uchar4>  { typedef uchar4 type; }; $/;"	t	struct:__nv_tex_rmet_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmet_ret< uint1>  { typedef uint1 type; }; $/;"	t	struct:__nv_tex_rmet_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmet_ret< uint2>  { typedef uint2 type; }; $/;"	t	struct:__nv_tex_rmet_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmet_ret< uint4>  { typedef uint4 type; }; $/;"	t	struct:__nv_tex_rmet_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmet_ret< unsigned char>  { typedef unsigned char type; }; $/;"	t	struct:__nv_tex_rmet_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmet_ret< unsigned short>  { typedef unsigned short type; }; $/;"	t	struct:__nv_tex_rmet_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmet_ret< unsigned>  { typedef unsigned type; }; $/;"	t	struct:__nv_tex_rmet_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmet_ret< ushort1>  { typedef ushort1 type; }; $/;"	t	struct:__nv_tex_rmet_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmet_ret< ushort2>  { typedef ushort2 type; }; $/;"	t	struct:__nv_tex_rmet_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmet_ret< ushort4>  { typedef ushort4 type; }; $/;"	t	struct:__nv_tex_rmet_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmnf_ret< char1>  { typedef float1 type; }; $/;"	t	struct:__nv_tex_rmnf_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmnf_ret< char2>  { typedef float2 type; }; $/;"	t	struct:__nv_tex_rmnf_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmnf_ret< char4>  { typedef float4 type; }; $/;"	t	struct:__nv_tex_rmnf_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmnf_ret< char>  { typedef float type; }; $/;"	t	struct:__nv_tex_rmnf_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmnf_ret< short1>  { typedef float1 type; }; $/;"	t	struct:__nv_tex_rmnf_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmnf_ret< short2>  { typedef float2 type; }; $/;"	t	struct:__nv_tex_rmnf_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmnf_ret< short4>  { typedef float4 type; }; $/;"	t	struct:__nv_tex_rmnf_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmnf_ret< short>  { typedef float type; }; $/;"	t	struct:__nv_tex_rmnf_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmnf_ret< signed char>  { typedef float type; }; $/;"	t	struct:__nv_tex_rmnf_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmnf_ret< uchar1>  { typedef float1 type; }; $/;"	t	struct:__nv_tex_rmnf_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmnf_ret< uchar2>  { typedef float2 type; }; $/;"	t	struct:__nv_tex_rmnf_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmnf_ret< uchar4>  { typedef float4 type; }; $/;"	t	struct:__nv_tex_rmnf_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmnf_ret< unsigned char>  { typedef float type; }; $/;"	t	struct:__nv_tex_rmnf_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmnf_ret< unsigned short>  { typedef float type; }; $/;"	t	struct:__nv_tex_rmnf_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmnf_ret< ushort1>  { typedef float1 type; }; $/;"	t	struct:__nv_tex_rmnf_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmnf_ret< ushort2>  { typedef float2 type; }; $/;"	t	struct:__nv_tex_rmnf_ret	file:
type	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^template<> struct __nv_tex_rmnf_ret< ushort4>  { typedef float4 type; }; $/;"	t	struct:__nv_tex_rmnf_ret	file:
type_	include/rapidjson/encodedstream.h	/^    UTFType type_;$/;"	m	class:AutoUTFInputStream
type_	include/rapidjson/encodedstream.h	/^    UTFType type_;$/;"	m	class:AutoUTFOutputStream
type_	include/rapidjson/schema.h	/^    unsigned type_; \/\/ bitmask of kSchemaType$/;"	m	class:internal::Schema
typedH5DatasetFactory	DoseCalcIO/volume.h	/^        static H5::DataSet typedH5DatasetFactory(H5::Group& h5group, const T* data, const FrameOfReference& frame, const std::string& dset_name, const H5::PredType& fileDataType, const H5::PredType& memDataType) {$/;"	f	class:Volume
typedH5DatasetLoader	DoseCalcIO/volume.h	/^        static void typedH5DatasetLoader(std::vector<T>& outvect, uint3& outsize, H5::DataSet& h5dset, const H5::PredType& memDataType) {$/;"	f	class:Volume
typeless_	include/rapidjson/schema.h	/^    SchemaType* typeless_;$/;"	m	class:GenericSchemaDocument
typeless_	include/rapidjson/schema.h	/^    const SchemaType* typeless_;$/;"	m	class:internal::Schema
u	include/rapidjson/document.h	/^            unsigned u;$/;"	m	struct:GenericValue::Number::U
u	include/rapidjson/document.h	/^        }u;$/;"	m	union:GenericValue::Number	typeref:struct:GenericValue::Number::U
u	include/rapidjson/schema.h	/^            uint64_t u;$/;"	m	union:internal::Hasher::Number::U
u	include/rapidjson/schema.h	/^        }u;$/;"	m	struct:internal::Hasher::Number	typeref:union:internal::Hasher::Number::U
u32toa	include/rapidjson/internal/itoa.h	/^inline char* u32toa(uint32_t value, char* buffer) {$/;"	f	namespace:internal
u64	include/rapidjson/document.h	/^        uint64_t u64;$/;"	m	union:GenericValue::Number
u64toa	include/rapidjson/internal/itoa.h	/^inline char* u64toa(uint64_t value, char* buffer) {$/;"	f	namespace:internal
u_	include/rapidjson/internal/ieee754.h	/^        uint64_t u_;$/;"	m	union:internal::Double::__anon1
u_char	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef __u_char u_char; $/;"	t	file:
u_int	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef __u_int u_int; $/;"	t	file:
u_int16_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef unsigned short u_int16_t __attribute((__mode__(__HI__))); $/;"	t	file:
u_int32_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef unsigned u_int32_t __attribute((__mode__(__SI__))); $/;"	t	file:
u_int64_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef unsigned long u_int64_t __attribute((__mode__(__DI__))); $/;"	t	file:
u_int8_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef unsigned char u_int8_t __attribute((__mode__(__QI__))); $/;"	t	file:
u_long	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef __u_long u_long; $/;"	t	file:
u_quad_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef __u_quad_t u_quad_t; $/;"	t	file:
u_short	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef __u_short u_short; $/;"	t	file:
uid	DoseCalcIO/beam.h	/^            ushort      uid;              \/\/ Unique ID (0-based)$/;"	m	struct:BEAM::COMP_BEAM_T
uid	DoseCalcIO/beam.h	/^        uint   uid;             \/\/ unique index that maps beam back to line in beam_list.txt$/;"	m	class:BEAM
uid_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef __uid_t uid_t; $/;"	t	file:
uint	DoseCalcIO/volume.h	/^typedef unsigned int uint;$/;"	t
uint	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef unsigned uint; $/;"	t	file:
uint	include/cuda-common/helper_math.h	/^typedef unsigned int uint;$/;"	t
uint16_t	include/rapidjson/msinttypes/stdint.h	/^   typedef unsigned __int16  uint16_t;$/;"	t
uint16_t	include/rapidjson/msinttypes/stdint.h	/^   typedef unsigned short    uint16_t;$/;"	t
uint2double	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline double uint2double(unsigned a, cudaRoundMode mode) $/;"	f	file:
uint2float	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline float uint2float(unsigned a, cudaRoundMode mode) $/;"	f	file:
uint32_t	include/rapidjson/msinttypes/stdint.h	/^   typedef unsigned __int32  uint32_t;$/;"	t
uint32_t	include/rapidjson/msinttypes/stdint.h	/^   typedef unsigned int      uint32_t;$/;"	t
uint64_t	include/rapidjson/msinttypes/stdint.h	/^typedef unsigned __int64     uint64_t;$/;"	t
uint8_t	include/rapidjson/msinttypes/stdint.h	/^   typedef unsigned __int8   uint8_t;$/;"	t
uint8_t	include/rapidjson/msinttypes/stdint.h	/^   typedef unsigned char     uint8_t;$/;"	t
uint_as_float	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline float uint_as_float(unsigned a) $/;"	f	file:
uint_fast16_t	include/rapidjson/msinttypes/stdint.h	/^typedef uint16_t  uint_fast16_t;$/;"	t
uint_fast32_t	include/rapidjson/msinttypes/stdint.h	/^typedef uint32_t  uint_fast32_t;$/;"	t
uint_fast64_t	include/rapidjson/msinttypes/stdint.h	/^typedef uint64_t  uint_fast64_t;$/;"	t
uint_fast8_t	include/rapidjson/msinttypes/stdint.h	/^typedef uint8_t   uint_fast8_t;$/;"	t
uint_least16_t	include/rapidjson/msinttypes/stdint.h	/^typedef uint16_t  uint_least16_t;$/;"	t
uint_least32_t	include/rapidjson/msinttypes/stdint.h	/^typedef uint32_t  uint_least32_t;$/;"	t
uint_least64_t	include/rapidjson/msinttypes/stdint.h	/^typedef uint64_t  uint_least64_t;$/;"	t
uint_least8_t	include/rapidjson/msinttypes/stdint.h	/^typedef uint8_t   uint_least8_t;$/;"	t
uintmax_t	include/rapidjson/msinttypes/stdint.h	/^typedef uint64_t  uintmax_t;$/;"	t
uintptr_t	include/rapidjson/msinttypes/stdint.h	/^   typedef _W64 unsigned int uintptr_t;$/;"	t
uintptr_t	include/rapidjson/msinttypes/stdint.h	/^   typedef unsigned __int64  uintptr_t;$/;"	t
ull2double	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline double ull2double(unsigned long long a, cudaRoundMode mode) $/;"	f	file:
ullmax	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^inline unsigned long long ullmax(unsigned long long a, unsigned long long $/;"	f
ullmin	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^inline unsigned long long ullmin(unsigned long long a, unsigned long long $/;"	f
ulong	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef unsigned long ulong; $/;"	t	file:
umax	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^inline unsigned umax(unsigned a, unsigned b) $/;"	f
umin	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^inline unsigned umin(unsigned a, unsigned b) $/;"	f
umul24	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^__attribute__((unused)) static inline unsigned umul24(unsigned a, unsigned b) $/;"	f	file:
uniqueItems_	include/rapidjson/schema.h	/^    bool uniqueItems_;$/;"	m	class:internal::Schema
unit	CudaUtilities/manage_gpu.cuh	/^        std::string unit = "GB";$/;"	m	class:cudaMemInfo	file:
unpack_write	dosecalc-beamlet/nvbbRayConvolve_device.cu	458;"	d	file:
update_extents	dosecalc-beam/nvbbRayConvolve_host.cu	/^static inline void update_extents(float3& currMin, float3& currMax, const float3& thisPt) {$/;"	f	file:
update_extents	dosecalc-beamlet/nvbbRayConvolve_host.cu	/^static void update_extents(float3& currMin, float3& currMax, const float3& thisPt) {$/;"	f	file:
useconds_t	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef __useconds_t useconds_t; $/;"	t	file:
used	CudaUtilities/manage_gpu.cuh	/^        float used;$/;"	m	class:cudaMemInfo	file:
userBuffer_	include/rapidjson/allocators.h	/^    void *userBuffer_;          \/\/!< User supplied buffer.$/;"	m	class:MemoryPoolAllocator
ushort	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^typedef unsigned short ushort; $/;"	t	file:
ushort	include/cuda-common/helper_math.h	/^typedef unsigned short ushort;$/;"	t
valid_	include/rapidjson/pointer.h	/^        bool valid_;        \/\/!< Whether the parsing is valid.$/;"	m	class:GenericPointer::PercentDecodeStream
valid_	include/rapidjson/schema.h	/^    bool valid_;$/;"	m	class:GenericSchemaValidator
validatorCount	include/rapidjson/schema.h	/^    SizeType validatorCount;$/;"	m	struct:internal::SchemaValidationContext
validatorCount_	include/rapidjson/schema.h	/^    SizeType validatorCount_;$/;"	m	class:internal::Schema
validators	include/rapidjson/schema.h	/^    ISchemaValidator** validators;$/;"	m	struct:internal::SchemaValidationContext
vals	DoseCalcIO/io_data_structs.h	/^    std::vector<float>     vals;  \/\/ dose coefficient value$/;"	m	struct:KeyValPairs
value	include/rapidjson/document.h	/^    GenericValue<Encoding, Allocator> value;    \/\/!< value of member.$/;"	m	struct:GenericMember
value	include/rapidjson/rapidjson.h	/^template <> struct STATIC_ASSERTION_FAILURE<true> { enum { value = 1 }; };$/;"	e	enum:STATIC_ASSERTION_FAILURE::__anon11
valueCount	include/rapidjson/writer.h	/^        size_t valueCount;  \/\/!< number of values in this level$/;"	m	struct:Writer::Level
valuePatternValidatorType	include/rapidjson/schema.h	/^    PatternValidatorType valuePatternValidatorType;$/;"	m	struct:internal::SchemaValidationContext
valueSchema	include/rapidjson/schema.h	/^    const SchemaType* valueSchema;$/;"	m	struct:internal::SchemaValidationContext
valueUniqueness	include/rapidjson/schema.h	/^    bool valueUniqueness;$/;"	m	struct:internal::SchemaValidationContext
value_	include/rapidjson/document.h	/^    ValueType& value_;$/;"	m	class:GenericArray
value_	include/rapidjson/document.h	/^    ValueType& value_;$/;"	m	class:GenericObject
verbose	dosecalc-preprocess/argparser.h	/^    int          verbose             = false;$/;"	m	struct:CLIArgs
verbose	extern/python/utils/sumMcols.py	/^    verbose = args.verbose$/;"	v
verbose	include/client/dummy_defs.h	/^    bool verbose;$/;"	m	class:MGCS_PARAMS
verbose	include/server/brain_defs.h	/^    bool verbose, timing, debugwrite;$/;"	m	struct:DEVICE_THREAD_DATA
verbose	tests/utils/generate_beamlist.py	/^    verbose = args.verbose$/;"	v
version_hash	extern/matlab/read_dose_data.m	/^function vhash = version_hash(major, minor)$/;"	f
vol	extern/python/generate_phantom.py	/^    vol = Volume.CenterAt(dens, center=(0,0,0), voxelsize=voxelsize)$/;"	v
vol	extern/python/volume.py	/^    vol = Volume.CenterAt(np.ones((128, 90, 90)), (0, 0, 12.8), (0.2, 0.2, 0.2))$/;"	v	class:Volume
volatile	build/CMakeFiles/3.16.0/CompilerIdC/CMakeCCompilerId.c	11;"	d	file:
voxel	include/client/dummy_defs.h	/^    float3 voxel;           \/\/ size of voxel in mm$/;"	m	class:MGCS_PARAMS
voxel	include/server/brain_defs.h	/^    float3 voxel;           \/\/ size of voxel in mm$/;"	m	struct:CONSTANTS
voxel_size	RTClasses/rtimages.h	/^    float3 voxel_size;$/;"	m	class:RTImage
voxel_size_cm	DoseCalcIO/io_data_structs.h	/^    float3      voxel_size_cm;        \/\/ voxel size in [cm]$/;"	m	struct:HEADER_PATIENT
voxelsize	dosecalc-preprocess/argparser.h	/^    float        voxelsize           = 0.25f;         \/\/ isotropic voxelsize of output [unit: cm]$/;"	m	struct:CLIArgs
voxelsize	extern/python/generate_phantom.py	/^    voxelsize = (0.1, 0.1, 0.1) # (X,Y,Z)                      [unit: cm]$/;"	v
voxsize	DoseCalcIO/volume.h	/^        float3 voxsize;              \/\/ voxel dimensions in mm$/;"	m	class:Volume
w2fqueue_size	dosecalc-beamlet/sparsify_manager.h	/^        int w2fqueue_size () { return m_w2fqueue.size(); }$/;"	f	class:SparsifyManager
wallThickness	DoseCalcIO/io_data_structs.h	/^    int wallThickness = 2;       \/\/ number of REV voxels composing separating walls; should be >=2 for best results$/;"	m	struct:PILLAR_GRID
wcstoimax	include/rapidjson/msinttypes/inttypes.h	311;"	d
wcstoumax	include/rapidjson/msinttypes/inttypes.h	312;"	d
window_center	RTClasses/rtimages.h	/^    float window_center;$/;"	m	class:RTImage
window_width	RTClasses/rtimages.h	/^    float window_width;$/;"	m	class:RTImage
workerid	dosecalc-beamlet/sparsify_manager.h	/^        uint workerid() { return m_workerid; }$/;"	f	class:SRWorker
workerid	dosecalc-beamlet/sparsify_worker.h	/^        uint workerid() { return m_workerid; }$/;"	f	class:SparsifyWorkerBase
wqueue	Utilities/wqueue.h	/^        wqueue() : m_activated{true}, m_killnow(false) {}$/;"	f	class:wqueue
wqueue	Utilities/wqueue.h	/^class wqueue {$/;"	c
writeToFile	DoseCalcIO/kernel.cpp	/^int KERNEL::writeToFile(std::string fname, bool verbose) {$/;"	f	class:KERNEL
writeToFile	DoseCalcIO/roi.cpp	/^int BaseROIMask::writeToFile(std::string fname, bool verbose) {$/;"	f	class:BaseROIMask
writeToFile	DoseCalcIO/roi.cpp	/^int ROIMaskList::writeToFile(std::string fname, bool verbose) {$/;"	f	class:ROIMaskList
writeToFile	DoseCalcIO/volume.h	/^        int writeToFile(const std::string& outfile, const std::string& dset_name="volume") {$/;"	f	class:Volume
writeToFile	DoseCalcIO/volume.h	/^        static int writeToFile(const std::string& outfile, T* data, FrameOfReference& frame, const std::string& dset_name="volume") {$/;"	f	class:Volume
writeToRawFile	DoseCalcIO/volume.h	/^        int writeToRawFile(const std::string& outfile, bool verbose=false) {$/;"	f	class:Volume
write_beam_metadata	DoseCalcIO/sparse_io.cpp	/^int write_beam_metadata(const std::string& filename, const HEADER_BEAM& beam_header) {$/;"	f
write_beam_metadata	dosecalc-beamlet/sparsify_manager.cpp	/^void BaseW2FWorker::write_beam_metadata(BaseW2FWorker::W2FData& data) {$/;"	f	class:BaseW2FWorker
write_beamlet	dosecalc-beamlet/sparsify_manager.cpp	/^void W2FWorker_Central::write_beamlet(BaseW2FWorker::W2FData& data) {$/;"	f	class:W2FWorker_Central
write_beamlet	dosecalc-beamlet/sparsify_manager.cpp	/^void W2FWorker_PerBeamlet::write_beamlet(BaseW2FWorker::W2FData& data) {$/;"	f	class:W2FWorker_PerBeamlet
write_binary_data	DoseCalcIO/binary_io.h	/^int write_binary_data(T *mat, int3 count, const char* filename, bool verbose=false) {$/;"	f
write_binary_data	DoseCalcIO/binary_io.h	/^int write_binary_data(T *mat, uint3 count, const char* filename, bool verbose=false) {$/;"	f
write_debug_data	DoseCalcIO/binary_io.h	/^int write_debug_data(T *mat, int3 count, const char* filename, bool verbose=false) {$/;"	f
write_debug_data	DoseCalcIO/binary_io.h	/^int write_debug_data(T *mat, uint3 count, const char* filename, bool verbose=false) {$/;"	f
write_fluence_map	DoseCalcIO/fluence.cpp	/^int write_fluence_map( BEAM& beam, int beam_id, uint2 size, bool verbose)$/;"	f
write_fmo_results	extern/python/utils/fmo_io.py	/^def write_fmo_results(outfile, fm_wts, col_idx, meta, selected_beams=None, overwrite=False):$/;"	f
write_omni_beam_list	DoseCalcIO/beam.cpp	/^int write_omni_beam_list( std::vector<BEAM>& beams, int beam_count, bool verbose )$/;"	f
write_omni_header	DoseCalcIO/calc_header.cpp	/^int write_omni_header($/;"	f
write_patient_metadata	DoseCalcIO/sparse_io.cpp	/^int write_patient_metadata(const std::string& filename, const HEADER_PATIENT& patient_header) {$/;"	f
write_sparse_beamlet_to_file	DoseCalcIO/sparse_io.cpp	/^int write_sparse_beamlet_to_file(const std::string& filename, const float* array, ArrayProps& props, int(*tofile)(const std::string&, const SparseData&, const void* header), void* header, ROIMaskList* roi_list, const float thresh) {$/;"	f
write_sparse_full	dosecalc-beamlet/sparsify_worker.cpp	/^int FullSparsifyWorker::write_sparse_full(H5::H5File& h5file, SparsifyData& sdata) {$/;"	f	class:FullSparsifyWorker
y0	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline float y0(float a) $/;"	f	file:
y1	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline float y1(float a) $/;"	f	file:
yn	build/CMakeFiles/3.16.0/CompilerIdCUDA/tmp/CMakeCUDACompilerId.cudafe1.cpp	/^static inline float yn(int n, float a) $/;"	f	file:
zenith	DoseCalcIO/beam.h	/^        float  zenith;          \/\/ Couch Angle      [rad]$/;"	m	class:BEAM
~BaseROIMask	DoseCalcIO/roi.cpp	/^BaseROIMask::~BaseROIMask() {}$/;"	f	class:BaseROIMask
~ClearStackOnExit	include/rapidjson/document.h	/^        ~ClearStackOnExit() { d_.ClearStack(); }$/;"	f	struct:GenericDocument::ClearStackOnExit
~ClearStackOnExit	include/rapidjson/reader.h	/^        ~ClearStackOnExit() { r_.ClearStack(); }$/;"	f	struct:GenericReader::ClearStackOnExit
~CudaTimer	CudaUtilities/cuda_timing.cuh	/^        ~CudaTimer() {$/;"	f	class:CudaTimer
~DenseROIMask	DoseCalcIO/roi.h	/^        virtual ~DenseROIMask() {}$/;"	f	class:DenseROIMask
~Exception	include/cuda-common/exception.h	/^Exception<Std_Exception>::~Exception() throw() { }$/;"	f	class:Exception
~GenericArray	include/rapidjson/document.h	/^    ~GenericArray() {}$/;"	f	class:GenericArray
~GenericDocument	include/rapidjson/document.h	/^    ~GenericDocument() {$/;"	f	class:GenericDocument
~GenericObject	include/rapidjson/document.h	/^    ~GenericObject() {}$/;"	f	class:GenericObject
~GenericPointer	include/rapidjson/pointer.h	/^    ~GenericPointer() {$/;"	f	class:GenericPointer
~GenericRegex	include/rapidjson/internal/regex.h	/^    ~GenericRegex() {}$/;"	f	class:internal::GenericRegex
~GenericRegexSearch	include/rapidjson/internal/regex.h	/^    ~GenericRegexSearch() {$/;"	f	class:internal::GenericRegexSearch
~GenericSchemaDocument	include/rapidjson/schema.h	/^    ~GenericSchemaDocument() {$/;"	f	class:GenericSchemaDocument
~GenericSchemaValidator	include/rapidjson/schema.h	/^    ~GenericSchemaValidator() {$/;"	f	class:GenericSchemaValidator
~GenericValue	include/rapidjson/document.h	/^    ~GenericValue() {$/;"	f	class:GenericValue
~IGenericRemoteSchemaDocumentProvider	include/rapidjson/schema.h	/^    virtual ~IGenericRemoteSchemaDocumentProvider() {}$/;"	f	class:IGenericRemoteSchemaDocumentProvider
~ISchemaStateFactory	include/rapidjson/schema.h	/^    virtual ~ISchemaStateFactory() {}$/;"	f	class:internal::ISchemaStateFactory
~ISchemaValidator	include/rapidjson/schema.h	/^    virtual ~ISchemaValidator() {}$/;"	f	class:internal::ISchemaValidator
~MemoryPoolAllocator	include/rapidjson/allocators.h	/^    ~MemoryPoolAllocator() {$/;"	f	class:MemoryPoolAllocator
~PatternProperty	include/rapidjson/schema.h	/^        ~PatternProperty() { $/;"	f	struct:internal::Schema::PatternProperty
~Property	include/rapidjson/schema.h	/^        ~Property() { AllocatorType::Free(dependencies); }$/;"	f	struct:internal::Schema::Property
~ROIMaskList	DoseCalcIO/roi.h	/^        ~ROIMaskList() {}$/;"	f	class:ROIMaskList
~RTImage	RTClasses/rtimages.cpp	/^RTImage::~RTImage() {$/;"	f	class:RTImage
~RTStruct	RTClasses/rtstruct.cpp	/^RTStruct::~RTStruct()$/;"	f	class:RTStruct
~SRWorker	dosecalc-beamlet/sparsify_manager.h	/^        ~SRWorker() { --s_workerid; }$/;"	f	class:SRWorker
~Schema	include/rapidjson/schema.h	/^    ~Schema() {$/;"	f	class:internal::Schema
~SchemaArray	include/rapidjson/schema.h	/^        ~SchemaArray() { AllocatorType::Free(schemas); }$/;"	f	struct:internal::Schema::SchemaArray
~SchemaEntry	include/rapidjson/schema.h	/^        ~SchemaEntry() {$/;"	f	struct:GenericSchemaDocument::SchemaEntry
~SchemaValidationContext	include/rapidjson/schema.h	/^    ~SchemaValidationContext() {$/;"	f	struct:internal::SchemaValidationContext
~SparsifyWorkerBase	dosecalc-beamlet/sparsify_worker.cpp	/^SparsifyWorkerBase::~SparsifyWorkerBase() { s_workerid--; }$/;"	f	class:SparsifyWorkerBase
~Stack	include/rapidjson/internal/stack.h	/^    ~Stack() {$/;"	f	class:internal::Stack
~StreamLocalCopy	include/rapidjson/reader.h	/^    ~StreamLocalCopy() { original_ = s; }$/;"	f	class:internal::StreamLocalCopy
~Thread	Utilities/thread.h	/^        virtual ~Thread() {}$/;"	f	class:Thread
